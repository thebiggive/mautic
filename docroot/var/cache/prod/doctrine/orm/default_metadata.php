<?php

// This file has been auto-generated by the Symfony Cache Component.

return [[

'Mautic__ApiBundle__Entity__oAuth2__RefreshToken__CLASSMETADATA__' => 0,
'Mautic__ApiBundle__Entity__oAuth2__AccessToken__CLASSMETADATA__' => 1,
'Mautic__ApiBundle__Entity__oAuth2__AuthCode__CLASSMETADATA__' => 2,
'Mautic__ApiBundle__Entity__oAuth2__Client__CLASSMETADATA__' => 3,
'Mautic__AssetBundle__Entity__Download__CLASSMETADATA__' => 4,
'Mautic__AssetBundle__Entity__Asset__CLASSMETADATA__' => 5,
'Mautic__CoreBundle__Entity__CommonEntity__CLASSMETADATA__' => 6,
'Mautic__CoreBundle__Entity__FormEntity__CLASSMETADATA__' => 7,
'Mautic__CampaignBundle__Entity__Event__CLASSMETADATA__' => 8,
'Mautic__CampaignBundle__Entity__Campaign__CLASSMETADATA__' => 9,
'Mautic__CampaignBundle__Entity__Lead__CLASSMETADATA__' => 10,
'Mautic__CampaignBundle__Entity__Summary__CLASSMETADATA__' => 11,
'Mautic__CampaignBundle__Entity__LeadEventLog__CLASSMETADATA__' => 12,
'Mautic__CampaignBundle__Entity__FailedLeadEventLog__CLASSMETADATA__' => 13,
'Mautic__CategoryBundle__Entity__Category__CLASSMETADATA__' => 14,
'Mautic__ChannelBundle__Entity__MessageQueue__CLASSMETADATA__' => 15,
'Mautic__ChannelBundle__Entity__Channel__CLASSMETADATA__' => 16,
'Mautic__ChannelBundle__Entity__Message__CLASSMETADATA__' => 17,
'Mautic__CoreBundle__Entity__Cache__CLASSMETADATA__' => 18,
'Mautic__CoreBundle__Entity__IpAddress__CLASSMETADATA__' => 19,
'Mautic__CoreBundle__Entity__AuditLog__CLASSMETADATA__' => 20,
'Mautic__CoreBundle__Entity__Notification__CLASSMETADATA__' => 21,
'Mautic__DashboardBundle__Entity__Widget__CLASSMETADATA__' => 22,
'Mautic__DynamicContentBundle__Entity__DynamicContent__CLASSMETADATA__' => 23,
'Mautic__DynamicContentBundle__Entity__DynamicContentLeadData__CLASSMETADATA__' => 24,
'Mautic__DynamicContentBundle__Entity__Stat__CLASSMETADATA__' => 25,
'Mautic__EmailBundle__Entity__Email__CLASSMETADATA__' => 26,
'Mautic__EmailBundle__Entity__StatDevice__CLASSMETADATA__' => 27,
'Mautic__EmailBundle__Entity__EmailReply__CLASSMETADATA__' => 28,
'Mautic__EmailBundle__Entity__Stat__CLASSMETADATA__' => 29,
'Mautic__EmailBundle__Entity__Copy__CLASSMETADATA__' => 30,
'Mautic__FormBundle__Entity__Action__CLASSMETADATA__' => 31,
'Mautic__FormBundle__Entity__Field__CLASSMETADATA__' => 32,
'Mautic__FormBundle__Entity__Submission__CLASSMETADATA__' => 33,
'Mautic__FormBundle__Entity__Form__CLASSMETADATA__' => 34,
'Mautic__IntegrationsBundle__Entity__ObjectMapping__CLASSMETADATA__' => 35,
'Mautic__IntegrationsBundle__Entity__FieldChange__CLASSMETADATA__' => 36,
'Mautic__LeadBundle__Entity__DoNotContact__CLASSMETADATA__' => 37,
'Mautic__LeadBundle__Entity__Import__CLASSMETADATA__' => 38,
'Mautic__LeadBundle__Entity__Tag__CLASSMETADATA__' => 39,
'Mautic__LeadBundle__Entity__MergeRecord__CLASSMETADATA__' => 40,
'Mautic__LeadBundle__Entity__LeadDevice__CLASSMETADATA__' => 41,
'Mautic__LeadBundle__Entity__Company__CLASSMETADATA__' => 42,
'Mautic__LeadBundle__Entity__LeadNote__CLASSMETADATA__' => 43,
'Mautic__LeadBundle__Entity__FrequencyRule__CLASSMETADATA__' => 44,
'Mautic__LeadBundle__Entity__ListLead__CLASSMETADATA__' => 45,
'Mautic__LeadBundle__Entity__StagesChangeLog__CLASSMETADATA__' => 46,
'Mautic__LeadBundle__Entity__CompanyChangeLog__CLASSMETADATA__' => 47,
'Mautic__LeadBundle__Entity__LeadList__CLASSMETADATA__' => 48,
'Mautic__LeadBundle__Entity__Lead__CLASSMETADATA__' => 49,
'Mautic__LeadBundle__Entity__UtmTag__CLASSMETADATA__' => 50,
'Mautic__LeadBundle__Entity__PointsChangeLog__CLASSMETADATA__' => 51,
'Mautic__LeadBundle__Entity__LeadCategory__CLASSMETADATA__' => 52,
'Mautic__LeadBundle__Entity__LeadField__CLASSMETADATA__' => 53,
'Mautic__LeadBundle__Entity__CompanyLead__CLASSMETADATA__' => 54,
'Mautic__LeadBundle__Entity__LeadEventLog__CLASSMETADATA__' => 55,
'Mautic__NotificationBundle__Entity__PushID__CLASSMETADATA__' => 56,
'Mautic__NotificationBundle__Entity__Notification__CLASSMETADATA__' => 57,
'Mautic__NotificationBundle__Entity__Stat__CLASSMETADATA__' => 58,
'Mautic__PageBundle__Entity__Trackable__CLASSMETADATA__' => 59,
'Mautic__PageBundle__Entity__Hit__CLASSMETADATA__' => 60,
'Mautic__PageBundle__Entity__Page__CLASSMETADATA__' => 61,
'Mautic__PageBundle__Entity__Redirect__CLASSMETADATA__' => 62,
'Mautic__PageBundle__Entity__VideoHit__CLASSMETADATA__' => 63,
'Mautic__PluginBundle__Entity__IntegrationEntity__CLASSMETADATA__' => 64,
'Mautic__PluginBundle__Entity__Plugin__CLASSMETADATA__' => 65,
'Mautic__PluginBundle__Entity__Integration__CLASSMETADATA__' => 66,
'Mautic__PointBundle__Entity__LeadTriggerLog__CLASSMETADATA__' => 67,
'Mautic__PointBundle__Entity__LeadPointLog__CLASSMETADATA__' => 68,
'Mautic__PointBundle__Entity__TriggerEvent__CLASSMETADATA__' => 69,
'Mautic__PointBundle__Entity__Trigger__CLASSMETADATA__' => 70,
'Mautic__PointBundle__Entity__Point__CLASSMETADATA__' => 71,
'Mautic__ReportBundle__Entity__Scheduler__CLASSMETADATA__' => 72,
'Mautic__ReportBundle__Entity__Report__CLASSMETADATA__' => 73,
'Mautic__SmsBundle__Entity__Sms__CLASSMETADATA__' => 74,
'Mautic__SmsBundle__Entity__Stat__CLASSMETADATA__' => 75,
'Mautic__StageBundle__Entity__LeadStageLog__CLASSMETADATA__' => 76,
'Mautic__StageBundle__Entity__Stage__CLASSMETADATA__' => 77,
'Mautic__UserBundle__Entity__User__CLASSMETADATA__' => 78,
'Mautic__UserBundle__Entity__Role__CLASSMETADATA__' => 79,
'Mautic__UserBundle__Entity__IdEntry__CLASSMETADATA__' => 80,
'Mautic__UserBundle__Entity__Permission__CLASSMETADATA__' => 81,
'Mautic__UserBundle__Entity__UserToken__CLASSMETADATA__' => 82,
'Mautic__WebhookBundle__Entity__Event__CLASSMETADATA__' => 83,
'Mautic__WebhookBundle__Entity__Webhook__CLASSMETADATA__' => 84,
'Mautic__WebhookBundle__Entity__WebhookQueue__CLASSMETADATA__' => 85,
'Mautic__WebhookBundle__Entity__Log__CLASSMETADATA__' => 86,
'MauticPlugin__GrapesJsBuilderBundle__Entity__GrapesJsBuilder__CLASSMETADATA__' => 87,
'MauticPlugin__MauticTagManagerBundle__Entity__Tag__CLASSMETADATA__' => 88,
'MauticPlugin__MauticCrmBundle__Entity__PipedriveOwner__CLASSMETADATA__' => 89,
'MauticPlugin__MauticFocusBundle__Entity__Focus__CLASSMETADATA__' => 90,
'MauticPlugin__MauticFocusBundle__Entity__Stat__CLASSMETADATA__' => 91,
'MauticPlugin__MauticSocialBundle__Entity__Tweet__CLASSMETADATA__' => 92,
'MauticPlugin__MauticSocialBundle__Entity__Monitoring__CLASSMETADATA__' => 93,
'MauticPlugin__MauticSocialBundle__Entity__TweetStat__CLASSMETADATA__' => 94,
'MauticPlugin__MauticSocialBundle__Entity__PostCount__CLASSMETADATA__' => 95,
'MauticPlugin__MauticSocialBundle__Entity__Lead__CLASSMETADATA__' => 96,
'MauticPlugin__MauticCitrixBundle__Entity__CitrixEvent__CLASSMETADATA__' => 97,
'FOS__OAuthServerBundle__Entity__AccessToken__CLASSMETADATA__' => 98,
'FOS__OAuthServerBundle__Entity__Client__CLASSMETADATA__' => 99,
'FOS__OAuthServerBundle__Entity__AuthCode__CLASSMETADATA__' => 100,
'FOS__OAuthServerBundle__Entity__RefreshToken__CLASSMETADATA__' => 101,

], [

0 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ClassMetadata')),
            clone ($p['Doctrine\\ORM\\Id\\IdentityGenerator'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Id\\IdentityGenerator')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'Mautic\\ApiBundle\\Entity\\oAuth2\\RefreshToken',
                ],
                'namespace' => [
                    'Mautic\\ApiBundle\\Entity\\oAuth2',
                ],
                'rootEntityName' => [
                    'Mautic\\ApiBundle\\Entity\\oAuth2\\RefreshToken',
                ],
                'identifier' => [
                    [
                        'id',
                    ],
                ],
                'generatorType' => [
                    4,
                ],
                'fieldMappings' => [
                    [
                        'id' => [
                            'fieldName' => 'id',
                            'type' => 'integer',
                            'id' => true,
                            'columnName' => 'id',
                        ],
                        'token' => [
                            'fieldName' => 'token',
                            'type' => 'string',
                            'length' => 191,
                            'unique' => true,
                            'columnName' => 'token',
                        ],
                        'expiresAt' => [
                            'fieldName' => 'expiresAt',
                            'type' => 'bigint',
                            'columnName' => 'expires_at',
                            'nullable' => true,
                        ],
                        'scope' => [
                            'fieldName' => 'scope',
                            'type' => 'string',
                            'length' => 191,
                            'nullable' => true,
                            'columnName' => 'scope',
                        ],
                    ],
                ],
                'fieldNames' => [
                    [
                        'id' => 'id',
                        'token' => 'token',
                        'expires_at' => 'expiresAt',
                        'scope' => 'scope',
                    ],
                ],
                'columnNames' => [
                    [
                        'id' => 'id',
                        'token' => 'token',
                        'expiresAt' => 'expires_at',
                        'scope' => 'scope',
                    ],
                ],
                'table' => [
                    [
                        'name' => 'oauth2_refreshtokens',
                        'indexes' => [
                            'oauth2_refresh_token_search' => [
                                'columns' => [
                                    'token',
                                ],
                            ],
                        ],
                        'uniqueConstraints' => [],
                    ],
                ],
                'associationMappings' => [
                    [
                        'client' => [
                            'fieldName' => 'client',
                            'targetEntity' => 'Mautic\\ApiBundle\\Entity\\oAuth2\\Client',
                            'joinColumns' => [
                                [
                                    'name' => 'client_id',
                                    'referencedColumnName' => 'id',
                                    'nullable' => false,
                                    'unique' => false,
                                    'onDelete' => 'CASCADE',
                                    'columnDefinition' => null,
                                ],
                            ],
                            'type' => 2,
                            'mappedBy' => null,
                            'inversedBy' => null,
                            'isOwningSide' => true,
                            'sourceEntity' => 'Mautic\\ApiBundle\\Entity\\oAuth2\\RefreshToken',
                            'fetch' => 2,
                            'cascade' => [],
                            'isCascadeRemove' => false,
                            'isCascadePersist' => false,
                            'isCascadeRefresh' => false,
                            'isCascadeMerge' => false,
                            'isCascadeDetach' => false,
                            'sourceToTargetKeyColumns' => [
                                'client_id' => 'id',
                            ],
                            'joinColumnFieldNames' => [
                                'client_id' => 'client_id',
                            ],
                            'targetToSourceKeyColumns' => [
                                'id' => 'client_id',
                            ],
                            'orphanRemoval' => false,
                        ],
                        'user' => [
                            'fieldName' => 'user',
                            'targetEntity' => 'Mautic\\UserBundle\\Entity\\User',
                            'joinColumns' => [
                                [
                                    'name' => 'user_id',
                                    'referencedColumnName' => 'id',
                                    'nullable' => false,
                                    'unique' => false,
                                    'onDelete' => 'CASCADE',
                                    'columnDefinition' => null,
                                ],
                            ],
                            'type' => 2,
                            'mappedBy' => null,
                            'inversedBy' => null,
                            'isOwningSide' => true,
                            'sourceEntity' => 'Mautic\\ApiBundle\\Entity\\oAuth2\\RefreshToken',
                            'fetch' => 2,
                            'cascade' => [],
                            'isCascadeRemove' => false,
                            'isCascadePersist' => false,
                            'isCascadeRefresh' => false,
                            'isCascadeMerge' => false,
                            'isCascadeDetach' => false,
                            'sourceToTargetKeyColumns' => [
                                'user_id' => 'id',
                            ],
                            'joinColumnFieldNames' => [
                                'user_id' => 'user_id',
                            ],
                            'targetToSourceKeyColumns' => [
                                'id' => 'user_id',
                            ],
                            'orphanRemoval' => false,
                        ],
                    ],
                ],
                'idGenerator' => [
                    $o[1],
                ],
                'changeTrackingPolicy' => [
                    2,
                ],
            ],
        ],
        $o[0],
        []
    );
},
1 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ClassMetadata')),
            clone ($p['Doctrine\\ORM\\Id\\IdentityGenerator'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Id\\IdentityGenerator')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'Mautic\\ApiBundle\\Entity\\oAuth2\\AccessToken',
                ],
                'namespace' => [
                    'Mautic\\ApiBundle\\Entity\\oAuth2',
                ],
                'rootEntityName' => [
                    'Mautic\\ApiBundle\\Entity\\oAuth2\\AccessToken',
                ],
                'identifier' => [
                    [
                        'id',
                    ],
                ],
                'generatorType' => [
                    4,
                ],
                'fieldMappings' => [
                    [
                        'id' => [
                            'fieldName' => 'id',
                            'type' => 'integer',
                            'id' => true,
                            'columnName' => 'id',
                        ],
                        'token' => [
                            'fieldName' => 'token',
                            'type' => 'string',
                            'length' => 191,
                            'unique' => true,
                            'columnName' => 'token',
                        ],
                        'expiresAt' => [
                            'fieldName' => 'expiresAt',
                            'type' => 'bigint',
                            'columnName' => 'expires_at',
                            'nullable' => true,
                        ],
                        'scope' => [
                            'fieldName' => 'scope',
                            'type' => 'string',
                            'length' => 191,
                            'nullable' => true,
                            'columnName' => 'scope',
                        ],
                    ],
                ],
                'fieldNames' => [
                    [
                        'id' => 'id',
                        'token' => 'token',
                        'expires_at' => 'expiresAt',
                        'scope' => 'scope',
                    ],
                ],
                'columnNames' => [
                    [
                        'id' => 'id',
                        'token' => 'token',
                        'expiresAt' => 'expires_at',
                        'scope' => 'scope',
                    ],
                ],
                'table' => [
                    [
                        'name' => 'oauth2_accesstokens',
                        'indexes' => [
                            'oauth2_access_token_search' => [
                                'columns' => [
                                    'token',
                                ],
                            ],
                        ],
                        'uniqueConstraints' => [],
                    ],
                ],
                'associationMappings' => [
                    [
                        'client' => [
                            'fieldName' => 'client',
                            'targetEntity' => 'Mautic\\ApiBundle\\Entity\\oAuth2\\Client',
                            'joinColumns' => [
                                [
                                    'name' => 'client_id',
                                    'referencedColumnName' => 'id',
                                    'nullable' => false,
                                    'unique' => false,
                                    'onDelete' => 'CASCADE',
                                    'columnDefinition' => null,
                                ],
                            ],
                            'type' => 2,
                            'mappedBy' => null,
                            'inversedBy' => null,
                            'isOwningSide' => true,
                            'sourceEntity' => 'Mautic\\ApiBundle\\Entity\\oAuth2\\AccessToken',
                            'fetch' => 2,
                            'cascade' => [],
                            'isCascadeRemove' => false,
                            'isCascadePersist' => false,
                            'isCascadeRefresh' => false,
                            'isCascadeMerge' => false,
                            'isCascadeDetach' => false,
                            'sourceToTargetKeyColumns' => [
                                'client_id' => 'id',
                            ],
                            'joinColumnFieldNames' => [
                                'client_id' => 'client_id',
                            ],
                            'targetToSourceKeyColumns' => [
                                'id' => 'client_id',
                            ],
                            'orphanRemoval' => false,
                        ],
                        'user' => [
                            'fieldName' => 'user',
                            'targetEntity' => 'Mautic\\UserBundle\\Entity\\User',
                            'joinColumns' => [
                                [
                                    'name' => 'user_id',
                                    'referencedColumnName' => 'id',
                                    'nullable' => true,
                                    'unique' => false,
                                    'onDelete' => 'CASCADE',
                                    'columnDefinition' => null,
                                ],
                            ],
                            'type' => 2,
                            'mappedBy' => null,
                            'inversedBy' => null,
                            'isOwningSide' => true,
                            'sourceEntity' => 'Mautic\\ApiBundle\\Entity\\oAuth2\\AccessToken',
                            'fetch' => 2,
                            'cascade' => [],
                            'isCascadeRemove' => false,
                            'isCascadePersist' => false,
                            'isCascadeRefresh' => false,
                            'isCascadeMerge' => false,
                            'isCascadeDetach' => false,
                            'sourceToTargetKeyColumns' => [
                                'user_id' => 'id',
                            ],
                            'joinColumnFieldNames' => [
                                'user_id' => 'user_id',
                            ],
                            'targetToSourceKeyColumns' => [
                                'id' => 'user_id',
                            ],
                            'orphanRemoval' => false,
                        ],
                    ],
                ],
                'idGenerator' => [
                    $o[1],
                ],
                'changeTrackingPolicy' => [
                    2,
                ],
            ],
        ],
        $o[0],
        []
    );
},
2 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ClassMetadata')),
            clone ($p['Doctrine\\ORM\\Id\\IdentityGenerator'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Id\\IdentityGenerator')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'Mautic\\ApiBundle\\Entity\\oAuth2\\AuthCode',
                ],
                'namespace' => [
                    'Mautic\\ApiBundle\\Entity\\oAuth2',
                ],
                'rootEntityName' => [
                    'Mautic\\ApiBundle\\Entity\\oAuth2\\AuthCode',
                ],
                'identifier' => [
                    [
                        'id',
                    ],
                ],
                'generatorType' => [
                    4,
                ],
                'fieldMappings' => [
                    [
                        'id' => [
                            'fieldName' => 'id',
                            'type' => 'integer',
                            'id' => true,
                            'columnName' => 'id',
                        ],
                        'token' => [
                            'fieldName' => 'token',
                            'type' => 'string',
                            'length' => 191,
                            'unique' => true,
                            'columnName' => 'token',
                        ],
                        'expiresAt' => [
                            'fieldName' => 'expiresAt',
                            'type' => 'bigint',
                            'columnName' => 'expires_at',
                            'nullable' => true,
                        ],
                        'scope' => [
                            'fieldName' => 'scope',
                            'type' => 'string',
                            'length' => 191,
                            'nullable' => true,
                            'columnName' => 'scope',
                        ],
                        'redirectUri' => [
                            'fieldName' => 'redirectUri',
                            'type' => 'text',
                            'columnName' => 'redirect_uri',
                        ],
                    ],
                ],
                'fieldNames' => [
                    [
                        'id' => 'id',
                        'token' => 'token',
                        'expires_at' => 'expiresAt',
                        'scope' => 'scope',
                        'redirect_uri' => 'redirectUri',
                    ],
                ],
                'columnNames' => [
                    [
                        'id' => 'id',
                        'token' => 'token',
                        'expiresAt' => 'expires_at',
                        'scope' => 'scope',
                        'redirectUri' => 'redirect_uri',
                    ],
                ],
                'table' => [
                    [
                        'name' => 'oauth2_authcodes',
                        'indexes' => [],
                        'uniqueConstraints' => [],
                    ],
                ],
                'associationMappings' => [
                    [
                        'client' => [
                            'fieldName' => 'client',
                            'targetEntity' => 'Mautic\\ApiBundle\\Entity\\oAuth2\\Client',
                            'joinColumns' => [
                                [
                                    'name' => 'client_id',
                                    'referencedColumnName' => 'id',
                                    'nullable' => false,
                                    'unique' => false,
                                    'onDelete' => 'CASCADE',
                                    'columnDefinition' => null,
                                ],
                            ],
                            'type' => 2,
                            'mappedBy' => null,
                            'inversedBy' => null,
                            'isOwningSide' => true,
                            'sourceEntity' => 'Mautic\\ApiBundle\\Entity\\oAuth2\\AuthCode',
                            'fetch' => 2,
                            'cascade' => [],
                            'isCascadeRemove' => false,
                            'isCascadePersist' => false,
                            'isCascadeRefresh' => false,
                            'isCascadeMerge' => false,
                            'isCascadeDetach' => false,
                            'sourceToTargetKeyColumns' => [
                                'client_id' => 'id',
                            ],
                            'joinColumnFieldNames' => [
                                'client_id' => 'client_id',
                            ],
                            'targetToSourceKeyColumns' => [
                                'id' => 'client_id',
                            ],
                            'orphanRemoval' => false,
                        ],
                        'user' => [
                            'fieldName' => 'user',
                            'targetEntity' => 'Mautic\\UserBundle\\Entity\\User',
                            'joinColumns' => [
                                [
                                    'name' => 'user_id',
                                    'referencedColumnName' => 'id',
                                    'nullable' => false,
                                    'unique' => false,
                                    'onDelete' => 'CASCADE',
                                    'columnDefinition' => null,
                                ],
                            ],
                            'type' => 2,
                            'mappedBy' => null,
                            'inversedBy' => null,
                            'isOwningSide' => true,
                            'sourceEntity' => 'Mautic\\ApiBundle\\Entity\\oAuth2\\AuthCode',
                            'fetch' => 2,
                            'cascade' => [],
                            'isCascadeRemove' => false,
                            'isCascadePersist' => false,
                            'isCascadeRefresh' => false,
                            'isCascadeMerge' => false,
                            'isCascadeDetach' => false,
                            'sourceToTargetKeyColumns' => [
                                'user_id' => 'id',
                            ],
                            'joinColumnFieldNames' => [
                                'user_id' => 'user_id',
                            ],
                            'targetToSourceKeyColumns' => [
                                'id' => 'user_id',
                            ],
                            'orphanRemoval' => false,
                        ],
                    ],
                ],
                'idGenerator' => [
                    $o[1],
                ],
                'changeTrackingPolicy' => [
                    2,
                ],
            ],
        ],
        $o[0],
        []
    );
},
3 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ClassMetadata')),
            clone ($p['Doctrine\\ORM\\Id\\IdentityGenerator'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Id\\IdentityGenerator')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'Mautic\\ApiBundle\\Entity\\oAuth2\\Client',
                ],
                'namespace' => [
                    'Mautic\\ApiBundle\\Entity\\oAuth2',
                ],
                'rootEntityName' => [
                    'Mautic\\ApiBundle\\Entity\\oAuth2\\Client',
                ],
                'customRepositoryClassName' => [
                    'Mautic\\ApiBundle\\Entity\\oAuth2\\ClientRepository',
                ],
                'identifier' => [
                    [
                        'id',
                    ],
                ],
                'generatorType' => [
                    4,
                ],
                'fieldMappings' => [
                    [
                        'id' => [
                            'fieldName' => 'id',
                            'type' => 'integer',
                            'id' => true,
                            'options' => [
                                'unsigned' => true,
                            ],
                            'columnName' => 'id',
                        ],
                        'name' => [
                            'fieldName' => 'name',
                            'type' => 'string',
                            'length' => 191,
                            'columnName' => 'name',
                        ],
                        'randomId' => [
                            'fieldName' => 'randomId',
                            'type' => 'string',
                            'length' => 191,
                            'columnName' => 'random_id',
                        ],
                        'secret' => [
                            'length' => 191,
                            'fieldName' => 'secret',
                            'type' => 'string',
                            'columnName' => 'secret',
                        ],
                        'redirectUris' => [
                            'fieldName' => 'redirectUris',
                            'type' => 'array',
                            'columnName' => 'redirect_uris',
                        ],
                        'allowedGrantTypes' => [
                            'fieldName' => 'allowedGrantTypes',
                            'type' => 'array',
                            'columnName' => 'allowed_grant_types',
                        ],
                    ],
                ],
                'fieldNames' => [
                    [
                        'id' => 'id',
                        'name' => 'name',
                        'random_id' => 'randomId',
                        'secret' => 'secret',
                        'redirect_uris' => 'redirectUris',
                        'allowed_grant_types' => 'allowedGrantTypes',
                    ],
                ],
                'columnNames' => [
                    [
                        'id' => 'id',
                        'name' => 'name',
                        'randomId' => 'random_id',
                        'secret' => 'secret',
                        'redirectUris' => 'redirect_uris',
                        'allowedGrantTypes' => 'allowed_grant_types',
                    ],
                ],
                'table' => [
                    [
                        'name' => 'oauth2_clients',
                        'indexes' => [
                            'client_id_search' => [
                                'columns' => [
                                    'random_id',
                                ],
                            ],
                        ],
                        'uniqueConstraints' => [],
                    ],
                ],
                'associationMappings' => [
                    [
                        'users' => [
                            'fieldName' => 'users',
                            'targetEntity' => 'Mautic\\UserBundle\\Entity\\User',
                            'fetch' => 4,
                            'joinTable' => [
                                'joinColumns' => [
                                    [
                                        'name' => 'client_id',
                                        'referencedColumnName' => 'id',
                                        'nullable' => false,
                                        'unique' => false,
                                        'onDelete' => 'CASCADE',
                                        'columnDefinition' => null,
                                    ],
                                ],
                                'inverseJoinColumns' => [
                                    [
                                        'name' => 'user_id',
                                        'referencedColumnName' => 'id',
                                        'nullable' => false,
                                        'unique' => false,
                                        'onDelete' => 'CASCADE',
                                        'columnDefinition' => null,
                                    ],
                                ],
                                'name' => 'oauth2_user_client_xref',
                            ],
                            'type' => 8,
                            'mappedBy' => null,
                            'inversedBy' => null,
                            'isOwningSide' => true,
                            'sourceEntity' => 'Mautic\\ApiBundle\\Entity\\oAuth2\\Client',
                            'cascade' => [],
                            'isCascadeRemove' => false,
                            'isCascadePersist' => false,
                            'isCascadeRefresh' => false,
                            'isCascadeMerge' => false,
                            'isCascadeDetach' => false,
                            'joinTableColumns' => [
                                'client_id',
                                'user_id',
                            ],
                            'isOnDeleteCascade' => true,
                            'relationToSourceKeyColumns' => [
                                'client_id' => 'id',
                            ],
                            'relationToTargetKeyColumns' => [
                                'user_id' => 'id',
                            ],
                            'orphanRemoval' => false,
                        ],
                        'role' => [
                            'fieldName' => 'role',
                            'targetEntity' => 'Mautic\\UserBundle\\Entity\\Role',
                            'cascade' => [
                                'persist',
                            ],
                            'joinColumns' => [
                                [
                                    'name' => 'role_id',
                                    'referencedColumnName' => 'id',
                                    'nullable' => true,
                                    'unique' => false,
                                    'onDelete' => null,
                                    'columnDefinition' => null,
                                ],
                            ],
                            'type' => 2,
                            'mappedBy' => null,
                            'inversedBy' => null,
                            'isOwningSide' => true,
                            'sourceEntity' => 'Mautic\\ApiBundle\\Entity\\oAuth2\\Client',
                            'fetch' => 2,
                            'isCascadeRemove' => false,
                            'isCascadePersist' => true,
                            'isCascadeRefresh' => false,
                            'isCascadeMerge' => false,
                            'isCascadeDetach' => false,
                            'sourceToTargetKeyColumns' => [
                                'role_id' => 'id',
                            ],
                            'joinColumnFieldNames' => [
                                'role_id' => 'role_id',
                            ],
                            'targetToSourceKeyColumns' => [
                                'id' => 'role_id',
                            ],
                            'orphanRemoval' => false,
                        ],
                    ],
                ],
                'idGenerator' => [
                    $o[1],
                ],
                'changeTrackingPolicy' => [
                    2,
                ],
            ],
        ],
        $o[0],
        []
    );
},
4 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ClassMetadata')),
            clone ($p['Doctrine\\ORM\\Id\\BigIntegerIdentityGenerator'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Id\\BigIntegerIdentityGenerator')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'Mautic\\AssetBundle\\Entity\\Download',
                ],
                'namespace' => [
                    'Mautic\\AssetBundle\\Entity',
                ],
                'rootEntityName' => [
                    'Mautic\\AssetBundle\\Entity\\Download',
                ],
                'customRepositoryClassName' => [
                    'Mautic\\AssetBundle\\Entity\\DownloadRepository',
                ],
                'identifier' => [
                    [
                        'id',
                    ],
                ],
                'generatorType' => [
                    4,
                ],
                'fieldMappings' => [
                    [
                        'id' => [
                            'fieldName' => 'id',
                            'columnName' => 'id',
                            'id' => true,
                            'nullable' => false,
                            'type' => 'bigint',
                            'options' => [
                                'unsigned' => true,
                            ],
                        ],
                        'dateDownload' => [
                            'fieldName' => 'dateDownload',
                            'type' => 'datetime',
                            'columnName' => 'date_download',
                        ],
                        'code' => [
                            'fieldName' => 'code',
                            'type' => 'integer',
                            'columnName' => 'code',
                        ],
                        'referer' => [
                            'fieldName' => 'referer',
                            'type' => 'text',
                            'nullable' => true,
                            'columnName' => 'referer',
                        ],
                        'trackingId' => [
                            'fieldName' => 'trackingId',
                            'type' => 'string',
                            'length' => 191,
                            'columnName' => 'tracking_id',
                        ],
                        'source' => [
                            'fieldName' => 'source',
                            'type' => 'string',
                            'length' => 191,
                            'nullable' => true,
                            'columnName' => 'source',
                        ],
                        'sourceId' => [
                            'fieldName' => 'sourceId',
                            'type' => 'integer',
                            'columnName' => 'source_id',
                            'nullable' => true,
                        ],
                    ],
                ],
                'fieldNames' => [
                    [
                        'id' => 'id',
                        'date_download' => 'dateDownload',
                        'code' => 'code',
                        'referer' => 'referer',
                        'tracking_id' => 'trackingId',
                        'source' => 'source',
                        'source_id' => 'sourceId',
                    ],
                ],
                'columnNames' => [
                    [
                        'id' => 'id',
                        'dateDownload' => 'date_download',
                        'code' => 'code',
                        'referer' => 'referer',
                        'trackingId' => 'tracking_id',
                        'source' => 'source',
                        'sourceId' => 'source_id',
                    ],
                ],
                'table' => [
                    [
                        'name' => 'asset_downloads',
                        'indexes' => [
                            'download_tracking_search' => [
                                'columns' => [
                                    'tracking_id',
                                ],
                            ],
                            'download_source_search' => [
                                'columns' => [
                                    'source',
                                    'source_id',
                                ],
                            ],
                            'asset_date_download' => [
                                'columns' => [
                                    'date_download',
                                ],
                            ],
                        ],
                        'uniqueConstraints' => [],
                    ],
                ],
                'associationMappings' => [
                    [
                        'asset' => [
                            'fieldName' => 'asset',
                            'targetEntity' => 'Mautic\\AssetBundle\\Entity\\Asset',
                            'joinColumns' => [
                                [
                                    'name' => 'asset_id',
                                    'referencedColumnName' => 'id',
                                    'nullable' => true,
                                    'unique' => false,
                                    'onDelete' => 'CASCADE',
                                    'columnDefinition' => null,
                                ],
                            ],
                            'type' => 2,
                            'mappedBy' => null,
                            'inversedBy' => null,
                            'isOwningSide' => true,
                            'sourceEntity' => 'Mautic\\AssetBundle\\Entity\\Download',
                            'fetch' => 2,
                            'cascade' => [],
                            'isCascadeRemove' => false,
                            'isCascadePersist' => false,
                            'isCascadeRefresh' => false,
                            'isCascadeMerge' => false,
                            'isCascadeDetach' => false,
                            'sourceToTargetKeyColumns' => [
                                'asset_id' => 'id',
                            ],
                            'joinColumnFieldNames' => [
                                'asset_id' => 'asset_id',
                            ],
                            'targetToSourceKeyColumns' => [
                                'id' => 'asset_id',
                            ],
                            'orphanRemoval' => false,
                        ],
                        'ipAddress' => [
                            'fieldName' => 'ipAddress',
                            'targetEntity' => 'Mautic\\CoreBundle\\Entity\\IpAddress',
                            'cascade' => [
                                'persist',
                                'merge',
                                'detach',
                            ],
                            'joinColumns' => [
                                [
                                    'name' => 'ip_id',
                                    'referencedColumnName' => 'id',
                                    'nullable' => false,
                                    'unique' => false,
                                    'onDelete' => null,
                                    'columnDefinition' => null,
                                ],
                            ],
                            'type' => 2,
                            'mappedBy' => null,
                            'inversedBy' => null,
                            'isOwningSide' => true,
                            'sourceEntity' => 'Mautic\\AssetBundle\\Entity\\Download',
                            'fetch' => 2,
                            'isCascadeRemove' => false,
                            'isCascadePersist' => true,
                            'isCascadeRefresh' => false,
                            'isCascadeMerge' => true,
                            'isCascadeDetach' => true,
                            'sourceToTargetKeyColumns' => [
                                'ip_id' => 'id',
                            ],
                            'joinColumnFieldNames' => [
                                'ip_id' => 'ip_id',
                            ],
                            'targetToSourceKeyColumns' => [
                                'id' => 'ip_id',
                            ],
                            'orphanRemoval' => false,
                        ],
                        'lead' => [
                            'fieldName' => 'lead',
                            'targetEntity' => 'Mautic\\LeadBundle\\Entity\\Lead',
                            'joinColumns' => [
                                [
                                    'name' => 'lead_id',
                                    'referencedColumnName' => 'id',
                                    'nullable' => true,
                                    'unique' => false,
                                    'onDelete' => 'SET NULL',
                                    'columnDefinition' => null,
                                ],
                            ],
                            'type' => 2,
                            'mappedBy' => null,
                            'inversedBy' => null,
                            'isOwningSide' => true,
                            'sourceEntity' => 'Mautic\\AssetBundle\\Entity\\Download',
                            'fetch' => 2,
                            'cascade' => [],
                            'isCascadeRemove' => false,
                            'isCascadePersist' => false,
                            'isCascadeRefresh' => false,
                            'isCascadeMerge' => false,
                            'isCascadeDetach' => false,
                            'sourceToTargetKeyColumns' => [
                                'lead_id' => 'id',
                            ],
                            'joinColumnFieldNames' => [
                                'lead_id' => 'lead_id',
                            ],
                            'targetToSourceKeyColumns' => [
                                'id' => 'lead_id',
                            ],
                            'orphanRemoval' => false,
                        ],
                        'email' => [
                            'fieldName' => 'email',
                            'targetEntity' => 'Mautic\\EmailBundle\\Entity\\Email',
                            'joinColumns' => [
                                [
                                    'name' => 'email_id',
                                    'referencedColumnName' => 'id',
                                    'nullable' => true,
                                    'unique' => false,
                                    'onDelete' => 'SET NULL',
                                    'columnDefinition' => null,
                                ],
                            ],
                            'type' => 2,
                            'mappedBy' => null,
                            'inversedBy' => null,
                            'isOwningSide' => true,
                            'sourceEntity' => 'Mautic\\AssetBundle\\Entity\\Download',
                            'fetch' => 2,
                            'cascade' => [],
                            'isCascadeRemove' => false,
                            'isCascadePersist' => false,
                            'isCascadeRefresh' => false,
                            'isCascadeMerge' => false,
                            'isCascadeDetach' => false,
                            'sourceToTargetKeyColumns' => [
                                'email_id' => 'id',
                            ],
                            'joinColumnFieldNames' => [
                                'email_id' => 'email_id',
                            ],
                            'targetToSourceKeyColumns' => [
                                'id' => 'email_id',
                            ],
                            'orphanRemoval' => false,
                        ],
                    ],
                ],
                'idGenerator' => [
                    $o[1],
                ],
                'changeTrackingPolicy' => [
                    2,
                ],
            ],
        ],
        $o[0],
        []
    );
},
5 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ClassMetadata')),
            clone ($p['Doctrine\\ORM\\Id\\IdentityGenerator'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Id\\IdentityGenerator')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'Mautic\\AssetBundle\\Entity\\Asset',
                ],
                'namespace' => [
                    'Mautic\\AssetBundle\\Entity',
                ],
                'rootEntityName' => [
                    'Mautic\\AssetBundle\\Entity\\Asset',
                ],
                'customRepositoryClassName' => [
                    'Mautic\\AssetBundle\\Entity\\AssetRepository',
                ],
                'identifier' => [
                    [
                        'id',
                    ],
                ],
                'generatorType' => [
                    4,
                ],
                'fieldMappings' => [
                    [
                        'isPublished' => [
                            'fieldName' => 'isPublished',
                            'type' => 'boolean',
                            'columnName' => 'is_published',
                            'declared' => 'Mautic\\CoreBundle\\Entity\\FormEntity',
                        ],
                        'dateAdded' => [
                            'fieldName' => 'dateAdded',
                            'type' => 'datetime',
                            'columnName' => 'date_added',
                            'nullable' => true,
                            'declared' => 'Mautic\\CoreBundle\\Entity\\FormEntity',
                        ],
                        'createdBy' => [
                            'fieldName' => 'createdBy',
                            'type' => 'integer',
                            'columnName' => 'created_by',
                            'nullable' => true,
                            'declared' => 'Mautic\\CoreBundle\\Entity\\FormEntity',
                        ],
                        'createdByUser' => [
                            'fieldName' => 'createdByUser',
                            'type' => 'string',
                            'length' => 191,
                            'columnName' => 'created_by_user',
                            'nullable' => true,
                            'declared' => 'Mautic\\CoreBundle\\Entity\\FormEntity',
                        ],
                        'dateModified' => [
                            'fieldName' => 'dateModified',
                            'type' => 'datetime',
                            'columnName' => 'date_modified',
                            'nullable' => true,
                            'declared' => 'Mautic\\CoreBundle\\Entity\\FormEntity',
                        ],
                        'modifiedBy' => [
                            'fieldName' => 'modifiedBy',
                            'type' => 'integer',
                            'columnName' => 'modified_by',
                            'nullable' => true,
                            'declared' => 'Mautic\\CoreBundle\\Entity\\FormEntity',
                        ],
                        'modifiedByUser' => [
                            'fieldName' => 'modifiedByUser',
                            'type' => 'string',
                            'length' => 191,
                            'columnName' => 'modified_by_user',
                            'nullable' => true,
                            'declared' => 'Mautic\\CoreBundle\\Entity\\FormEntity',
                        ],
                        'checkedOut' => [
                            'fieldName' => 'checkedOut',
                            'type' => 'datetime',
                            'columnName' => 'checked_out',
                            'nullable' => true,
                            'declared' => 'Mautic\\CoreBundle\\Entity\\FormEntity',
                        ],
                        'checkedOutBy' => [
                            'fieldName' => 'checkedOutBy',
                            'type' => 'integer',
                            'columnName' => 'checked_out_by',
                            'nullable' => true,
                            'declared' => 'Mautic\\CoreBundle\\Entity\\FormEntity',
                        ],
                        'checkedOutByUser' => [
                            'fieldName' => 'checkedOutByUser',
                            'type' => 'string',
                            'length' => 191,
                            'columnName' => 'checked_out_by_user',
                            'nullable' => true,
                            'declared' => 'Mautic\\CoreBundle\\Entity\\FormEntity',
                        ],
                        'id' => [
                            'fieldName' => 'id',
                            'type' => 'integer',
                            'id' => true,
                            'options' => [
                                'unsigned' => true,
                            ],
                            'columnName' => 'id',
                        ],
                        'title' => [
                            'fieldName' => 'title',
                            'type' => 'string',
                            'length' => 191,
                            'columnName' => 'title',
                        ],
                        'description' => [
                            'fieldName' => 'description',
                            'type' => 'text',
                            'nullable' => true,
                            'columnName' => 'description',
                        ],
                        'alias' => [
                            'length' => 191,
                            'fieldName' => 'alias',
                            'type' => 'string',
                            'columnName' => 'alias',
                        ],
                        'storageLocation' => [
                            'fieldName' => 'storageLocation',
                            'type' => 'string',
                            'length' => 191,
                            'columnName' => 'storage_location',
                            'nullable' => true,
                        ],
                        'path' => [
                            'fieldName' => 'path',
                            'type' => 'string',
                            'length' => 191,
                            'nullable' => true,
                            'columnName' => 'path',
                        ],
                        'remotePath' => [
                            'fieldName' => 'remotePath',
                            'type' => 'text',
                            'columnName' => 'remote_path',
                            'nullable' => true,
                        ],
                        'originalFileName' => [
                            'fieldName' => 'originalFileName',
                            'type' => 'text',
                            'columnName' => 'original_file_name',
                            'nullable' => true,
                        ],
                        'language' => [
                            'fieldName' => 'language',
                            'type' => 'string',
                            'length' => 191,
                            'columnName' => 'lang',
                        ],
                        'publishUp' => [
                            'fieldName' => 'publishUp',
                            'type' => 'datetime',
                            'columnName' => 'publish_up',
                            'nullable' => true,
                        ],
                        'publishDown' => [
                            'fieldName' => 'publishDown',
                            'type' => 'datetime',
                            'columnName' => 'publish_down',
                            'nullable' => true,
                        ],
                        'downloadCount' => [
                            'fieldName' => 'downloadCount',
                            'type' => 'integer',
                            'columnName' => 'download_count',
                        ],
                        'uniqueDownloadCount' => [
                            'fieldName' => 'uniqueDownloadCount',
                            'type' => 'integer',
                            'columnName' => 'unique_download_count',
                        ],
                        'revision' => [
                            'fieldName' => 'revision',
                            'type' => 'integer',
                            'columnName' => 'revision',
                        ],
                        'extension' => [
                            'fieldName' => 'extension',
                            'type' => 'string',
                            'length' => 191,
                            'nullable' => true,
                            'columnName' => 'extension',
                        ],
                        'mime' => [
                            'fieldName' => 'mime',
                            'type' => 'string',
                            'length' => 191,
                            'nullable' => true,
                            'columnName' => 'mime',
                        ],
                        'size' => [
                            'fieldName' => 'size',
                            'type' => 'integer',
                            'nullable' => true,
                            'columnName' => 'size',
                        ],
                        'disallow' => [
                            'fieldName' => 'disallow',
                            'type' => 'boolean',
                            'nullable' => true,
                            'columnName' => 'disallow',
                        ],
                    ],
                ],
                'fieldNames' => [
                    [
                        'is_published' => 'isPublished',
                        'date_added' => 'dateAdded',
                        'created_by' => 'createdBy',
                        'created_by_user' => 'createdByUser',
                        'date_modified' => 'dateModified',
                        'modified_by' => 'modifiedBy',
                        'modified_by_user' => 'modifiedByUser',
                        'checked_out' => 'checkedOut',
                        'checked_out_by' => 'checkedOutBy',
                        'checked_out_by_user' => 'checkedOutByUser',
                        'id' => 'id',
                        'title' => 'title',
                        'description' => 'description',
                        'alias' => 'alias',
                        'storage_location' => 'storageLocation',
                        'path' => 'path',
                        'remote_path' => 'remotePath',
                        'original_file_name' => 'originalFileName',
                        'lang' => 'language',
                        'publish_up' => 'publishUp',
                        'publish_down' => 'publishDown',
                        'download_count' => 'downloadCount',
                        'unique_download_count' => 'uniqueDownloadCount',
                        'revision' => 'revision',
                        'extension' => 'extension',
                        'mime' => 'mime',
                        'size' => 'size',
                        'disallow' => 'disallow',
                    ],
                ],
                'columnNames' => [
                    [
                        'isPublished' => 'is_published',
                        'dateAdded' => 'date_added',
                        'createdBy' => 'created_by',
                        'createdByUser' => 'created_by_user',
                        'dateModified' => 'date_modified',
                        'modifiedBy' => 'modified_by',
                        'modifiedByUser' => 'modified_by_user',
                        'checkedOut' => 'checked_out',
                        'checkedOutBy' => 'checked_out_by',
                        'checkedOutByUser' => 'checked_out_by_user',
                        'id' => 'id',
                        'title' => 'title',
                        'description' => 'description',
                        'alias' => 'alias',
                        'storageLocation' => 'storage_location',
                        'path' => 'path',
                        'remotePath' => 'remote_path',
                        'originalFileName' => 'original_file_name',
                        'language' => 'lang',
                        'publishUp' => 'publish_up',
                        'publishDown' => 'publish_down',
                        'downloadCount' => 'download_count',
                        'uniqueDownloadCount' => 'unique_download_count',
                        'revision' => 'revision',
                        'extension' => 'extension',
                        'mime' => 'mime',
                        'size' => 'size',
                        'disallow' => 'disallow',
                    ],
                ],
                'table' => [
                    [
                        'name' => 'assets',
                        'indexes' => [
                            'asset_alias_search' => [
                                'columns' => [
                                    'alias',
                                ],
                            ],
                        ],
                        'uniqueConstraints' => [],
                    ],
                ],
                'associationMappings' => [
                    [
                        'category' => [
                            'fieldName' => 'category',
                            'targetEntity' => 'Mautic\\CategoryBundle\\Entity\\Category',
                            'cascade' => [
                                'merge',
                                'detach',
                            ],
                            'joinColumns' => [
                                [
                                    'name' => 'category_id',
                                    'referencedColumnName' => 'id',
                                    'nullable' => true,
                                    'unique' => false,
                                    'onDelete' => 'SET NULL',
                                    'columnDefinition' => null,
                                ],
                            ],
                            'type' => 2,
                            'mappedBy' => null,
                            'inversedBy' => null,
                            'isOwningSide' => true,
                            'sourceEntity' => 'Mautic\\AssetBundle\\Entity\\Asset',
                            'fetch' => 2,
                            'isCascadeRemove' => false,
                            'isCascadePersist' => false,
                            'isCascadeRefresh' => false,
                            'isCascadeMerge' => true,
                            'isCascadeDetach' => true,
                            'sourceToTargetKeyColumns' => [
                                'category_id' => 'id',
                            ],
                            'joinColumnFieldNames' => [
                                'category_id' => 'category_id',
                            ],
                            'targetToSourceKeyColumns' => [
                                'id' => 'category_id',
                            ],
                            'orphanRemoval' => false,
                        ],
                    ],
                ],
                'idGenerator' => [
                    $o[1],
                ],
                'changeTrackingPolicy' => [
                    2,
                ],
            ],
        ],
        $o[0],
        []
    );
},
6 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ClassMetadata')),
            clone ($p['Doctrine\\ORM\\Id\\AssignedGenerator'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Id\\AssignedGenerator')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'Mautic\\CoreBundle\\Entity\\CommonEntity',
                ],
                'namespace' => [
                    'Mautic\\CoreBundle\\Entity',
                ],
                'rootEntityName' => [
                    'Mautic\\CoreBundle\\Entity\\CommonEntity',
                ],
                'isMappedSuperclass' => [
                    true,
                ],
                'table' => [
                    [
                        'name' => 'CommonEntity',
                        'indexes' => [],
                        'uniqueConstraints' => [],
                    ],
                ],
                'idGenerator' => [
                    $o[1],
                ],
                'changeTrackingPolicy' => [
                    2,
                ],
            ],
        ],
        $o[0],
        []
    );
},
7 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ClassMetadata')),
            clone ($p['Doctrine\\ORM\\Id\\AssignedGenerator'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Id\\AssignedGenerator')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'Mautic\\CoreBundle\\Entity\\FormEntity',
                ],
                'namespace' => [
                    'Mautic\\CoreBundle\\Entity',
                ],
                'rootEntityName' => [
                    'Mautic\\CoreBundle\\Entity\\FormEntity',
                ],
                'isMappedSuperclass' => [
                    true,
                ],
                'fieldMappings' => [
                    [
                        'isPublished' => [
                            'fieldName' => 'isPublished',
                            'type' => 'boolean',
                            'columnName' => 'is_published',
                        ],
                        'dateAdded' => [
                            'fieldName' => 'dateAdded',
                            'type' => 'datetime',
                            'columnName' => 'date_added',
                            'nullable' => true,
                        ],
                        'createdBy' => [
                            'fieldName' => 'createdBy',
                            'type' => 'integer',
                            'columnName' => 'created_by',
                            'nullable' => true,
                        ],
                        'createdByUser' => [
                            'fieldName' => 'createdByUser',
                            'type' => 'string',
                            'length' => 191,
                            'columnName' => 'created_by_user',
                            'nullable' => true,
                        ],
                        'dateModified' => [
                            'fieldName' => 'dateModified',
                            'type' => 'datetime',
                            'columnName' => 'date_modified',
                            'nullable' => true,
                        ],
                        'modifiedBy' => [
                            'fieldName' => 'modifiedBy',
                            'type' => 'integer',
                            'columnName' => 'modified_by',
                            'nullable' => true,
                        ],
                        'modifiedByUser' => [
                            'fieldName' => 'modifiedByUser',
                            'type' => 'string',
                            'length' => 191,
                            'columnName' => 'modified_by_user',
                            'nullable' => true,
                        ],
                        'checkedOut' => [
                            'fieldName' => 'checkedOut',
                            'type' => 'datetime',
                            'columnName' => 'checked_out',
                            'nullable' => true,
                        ],
                        'checkedOutBy' => [
                            'fieldName' => 'checkedOutBy',
                            'type' => 'integer',
                            'columnName' => 'checked_out_by',
                            'nullable' => true,
                        ],
                        'checkedOutByUser' => [
                            'fieldName' => 'checkedOutByUser',
                            'type' => 'string',
                            'length' => 191,
                            'columnName' => 'checked_out_by_user',
                            'nullable' => true,
                        ],
                    ],
                ],
                'fieldNames' => [
                    [
                        'is_published' => 'isPublished',
                        'date_added' => 'dateAdded',
                        'created_by' => 'createdBy',
                        'created_by_user' => 'createdByUser',
                        'date_modified' => 'dateModified',
                        'modified_by' => 'modifiedBy',
                        'modified_by_user' => 'modifiedByUser',
                        'checked_out' => 'checkedOut',
                        'checked_out_by' => 'checkedOutBy',
                        'checked_out_by_user' => 'checkedOutByUser',
                    ],
                ],
                'columnNames' => [
                    [
                        'isPublished' => 'is_published',
                        'dateAdded' => 'date_added',
                        'createdBy' => 'created_by',
                        'createdByUser' => 'created_by_user',
                        'dateModified' => 'date_modified',
                        'modifiedBy' => 'modified_by',
                        'modifiedByUser' => 'modified_by_user',
                        'checkedOut' => 'checked_out',
                        'checkedOutBy' => 'checked_out_by',
                        'checkedOutByUser' => 'checked_out_by_user',
                    ],
                ],
                'table' => [
                    [
                        'name' => 'FormEntity',
                        'indexes' => [],
                        'uniqueConstraints' => [],
                    ],
                ],
                'idGenerator' => [
                    $o[1],
                ],
                'changeTrackingPolicy' => [
                    2,
                ],
            ],
        ],
        $o[0],
        []
    );
},
8 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ClassMetadata')),
            clone ($p['Doctrine\\ORM\\Id\\IdentityGenerator'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Id\\IdentityGenerator')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'Mautic\\CampaignBundle\\Entity\\Event',
                ],
                'namespace' => [
                    'Mautic\\CampaignBundle\\Entity',
                ],
                'rootEntityName' => [
                    'Mautic\\CampaignBundle\\Entity\\Event',
                ],
                'customRepositoryClassName' => [
                    'Mautic\\CampaignBundle\\Entity\\EventRepository',
                ],
                'identifier' => [
                    [
                        'id',
                    ],
                ],
                'generatorType' => [
                    4,
                ],
                'fieldMappings' => [
                    [
                        'id' => [
                            'fieldName' => 'id',
                            'type' => 'integer',
                            'id' => true,
                            'options' => [
                                'unsigned' => true,
                            ],
                            'columnName' => 'id',
                        ],
                        'name' => [
                            'fieldName' => 'name',
                            'type' => 'string',
                            'length' => 191,
                            'columnName' => 'name',
                        ],
                        'description' => [
                            'fieldName' => 'description',
                            'type' => 'text',
                            'nullable' => true,
                            'columnName' => 'description',
                        ],
                        'type' => [
                            'fieldName' => 'type',
                            'type' => 'string',
                            'length' => 50,
                            'columnName' => 'type',
                        ],
                        'eventType' => [
                            'fieldName' => 'eventType',
                            'type' => 'string',
                            'length' => 50,
                            'columnName' => 'event_type',
                        ],
                        'order' => [
                            'fieldName' => 'order',
                            'type' => 'integer',
                            'columnName' => 'event_order',
                        ],
                        'properties' => [
                            'fieldName' => 'properties',
                            'type' => 'array',
                            'columnName' => 'properties',
                        ],
                        'triggerDate' => [
                            'fieldName' => 'triggerDate',
                            'type' => 'datetime',
                            'columnName' => 'trigger_date',
                            'nullable' => true,
                        ],
                        'triggerInterval' => [
                            'fieldName' => 'triggerInterval',
                            'type' => 'integer',
                            'columnName' => 'trigger_interval',
                            'nullable' => true,
                        ],
                        'triggerIntervalUnit' => [
                            'fieldName' => 'triggerIntervalUnit',
                            'type' => 'string',
                            'length' => 1,
                            'columnName' => 'trigger_interval_unit',
                            'nullable' => true,
                        ],
                        'triggerHour' => [
                            'fieldName' => 'triggerHour',
                            'type' => 'time',
                            'columnName' => 'trigger_hour',
                            'nullable' => true,
                        ],
                        'triggerRestrictedStartHour' => [
                            'fieldName' => 'triggerRestrictedStartHour',
                            'type' => 'time',
                            'columnName' => 'trigger_restricted_start_hour',
                            'nullable' => true,
                        ],
                        'triggerRestrictedStopHour' => [
                            'fieldName' => 'triggerRestrictedStopHour',
                            'type' => 'time',
                            'columnName' => 'trigger_restricted_stop_hour',
                            'nullable' => true,
                        ],
                        'triggerRestrictedDaysOfWeek' => [
                            'fieldName' => 'triggerRestrictedDaysOfWeek',
                            'type' => 'array',
                            'columnName' => 'trigger_restricted_dow',
                            'nullable' => true,
                        ],
                        'triggerMode' => [
                            'fieldName' => 'triggerMode',
                            'type' => 'string',
                            'length' => 10,
                            'columnName' => 'trigger_mode',
                            'nullable' => true,
                        ],
                        'decisionPath' => [
                            'fieldName' => 'decisionPath',
                            'type' => 'string',
                            'length' => 191,
                            'columnName' => 'decision_path',
                            'nullable' => true,
                        ],
                        'tempId' => [
                            'fieldName' => 'tempId',
                            'type' => 'string',
                            'length' => 191,
                            'columnName' => 'temp_id',
                            'nullable' => true,
                        ],
                        'channel' => [
                            'fieldName' => 'channel',
                            'type' => 'string',
                            'length' => 191,
                            'nullable' => true,
                            'columnName' => 'channel',
                        ],
                        'channelId' => [
                            'fieldName' => 'channelId',
                            'type' => 'integer',
                            'columnName' => 'channel_id',
                            'nullable' => true,
                        ],
                    ],
                ],
                'fieldNames' => [
                    [
                        'id' => 'id',
                        'name' => 'name',
                        'description' => 'description',
                        'type' => 'type',
                        'event_type' => 'eventType',
                        'event_order' => 'order',
                        'properties' => 'properties',
                        'trigger_date' => 'triggerDate',
                        'trigger_interval' => 'triggerInterval',
                        'trigger_interval_unit' => 'triggerIntervalUnit',
                        'trigger_hour' => 'triggerHour',
                        'trigger_restricted_start_hour' => 'triggerRestrictedStartHour',
                        'trigger_restricted_stop_hour' => 'triggerRestrictedStopHour',
                        'trigger_restricted_dow' => 'triggerRestrictedDaysOfWeek',
                        'trigger_mode' => 'triggerMode',
                        'decision_path' => 'decisionPath',
                        'temp_id' => 'tempId',
                        'channel' => 'channel',
                        'channel_id' => 'channelId',
                    ],
                ],
                'columnNames' => [
                    [
                        'id' => 'id',
                        'name' => 'name',
                        'description' => 'description',
                        'type' => 'type',
                        'eventType' => 'event_type',
                        'order' => 'event_order',
                        'properties' => 'properties',
                        'triggerDate' => 'trigger_date',
                        'triggerInterval' => 'trigger_interval',
                        'triggerIntervalUnit' => 'trigger_interval_unit',
                        'triggerHour' => 'trigger_hour',
                        'triggerRestrictedStartHour' => 'trigger_restricted_start_hour',
                        'triggerRestrictedStopHour' => 'trigger_restricted_stop_hour',
                        'triggerRestrictedDaysOfWeek' => 'trigger_restricted_dow',
                        'triggerMode' => 'trigger_mode',
                        'decisionPath' => 'decision_path',
                        'tempId' => 'temp_id',
                        'channel' => 'channel',
                        'channelId' => 'channel_id',
                    ],
                ],
                'table' => [
                    [
                        'name' => 'campaign_events',
                        'indexes' => [
                            'campaign_event_search' => [
                                'columns' => [
                                    'type',
                                    'event_type',
                                ],
                            ],
                            'campaign_event_type' => [
                                'columns' => [
                                    'event_type',
                                ],
                            ],
                            'campaign_event_channel' => [
                                'columns' => [
                                    'channel',
                                    'channel_id',
                                ],
                            ],
                        ],
                        'uniqueConstraints' => [],
                    ],
                ],
                'associationMappings' => [
                    [
                        'campaign' => [
                            'fieldName' => 'campaign',
                            'targetEntity' => 'Mautic\\CampaignBundle\\Entity\\Campaign',
                            'inversedBy' => 'events',
                            'joinColumns' => [
                                [
                                    'name' => 'campaign_id',
                                    'referencedColumnName' => 'id',
                                    'nullable' => false,
                                    'unique' => false,
                                    'onDelete' => 'CASCADE',
                                    'columnDefinition' => null,
                                ],
                            ],
                            'type' => 2,
                            'mappedBy' => null,
                            'isOwningSide' => true,
                            'sourceEntity' => 'Mautic\\CampaignBundle\\Entity\\Event',
                            'fetch' => 2,
                            'cascade' => [],
                            'isCascadeRemove' => false,
                            'isCascadePersist' => false,
                            'isCascadeRefresh' => false,
                            'isCascadeMerge' => false,
                            'isCascadeDetach' => false,
                            'sourceToTargetKeyColumns' => [
                                'campaign_id' => 'id',
                            ],
                            'joinColumnFieldNames' => [
                                'campaign_id' => 'campaign_id',
                            ],
                            'targetToSourceKeyColumns' => [
                                'id' => 'campaign_id',
                            ],
                            'orphanRemoval' => false,
                        ],
                        'children' => [
                            'fieldName' => 'children',
                            'targetEntity' => 'Mautic\\CampaignBundle\\Entity\\Event',
                            'indexBy' => 'id',
                            'orderBy' => [
                                'order' => 'ASC',
                            ],
                            'mappedBy' => 'parent',
                            'type' => 4,
                            'inversedBy' => null,
                            'isOwningSide' => false,
                            'sourceEntity' => 'Mautic\\CampaignBundle\\Entity\\Event',
                            'fetch' => 2,
                            'cascade' => [],
                            'isCascadeRemove' => false,
                            'isCascadePersist' => false,
                            'isCascadeRefresh' => false,
                            'isCascadeMerge' => false,
                            'isCascadeDetach' => false,
                            'orphanRemoval' => false,
                        ],
                        'parent' => [
                            'fieldName' => 'parent',
                            'targetEntity' => 'Mautic\\CampaignBundle\\Entity\\Event',
                            'inversedBy' => 'children',
                            'cascade' => [
                                'persist',
                            ],
                            'joinColumns' => [
                                [
                                    'name' => 'parent_id',
                                    'referencedColumnName' => 'id',
                                    'nullable' => true,
                                    'unique' => false,
                                    'onDelete' => null,
                                    'columnDefinition' => null,
                                ],
                            ],
                            'type' => 2,
                            'mappedBy' => null,
                            'isOwningSide' => true,
                            'sourceEntity' => 'Mautic\\CampaignBundle\\Entity\\Event',
                            'fetch' => 2,
                            'isCascadeRemove' => false,
                            'isCascadePersist' => true,
                            'isCascadeRefresh' => false,
                            'isCascadeMerge' => false,
                            'isCascadeDetach' => false,
                            'sourceToTargetKeyColumns' => [
                                'parent_id' => 'id',
                            ],
                            'joinColumnFieldNames' => [
                                'parent_id' => 'parent_id',
                            ],
                            'targetToSourceKeyColumns' => [
                                'id' => 'parent_id',
                            ],
                            'orphanRemoval' => false,
                        ],
                        'log' => [
                            'fieldName' => 'log',
                            'targetEntity' => 'Mautic\\CampaignBundle\\Entity\\LeadEventLog',
                            'mappedBy' => 'event',
                            'cascade' => [
                                'persist',
                                'remove',
                            ],
                            'fetch' => 4,
                            'type' => 4,
                            'inversedBy' => null,
                            'isOwningSide' => false,
                            'sourceEntity' => 'Mautic\\CampaignBundle\\Entity\\Event',
                            'isCascadeRemove' => true,
                            'isCascadePersist' => true,
                            'isCascadeRefresh' => false,
                            'isCascadeMerge' => false,
                            'isCascadeDetach' => false,
                            'orphanRemoval' => false,
                        ],
                    ],
                ],
                'idGenerator' => [
                    $o[1],
                ],
                'changeTrackingPolicy' => [
                    2,
                ],
            ],
        ],
        $o[0],
        []
    );
},
9 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ClassMetadata')),
            clone ($p['Doctrine\\ORM\\Id\\IdentityGenerator'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Id\\IdentityGenerator')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'Mautic\\CampaignBundle\\Entity\\Campaign',
                ],
                'namespace' => [
                    'Mautic\\CampaignBundle\\Entity',
                ],
                'rootEntityName' => [
                    'Mautic\\CampaignBundle\\Entity\\Campaign',
                ],
                'customRepositoryClassName' => [
                    'Mautic\\CampaignBundle\\Entity\\CampaignRepository',
                ],
                'identifier' => [
                    [
                        'id',
                    ],
                ],
                'generatorType' => [
                    4,
                ],
                'fieldMappings' => [
                    [
                        'isPublished' => [
                            'fieldName' => 'isPublished',
                            'type' => 'boolean',
                            'columnName' => 'is_published',
                            'declared' => 'Mautic\\CoreBundle\\Entity\\FormEntity',
                        ],
                        'dateAdded' => [
                            'fieldName' => 'dateAdded',
                            'type' => 'datetime',
                            'columnName' => 'date_added',
                            'nullable' => true,
                            'declared' => 'Mautic\\CoreBundle\\Entity\\FormEntity',
                        ],
                        'createdBy' => [
                            'fieldName' => 'createdBy',
                            'type' => 'integer',
                            'columnName' => 'created_by',
                            'nullable' => true,
                            'declared' => 'Mautic\\CoreBundle\\Entity\\FormEntity',
                        ],
                        'createdByUser' => [
                            'fieldName' => 'createdByUser',
                            'type' => 'string',
                            'length' => 191,
                            'columnName' => 'created_by_user',
                            'nullable' => true,
                            'declared' => 'Mautic\\CoreBundle\\Entity\\FormEntity',
                        ],
                        'dateModified' => [
                            'fieldName' => 'dateModified',
                            'type' => 'datetime',
                            'columnName' => 'date_modified',
                            'nullable' => true,
                            'declared' => 'Mautic\\CoreBundle\\Entity\\FormEntity',
                        ],
                        'modifiedBy' => [
                            'fieldName' => 'modifiedBy',
                            'type' => 'integer',
                            'columnName' => 'modified_by',
                            'nullable' => true,
                            'declared' => 'Mautic\\CoreBundle\\Entity\\FormEntity',
                        ],
                        'modifiedByUser' => [
                            'fieldName' => 'modifiedByUser',
                            'type' => 'string',
                            'length' => 191,
                            'columnName' => 'modified_by_user',
                            'nullable' => true,
                            'declared' => 'Mautic\\CoreBundle\\Entity\\FormEntity',
                        ],
                        'checkedOut' => [
                            'fieldName' => 'checkedOut',
                            'type' => 'datetime',
                            'columnName' => 'checked_out',
                            'nullable' => true,
                            'declared' => 'Mautic\\CoreBundle\\Entity\\FormEntity',
                        ],
                        'checkedOutBy' => [
                            'fieldName' => 'checkedOutBy',
                            'type' => 'integer',
                            'columnName' => 'checked_out_by',
                            'nullable' => true,
                            'declared' => 'Mautic\\CoreBundle\\Entity\\FormEntity',
                        ],
                        'checkedOutByUser' => [
                            'fieldName' => 'checkedOutByUser',
                            'type' => 'string',
                            'length' => 191,
                            'columnName' => 'checked_out_by_user',
                            'nullable' => true,
                            'declared' => 'Mautic\\CoreBundle\\Entity\\FormEntity',
                        ],
                        'id' => [
                            'fieldName' => 'id',
                            'type' => 'integer',
                            'id' => true,
                            'options' => [
                                'unsigned' => true,
                            ],
                            'columnName' => 'id',
                        ],
                        'name' => [
                            'fieldName' => 'name',
                            'type' => 'string',
                            'length' => 191,
                            'columnName' => 'name',
                        ],
                        'description' => [
                            'fieldName' => 'description',
                            'type' => 'text',
                            'nullable' => true,
                            'columnName' => 'description',
                        ],
                        'publishUp' => [
                            'fieldName' => 'publishUp',
                            'type' => 'datetime',
                            'columnName' => 'publish_up',
                            'nullable' => true,
                        ],
                        'publishDown' => [
                            'fieldName' => 'publishDown',
                            'type' => 'datetime',
                            'columnName' => 'publish_down',
                            'nullable' => true,
                        ],
                        'canvasSettings' => [
                            'fieldName' => 'canvasSettings',
                            'type' => 'array',
                            'columnName' => 'canvas_settings',
                            'nullable' => true,
                        ],
                        'allowRestart' => [
                            'fieldName' => 'allowRestart',
                            'type' => 'integer',
                            'columnName' => 'allow_restart',
                        ],
                    ],
                ],
                'fieldNames' => [
                    [
                        'is_published' => 'isPublished',
                        'date_added' => 'dateAdded',
                        'created_by' => 'createdBy',
                        'created_by_user' => 'createdByUser',
                        'date_modified' => 'dateModified',
                        'modified_by' => 'modifiedBy',
                        'modified_by_user' => 'modifiedByUser',
                        'checked_out' => 'checkedOut',
                        'checked_out_by' => 'checkedOutBy',
                        'checked_out_by_user' => 'checkedOutByUser',
                        'id' => 'id',
                        'name' => 'name',
                        'description' => 'description',
                        'publish_up' => 'publishUp',
                        'publish_down' => 'publishDown',
                        'canvas_settings' => 'canvasSettings',
                        'allow_restart' => 'allowRestart',
                    ],
                ],
                'columnNames' => [
                    [
                        'isPublished' => 'is_published',
                        'dateAdded' => 'date_added',
                        'createdBy' => 'created_by',
                        'createdByUser' => 'created_by_user',
                        'dateModified' => 'date_modified',
                        'modifiedBy' => 'modified_by',
                        'modifiedByUser' => 'modified_by_user',
                        'checkedOut' => 'checked_out',
                        'checkedOutBy' => 'checked_out_by',
                        'checkedOutByUser' => 'checked_out_by_user',
                        'id' => 'id',
                        'name' => 'name',
                        'description' => 'description',
                        'publishUp' => 'publish_up',
                        'publishDown' => 'publish_down',
                        'canvasSettings' => 'canvas_settings',
                        'allowRestart' => 'allow_restart',
                    ],
                ],
                'table' => [
                    [
                        'name' => 'campaigns',
                        'indexes' => [],
                        'uniqueConstraints' => [],
                    ],
                ],
                'associationMappings' => [
                    [
                        'category' => [
                            'fieldName' => 'category',
                            'targetEntity' => 'Mautic\\CategoryBundle\\Entity\\Category',
                            'cascade' => [
                                'merge',
                                'detach',
                            ],
                            'joinColumns' => [
                                [
                                    'name' => 'category_id',
                                    'referencedColumnName' => 'id',
                                    'nullable' => true,
                                    'unique' => false,
                                    'onDelete' => 'SET NULL',
                                    'columnDefinition' => null,
                                ],
                            ],
                            'type' => 2,
                            'mappedBy' => null,
                            'inversedBy' => null,
                            'isOwningSide' => true,
                            'sourceEntity' => 'Mautic\\CampaignBundle\\Entity\\Campaign',
                            'fetch' => 2,
                            'isCascadeRemove' => false,
                            'isCascadePersist' => false,
                            'isCascadeRefresh' => false,
                            'isCascadeMerge' => true,
                            'isCascadeDetach' => true,
                            'sourceToTargetKeyColumns' => [
                                'category_id' => 'id',
                            ],
                            'joinColumnFieldNames' => [
                                'category_id' => 'category_id',
                            ],
                            'targetToSourceKeyColumns' => [
                                'id' => 'category_id',
                            ],
                            'orphanRemoval' => false,
                        ],
                        'events' => [
                            'fieldName' => 'events',
                            'targetEntity' => 'Mautic\\CampaignBundle\\Entity\\Event',
                            'indexBy' => 'id',
                            'orderBy' => [
                                'order' => 'ASC',
                            ],
                            'mappedBy' => 'campaign',
                            'cascade' => [
                                'remove',
                                'persist',
                                'refresh',
                                'merge',
                                'detach',
                            ],
                            'fetch' => 4,
                            'type' => 4,
                            'inversedBy' => null,
                            'isOwningSide' => false,
                            'sourceEntity' => 'Mautic\\CampaignBundle\\Entity\\Campaign',
                            'isCascadeRemove' => true,
                            'isCascadePersist' => true,
                            'isCascadeRefresh' => true,
                            'isCascadeMerge' => true,
                            'isCascadeDetach' => true,
                            'orphanRemoval' => false,
                        ],
                        'leads' => [
                            'fieldName' => 'leads',
                            'targetEntity' => 'Mautic\\CampaignBundle\\Entity\\Lead',
                            'indexBy' => 'id',
                            'mappedBy' => 'campaign',
                            'fetch' => 4,
                            'type' => 4,
                            'inversedBy' => null,
                            'isOwningSide' => false,
                            'sourceEntity' => 'Mautic\\CampaignBundle\\Entity\\Campaign',
                            'cascade' => [],
                            'isCascadeRemove' => false,
                            'isCascadePersist' => false,
                            'isCascadeRefresh' => false,
                            'isCascadeMerge' => false,
                            'isCascadeDetach' => false,
                            'orphanRemoval' => false,
                        ],
                        'lists' => [
                            'fieldName' => 'lists',
                            'targetEntity' => 'Mautic\\LeadBundle\\Entity\\LeadList',
                            'indexBy' => 'id',
                            'joinTable' => [
                                'joinColumns' => [
                                    [
                                        'name' => 'campaign_id',
                                        'referencedColumnName' => 'id',
                                        'nullable' => true,
                                        'unique' => false,
                                        'onDelete' => 'CASCADE',
                                        'columnDefinition' => null,
                                    ],
                                ],
                                'inverseJoinColumns' => [
                                    [
                                        'name' => 'leadlist_id',
                                        'referencedColumnName' => 'id',
                                        'nullable' => false,
                                        'unique' => false,
                                        'onDelete' => 'CASCADE',
                                        'columnDefinition' => null,
                                    ],
                                ],
                                'name' => 'campaign_leadlist_xref',
                            ],
                            'type' => 8,
                            'mappedBy' => null,
                            'inversedBy' => null,
                            'isOwningSide' => true,
                            'sourceEntity' => 'Mautic\\CampaignBundle\\Entity\\Campaign',
                            'fetch' => 2,
                            'cascade' => [],
                            'isCascadeRemove' => false,
                            'isCascadePersist' => false,
                            'isCascadeRefresh' => false,
                            'isCascadeMerge' => false,
                            'isCascadeDetach' => false,
                            'joinTableColumns' => [
                                'campaign_id',
                                'leadlist_id',
                            ],
                            'isOnDeleteCascade' => true,
                            'relationToSourceKeyColumns' => [
                                'campaign_id' => 'id',
                            ],
                            'relationToTargetKeyColumns' => [
                                'leadlist_id' => 'id',
                            ],
                            'orphanRemoval' => false,
                        ],
                        'forms' => [
                            'fieldName' => 'forms',
                            'targetEntity' => 'Mautic\\FormBundle\\Entity\\Form',
                            'indexBy' => 'id',
                            'joinTable' => [
                                'joinColumns' => [
                                    [
                                        'name' => 'campaign_id',
                                        'referencedColumnName' => 'id',
                                        'nullable' => true,
                                        'unique' => false,
                                        'onDelete' => 'CASCADE',
                                        'columnDefinition' => null,
                                    ],
                                ],
                                'inverseJoinColumns' => [
                                    [
                                        'name' => 'form_id',
                                        'referencedColumnName' => 'id',
                                        'nullable' => false,
                                        'unique' => false,
                                        'onDelete' => 'CASCADE',
                                        'columnDefinition' => null,
                                    ],
                                ],
                                'name' => 'campaign_form_xref',
                            ],
                            'type' => 8,
                            'mappedBy' => null,
                            'inversedBy' => null,
                            'isOwningSide' => true,
                            'sourceEntity' => 'Mautic\\CampaignBundle\\Entity\\Campaign',
                            'fetch' => 2,
                            'cascade' => [],
                            'isCascadeRemove' => false,
                            'isCascadePersist' => false,
                            'isCascadeRefresh' => false,
                            'isCascadeMerge' => false,
                            'isCascadeDetach' => false,
                            'joinTableColumns' => [
                                'campaign_id',
                                'form_id',
                            ],
                            'isOnDeleteCascade' => true,
                            'relationToSourceKeyColumns' => [
                                'campaign_id' => 'id',
                            ],
                            'relationToTargetKeyColumns' => [
                                'form_id' => 'id',
                            ],
                            'orphanRemoval' => false,
                        ],
                    ],
                ],
                'idGenerator' => [
                    $o[1],
                ],
                'changeTrackingPolicy' => [
                    2,
                ],
            ],
        ],
        $o[0],
        []
    );
},
10 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ClassMetadata')),
            clone ($p['Doctrine\\ORM\\Id\\AssignedGenerator'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Id\\AssignedGenerator')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'Mautic\\CampaignBundle\\Entity\\Lead',
                ],
                'namespace' => [
                    'Mautic\\CampaignBundle\\Entity',
                ],
                'rootEntityName' => [
                    'Mautic\\CampaignBundle\\Entity\\Lead',
                ],
                'customRepositoryClassName' => [
                    'Mautic\\CampaignBundle\\Entity\\LeadRepository',
                ],
                'identifier' => [
                    [
                        'campaign',
                        'lead',
                    ],
                ],
                'fieldMappings' => [
                    [
                        'dateAdded' => [
                            'fieldName' => 'dateAdded',
                            'type' => 'datetime',
                            'columnName' => 'date_added',
                        ],
                        'manuallyRemoved' => [
                            'fieldName' => 'manuallyRemoved',
                            'type' => 'boolean',
                            'columnName' => 'manually_removed',
                        ],
                        'manuallyAdded' => [
                            'fieldName' => 'manuallyAdded',
                            'type' => 'boolean',
                            'columnName' => 'manually_added',
                        ],
                        'dateLastExited' => [
                            'fieldName' => 'dateLastExited',
                            'type' => 'datetime',
                            'columnName' => 'date_last_exited',
                            'nullable' => true,
                        ],
                        'rotation' => [
                            'fieldName' => 'rotation',
                            'type' => 'integer',
                            'columnName' => 'rotation',
                        ],
                    ],
                ],
                'fieldNames' => [
                    [
                        'date_added' => 'dateAdded',
                        'manually_removed' => 'manuallyRemoved',
                        'manually_added' => 'manuallyAdded',
                        'date_last_exited' => 'dateLastExited',
                        'rotation' => 'rotation',
                    ],
                ],
                'columnNames' => [
                    [
                        'dateAdded' => 'date_added',
                        'manuallyRemoved' => 'manually_removed',
                        'manuallyAdded' => 'manually_added',
                        'dateLastExited' => 'date_last_exited',
                        'rotation' => 'rotation',
                    ],
                ],
                'table' => [
                    [
                        'name' => 'campaign_leads',
                        'indexes' => [
                            'campaign_leads_date_added' => [
                                'columns' => [
                                    'date_added',
                                ],
                            ],
                            'campaign_leads_date_exited' => [
                                'columns' => [
                                    'date_last_exited',
                                ],
                            ],
                            'campaign_leads' => [
                                'columns' => [
                                    'campaign_id',
                                    'manually_removed',
                                    'lead_id',
                                    'rotation',
                                ],
                            ],
                        ],
                        'uniqueConstraints' => [],
                    ],
                ],
                'associationMappings' => [
                    [
                        'campaign' => [
                            'fieldName' => 'campaign',
                            'targetEntity' => 'Mautic\\CampaignBundle\\Entity\\Campaign',
                            'id' => true,
                            'inversedBy' => 'leads',
                            'joinColumns' => [
                                [
                                    'name' => 'campaign_id',
                                    'referencedColumnName' => 'id',
                                    'nullable' => false,
                                    'unique' => false,
                                    'onDelete' => 'CASCADE',
                                    'columnDefinition' => null,
                                ],
                            ],
                            'type' => 2,
                            'mappedBy' => null,
                            'isOwningSide' => true,
                            'sourceEntity' => 'Mautic\\CampaignBundle\\Entity\\Lead',
                            'fetch' => 2,
                            'cascade' => [],
                            'isCascadeRemove' => false,
                            'isCascadePersist' => false,
                            'isCascadeRefresh' => false,
                            'isCascadeMerge' => false,
                            'isCascadeDetach' => false,
                            'sourceToTargetKeyColumns' => [
                                'campaign_id' => 'id',
                            ],
                            'joinColumnFieldNames' => [
                                'campaign_id' => 'campaign_id',
                            ],
                            'targetToSourceKeyColumns' => [
                                'id' => 'campaign_id',
                            ],
                            'orphanRemoval' => false,
                        ],
                        'lead' => [
                            'fieldName' => 'lead',
                            'targetEntity' => 'Mautic\\LeadBundle\\Entity\\Lead',
                            'id' => true,
                            'joinColumns' => [
                                [
                                    'name' => 'lead_id',
                                    'referencedColumnName' => 'id',
                                    'nullable' => false,
                                    'unique' => false,
                                    'onDelete' => 'CASCADE',
                                    'columnDefinition' => null,
                                ],
                            ],
                            'type' => 2,
                            'mappedBy' => null,
                            'inversedBy' => null,
                            'isOwningSide' => true,
                            'sourceEntity' => 'Mautic\\CampaignBundle\\Entity\\Lead',
                            'fetch' => 2,
                            'cascade' => [],
                            'isCascadeRemove' => false,
                            'isCascadePersist' => false,
                            'isCascadeRefresh' => false,
                            'isCascadeMerge' => false,
                            'isCascadeDetach' => false,
                            'sourceToTargetKeyColumns' => [
                                'lead_id' => 'id',
                            ],
                            'joinColumnFieldNames' => [
                                'lead_id' => 'lead_id',
                            ],
                            'targetToSourceKeyColumns' => [
                                'id' => 'lead_id',
                            ],
                            'orphanRemoval' => false,
                        ],
                    ],
                ],
                'isIdentifierComposite' => [
                    true,
                ],
                'containsForeignIdentifier' => [
                    true,
                ],
                'idGenerator' => [
                    $o[1],
                ],
                'changeTrackingPolicy' => [
                    2,
                ],
            ],
        ],
        $o[0],
        []
    );
},
11 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ClassMetadata')),
            clone ($p['Doctrine\\ORM\\Id\\IdentityGenerator'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Id\\IdentityGenerator')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'Mautic\\CampaignBundle\\Entity\\Summary',
                ],
                'namespace' => [
                    'Mautic\\CampaignBundle\\Entity',
                ],
                'rootEntityName' => [
                    'Mautic\\CampaignBundle\\Entity\\Summary',
                ],
                'customRepositoryClassName' => [
                    'Mautic\\CampaignBundle\\Entity\\SummaryRepository',
                ],
                'identifier' => [
                    [
                        'id',
                    ],
                ],
                'generatorType' => [
                    4,
                ],
                'fieldMappings' => [
                    [
                        'id' => [
                            'fieldName' => 'id',
                            'type' => 'integer',
                            'id' => true,
                            'options' => [
                                'unsigned' => true,
                            ],
                            'columnName' => 'id',
                        ],
                        'dateTriggered' => [
                            'fieldName' => 'dateTriggered',
                            'type' => 'datetime_immutable',
                            'nullable' => true,
                            'columnName' => 'date_triggered',
                        ],
                        'scheduledCount' => [
                            'fieldName' => 'scheduledCount',
                            'type' => 'integer',
                            'columnName' => 'scheduled_count',
                        ],
                        'triggeredCount' => [
                            'fieldName' => 'triggeredCount',
                            'type' => 'integer',
                            'columnName' => 'triggered_count',
                        ],
                        'nonActionPathTakenCount' => [
                            'fieldName' => 'nonActionPathTakenCount',
                            'type' => 'integer',
                            'columnName' => 'non_action_path_taken_count',
                        ],
                        'failedCount' => [
                            'fieldName' => 'failedCount',
                            'type' => 'integer',
                            'columnName' => 'failed_count',
                        ],
                        'logCountsProcessed' => [
                            'fieldName' => 'logCountsProcessed',
                            'type' => 'integer',
                            'columnName' => 'log_counts_processed',
                            'nullable' => true,
                        ],
                    ],
                ],
                'fieldNames' => [
                    [
                        'id' => 'id',
                        'date_triggered' => 'dateTriggered',
                        'scheduled_count' => 'scheduledCount',
                        'triggered_count' => 'triggeredCount',
                        'non_action_path_taken_count' => 'nonActionPathTakenCount',
                        'failed_count' => 'failedCount',
                        'log_counts_processed' => 'logCountsProcessed',
                    ],
                ],
                'columnNames' => [
                    [
                        'id' => 'id',
                        'dateTriggered' => 'date_triggered',
                        'scheduledCount' => 'scheduled_count',
                        'triggeredCount' => 'triggered_count',
                        'nonActionPathTakenCount' => 'non_action_path_taken_count',
                        'failedCount' => 'failed_count',
                        'logCountsProcessed' => 'log_counts_processed',
                    ],
                ],
                'table' => [
                    [
                        'name' => 'campaign_summary',
                        'uniqueConstraints' => [
                            'campaign_event_date_triggered' => [
                                'columns' => [
                                    'campaign_id',
                                    'event_id',
                                    'date_triggered',
                                ],
                            ],
                        ],
                        'indexes' => [],
                    ],
                ],
                'associationMappings' => [
                    [
                        'campaign' => [
                            'fieldName' => 'campaign',
                            'targetEntity' => 'Mautic\\CampaignBundle\\Entity\\Campaign',
                            'fetch' => 4,
                            'joinColumns' => [
                                [
                                    'name' => 'campaign_id',
                                    'referencedColumnName' => 'id',
                                    'nullable' => true,
                                    'unique' => false,
                                    'onDelete' => null,
                                    'columnDefinition' => null,
                                ],
                            ],
                            'type' => 2,
                            'mappedBy' => null,
                            'inversedBy' => null,
                            'isOwningSide' => true,
                            'sourceEntity' => 'Mautic\\CampaignBundle\\Entity\\Summary',
                            'cascade' => [],
                            'isCascadeRemove' => false,
                            'isCascadePersist' => false,
                            'isCascadeRefresh' => false,
                            'isCascadeMerge' => false,
                            'isCascadeDetach' => false,
                            'sourceToTargetKeyColumns' => [
                                'campaign_id' => 'id',
                            ],
                            'joinColumnFieldNames' => [
                                'campaign_id' => 'campaign_id',
                            ],
                            'targetToSourceKeyColumns' => [
                                'id' => 'campaign_id',
                            ],
                            'orphanRemoval' => false,
                        ],
                        'event' => [
                            'fieldName' => 'event',
                            'targetEntity' => 'Mautic\\CampaignBundle\\Entity\\Event',
                            'fetch' => 4,
                            'joinColumns' => [
                                [
                                    'name' => 'event_id',
                                    'referencedColumnName' => 'id',
                                    'nullable' => false,
                                    'unique' => false,
                                    'onDelete' => 'CASCADE',
                                    'columnDefinition' => null,
                                ],
                            ],
                            'type' => 2,
                            'mappedBy' => null,
                            'inversedBy' => null,
                            'isOwningSide' => true,
                            'sourceEntity' => 'Mautic\\CampaignBundle\\Entity\\Summary',
                            'cascade' => [],
                            'isCascadeRemove' => false,
                            'isCascadePersist' => false,
                            'isCascadeRefresh' => false,
                            'isCascadeMerge' => false,
                            'isCascadeDetach' => false,
                            'sourceToTargetKeyColumns' => [
                                'event_id' => 'id',
                            ],
                            'joinColumnFieldNames' => [
                                'event_id' => 'event_id',
                            ],
                            'targetToSourceKeyColumns' => [
                                'id' => 'event_id',
                            ],
                            'orphanRemoval' => false,
                        ],
                    ],
                ],
                'idGenerator' => [
                    $o[1],
                ],
                'changeTrackingPolicy' => [
                    2,
                ],
            ],
        ],
        $o[0],
        []
    );
},
12 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ClassMetadata')),
            clone ($p['Doctrine\\ORM\\Id\\BigIntegerIdentityGenerator'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Id\\BigIntegerIdentityGenerator')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'Mautic\\CampaignBundle\\Entity\\LeadEventLog',
                ],
                'namespace' => [
                    'Mautic\\CampaignBundle\\Entity',
                ],
                'rootEntityName' => [
                    'Mautic\\CampaignBundle\\Entity\\LeadEventLog',
                ],
                'customRepositoryClassName' => [
                    'Mautic\\CampaignBundle\\Entity\\LeadEventLogRepository',
                ],
                'identifier' => [
                    [
                        'id',
                    ],
                ],
                'generatorType' => [
                    4,
                ],
                'fieldMappings' => [
                    [
                        'id' => [
                            'fieldName' => 'id',
                            'columnName' => 'id',
                            'id' => true,
                            'nullable' => false,
                            'type' => 'bigint',
                            'options' => [
                                'unsigned' => true,
                            ],
                        ],
                        'rotation' => [
                            'fieldName' => 'rotation',
                            'type' => 'integer',
                            'columnName' => 'rotation',
                        ],
                        'dateTriggered' => [
                            'fieldName' => 'dateTriggered',
                            'type' => 'datetime',
                            'columnName' => 'date_triggered',
                            'nullable' => true,
                        ],
                        'isScheduled' => [
                            'fieldName' => 'isScheduled',
                            'type' => 'boolean',
                            'columnName' => 'is_scheduled',
                        ],
                        'triggerDate' => [
                            'fieldName' => 'triggerDate',
                            'type' => 'datetime',
                            'columnName' => 'trigger_date',
                            'nullable' => true,
                        ],
                        'systemTriggered' => [
                            'fieldName' => 'systemTriggered',
                            'type' => 'boolean',
                            'columnName' => 'system_triggered',
                        ],
                        'metadata' => [
                            'fieldName' => 'metadata',
                            'type' => 'array',
                            'nullable' => true,
                            'columnName' => 'metadata',
                        ],
                        'channel' => [
                            'fieldName' => 'channel',
                            'type' => 'string',
                            'length' => 191,
                            'nullable' => true,
                            'columnName' => 'channel',
                        ],
                        'channelId' => [
                            'fieldName' => 'channelId',
                            'type' => 'integer',
                            'columnName' => 'channel_id',
                            'nullable' => true,
                        ],
                        'nonActionPathTaken' => [
                            'fieldName' => 'nonActionPathTaken',
                            'type' => 'boolean',
                            'nullable' => true,
                            'columnName' => 'non_action_path_taken',
                        ],
                    ],
                ],
                'fieldNames' => [
                    [
                        'id' => 'id',
                        'rotation' => 'rotation',
                        'date_triggered' => 'dateTriggered',
                        'is_scheduled' => 'isScheduled',
                        'trigger_date' => 'triggerDate',
                        'system_triggered' => 'systemTriggered',
                        'metadata' => 'metadata',
                        'channel' => 'channel',
                        'channel_id' => 'channelId',
                        'non_action_path_taken' => 'nonActionPathTaken',
                    ],
                ],
                'columnNames' => [
                    [
                        'id' => 'id',
                        'rotation' => 'rotation',
                        'dateTriggered' => 'date_triggered',
                        'isScheduled' => 'is_scheduled',
                        'triggerDate' => 'trigger_date',
                        'systemTriggered' => 'system_triggered',
                        'metadata' => 'metadata',
                        'channel' => 'channel',
                        'channelId' => 'channel_id',
                        'nonActionPathTaken' => 'non_action_path_taken',
                    ],
                ],
                'table' => [
                    [
                        'name' => 'campaign_lead_event_log',
                        'indexes' => [
                            'campaign_event_upcoming_search' => [
                                'columns' => [
                                    'is_scheduled',
                                    'lead_id',
                                ],
                            ],
                            'campaign_event_schedule_counts' => [
                                'columns' => [
                                    'campaign_id',
                                    'is_scheduled',
                                    'trigger_date',
                                ],
                            ],
                            'campaign_date_triggered' => [
                                'columns' => [
                                    'date_triggered',
                                ],
                            ],
                            'campaign_leads' => [
                                'columns' => [
                                    'lead_id',
                                    'campaign_id',
                                    'rotation',
                                ],
                            ],
                            'campaign_log_channel' => [
                                'columns' => [
                                    'channel',
                                    'channel_id',
                                    'lead_id',
                                ],
                            ],
                            'campaign_actions' => [
                                'columns' => [
                                    'campaign_id',
                                    'event_id',
                                    'date_triggered',
                                ],
                            ],
                            'campaign_stats' => [
                                'columns' => [
                                    'campaign_id',
                                    'date_triggered',
                                    'event_id',
                                    'non_action_path_taken',
                                ],
                            ],
                            'campaign_trigger_date_order' => [
                                'columns' => [
                                    'trigger_date',
                                ],
                            ],
                        ],
                        'uniqueConstraints' => [
                            'campaign_rotation' => [
                                'columns' => [
                                    'event_id',
                                    'lead_id',
                                    'rotation',
                                ],
                            ],
                        ],
                    ],
                ],
                'associationMappings' => [
                    [
                        'event' => [
                            'fieldName' => 'event',
                            'targetEntity' => 'Mautic\\CampaignBundle\\Entity\\Event',
                            'inversedBy' => 'log',
                            'joinColumns' => [
                                [
                                    'name' => 'event_id',
                                    'referencedColumnName' => 'id',
                                    'nullable' => false,
                                    'unique' => false,
                                    'onDelete' => 'CASCADE',
                                    'columnDefinition' => null,
                                ],
                            ],
                            'type' => 2,
                            'mappedBy' => null,
                            'isOwningSide' => true,
                            'sourceEntity' => 'Mautic\\CampaignBundle\\Entity\\LeadEventLog',
                            'fetch' => 2,
                            'cascade' => [],
                            'isCascadeRemove' => false,
                            'isCascadePersist' => false,
                            'isCascadeRefresh' => false,
                            'isCascadeMerge' => false,
                            'isCascadeDetach' => false,
                            'sourceToTargetKeyColumns' => [
                                'event_id' => 'id',
                            ],
                            'joinColumnFieldNames' => [
                                'event_id' => 'event_id',
                            ],
                            'targetToSourceKeyColumns' => [
                                'id' => 'event_id',
                            ],
                            'orphanRemoval' => false,
                        ],
                        'lead' => [
                            'fieldName' => 'lead',
                            'targetEntity' => 'Mautic\\LeadBundle\\Entity\\Lead',
                            'joinColumns' => [
                                [
                                    'name' => 'lead_id',
                                    'referencedColumnName' => 'id',
                                    'nullable' => false,
                                    'unique' => false,
                                    'onDelete' => 'CASCADE',
                                    'columnDefinition' => null,
                                ],
                            ],
                            'type' => 2,
                            'mappedBy' => null,
                            'inversedBy' => null,
                            'isOwningSide' => true,
                            'sourceEntity' => 'Mautic\\CampaignBundle\\Entity\\LeadEventLog',
                            'fetch' => 2,
                            'cascade' => [],
                            'isCascadeRemove' => false,
                            'isCascadePersist' => false,
                            'isCascadeRefresh' => false,
                            'isCascadeMerge' => false,
                            'isCascadeDetach' => false,
                            'sourceToTargetKeyColumns' => [
                                'lead_id' => 'id',
                            ],
                            'joinColumnFieldNames' => [
                                'lead_id' => 'lead_id',
                            ],
                            'targetToSourceKeyColumns' => [
                                'id' => 'lead_id',
                            ],
                            'orphanRemoval' => false,
                        ],
                        'campaign' => [
                            'fieldName' => 'campaign',
                            'targetEntity' => 'Mautic\\CampaignBundle\\Entity\\Campaign',
                            'joinColumns' => [
                                [
                                    'name' => 'campaign_id',
                                    'referencedColumnName' => 'id',
                                    'nullable' => true,
                                    'unique' => false,
                                    'onDelete' => null,
                                    'columnDefinition' => null,
                                ],
                            ],
                            'type' => 2,
                            'mappedBy' => null,
                            'inversedBy' => null,
                            'isOwningSide' => true,
                            'sourceEntity' => 'Mautic\\CampaignBundle\\Entity\\LeadEventLog',
                            'fetch' => 2,
                            'cascade' => [],
                            'isCascadeRemove' => false,
                            'isCascadePersist' => false,
                            'isCascadeRefresh' => false,
                            'isCascadeMerge' => false,
                            'isCascadeDetach' => false,
                            'sourceToTargetKeyColumns' => [
                                'campaign_id' => 'id',
                            ],
                            'joinColumnFieldNames' => [
                                'campaign_id' => 'campaign_id',
                            ],
                            'targetToSourceKeyColumns' => [
                                'id' => 'campaign_id',
                            ],
                            'orphanRemoval' => false,
                        ],
                        'ipAddress' => [
                            'fieldName' => 'ipAddress',
                            'targetEntity' => 'Mautic\\CoreBundle\\Entity\\IpAddress',
                            'cascade' => [
                                'persist',
                                'merge',
                                'detach',
                            ],
                            'joinColumns' => [
                                [
                                    'name' => 'ip_id',
                                    'referencedColumnName' => 'id',
                                    'nullable' => true,
                                    'unique' => false,
                                    'onDelete' => null,
                                    'columnDefinition' => null,
                                ],
                            ],
                            'type' => 2,
                            'mappedBy' => null,
                            'inversedBy' => null,
                            'isOwningSide' => true,
                            'sourceEntity' => 'Mautic\\CampaignBundle\\Entity\\LeadEventLog',
                            'fetch' => 2,
                            'isCascadeRemove' => false,
                            'isCascadePersist' => true,
                            'isCascadeRefresh' => false,
                            'isCascadeMerge' => true,
                            'isCascadeDetach' => true,
                            'sourceToTargetKeyColumns' => [
                                'ip_id' => 'id',
                            ],
                            'joinColumnFieldNames' => [
                                'ip_id' => 'ip_id',
                            ],
                            'targetToSourceKeyColumns' => [
                                'id' => 'ip_id',
                            ],
                            'orphanRemoval' => false,
                        ],
                        'failedLog' => [
                            'fieldName' => 'failedLog',
                            'targetEntity' => 'Mautic\\CampaignBundle\\Entity\\FailedLeadEventLog',
                            'mappedBy' => 'log',
                            'fetch' => 4,
                            'cascade' => [
                                'remove',
                                'persist',
                                'refresh',
                                'merge',
                                'detach',
                            ],
                            'type' => 1,
                            'inversedBy' => null,
                            'isOwningSide' => false,
                            'sourceEntity' => 'Mautic\\CampaignBundle\\Entity\\LeadEventLog',
                            'isCascadeRemove' => true,
                            'isCascadePersist' => true,
                            'isCascadeRefresh' => true,
                            'isCascadeMerge' => true,
                            'isCascadeDetach' => true,
                            'orphanRemoval' => false,
                        ],
                    ],
                ],
                'idGenerator' => [
                    $o[1],
                ],
                'changeTrackingPolicy' => [
                    2,
                ],
            ],
        ],
        $o[0],
        []
    );
},
13 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ClassMetadata')),
            clone ($p['Doctrine\\ORM\\Id\\AssignedGenerator'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Id\\AssignedGenerator')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'Mautic\\CampaignBundle\\Entity\\FailedLeadEventLog',
                ],
                'namespace' => [
                    'Mautic\\CampaignBundle\\Entity',
                ],
                'rootEntityName' => [
                    'Mautic\\CampaignBundle\\Entity\\FailedLeadEventLog',
                ],
                'customRepositoryClassName' => [
                    'Mautic\\CampaignBundle\\Entity\\FailedLeadEventLogRepository',
                ],
                'identifier' => [
                    [
                        'log',
                    ],
                ],
                'fieldMappings' => [
                    [
                        'dateAdded' => [
                            'fieldName' => 'dateAdded',
                            'type' => 'datetime',
                            'columnName' => 'date_added',
                        ],
                        'reason' => [
                            'fieldName' => 'reason',
                            'type' => 'text',
                            'nullable' => true,
                            'columnName' => 'reason',
                        ],
                    ],
                ],
                'fieldNames' => [
                    [
                        'date_added' => 'dateAdded',
                        'reason' => 'reason',
                    ],
                ],
                'columnNames' => [
                    [
                        'dateAdded' => 'date_added',
                        'reason' => 'reason',
                    ],
                ],
                'table' => [
                    [
                        'name' => 'campaign_lead_event_failed_log',
                        'indexes' => [
                            'campaign_event_failed_date' => [
                                'columns' => [
                                    'date_added',
                                ],
                            ],
                        ],
                        'uniqueConstraints' => [],
                    ],
                ],
                'associationMappings' => [
                    [
                        'log' => [
                            'fieldName' => 'log',
                            'targetEntity' => 'Mautic\\CampaignBundle\\Entity\\LeadEventLog',
                            'id' => true,
                            'inversedBy' => 'failedLog',
                            'joinColumns' => [
                                [
                                    'name' => 'log_id',
                                    'referencedColumnName' => 'id',
                                    'nullable' => false,
                                    'unique' => false,
                                    'onDelete' => 'CASCADE',
                                    'columnDefinition' => null,
                                ],
                            ],
                            'type' => 1,
                            'mappedBy' => null,
                            'isOwningSide' => true,
                            'sourceEntity' => 'Mautic\\CampaignBundle\\Entity\\FailedLeadEventLog',
                            'fetch' => 2,
                            'cascade' => [],
                            'isCascadeRemove' => false,
                            'isCascadePersist' => false,
                            'isCascadeRefresh' => false,
                            'isCascadeMerge' => false,
                            'isCascadeDetach' => false,
                            'sourceToTargetKeyColumns' => [
                                'log_id' => 'id',
                            ],
                            'joinColumnFieldNames' => [
                                'log_id' => 'log_id',
                            ],
                            'targetToSourceKeyColumns' => [
                                'id' => 'log_id',
                            ],
                            'orphanRemoval' => false,
                        ],
                    ],
                ],
                'containsForeignIdentifier' => [
                    true,
                ],
                'idGenerator' => [
                    $o[1],
                ],
                'changeTrackingPolicy' => [
                    2,
                ],
            ],
        ],
        $o[0],
        []
    );
},
14 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ClassMetadata')),
            clone ($p['Doctrine\\ORM\\Id\\IdentityGenerator'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Id\\IdentityGenerator')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'Mautic\\CategoryBundle\\Entity\\Category',
                ],
                'namespace' => [
                    'Mautic\\CategoryBundle\\Entity',
                ],
                'rootEntityName' => [
                    'Mautic\\CategoryBundle\\Entity\\Category',
                ],
                'customRepositoryClassName' => [
                    'Mautic\\CategoryBundle\\Entity\\CategoryRepository',
                ],
                'identifier' => [
                    [
                        'id',
                    ],
                ],
                'generatorType' => [
                    4,
                ],
                'fieldMappings' => [
                    [
                        'isPublished' => [
                            'fieldName' => 'isPublished',
                            'type' => 'boolean',
                            'columnName' => 'is_published',
                            'declared' => 'Mautic\\CoreBundle\\Entity\\FormEntity',
                        ],
                        'dateAdded' => [
                            'fieldName' => 'dateAdded',
                            'type' => 'datetime',
                            'columnName' => 'date_added',
                            'nullable' => true,
                            'declared' => 'Mautic\\CoreBundle\\Entity\\FormEntity',
                        ],
                        'createdBy' => [
                            'fieldName' => 'createdBy',
                            'type' => 'integer',
                            'columnName' => 'created_by',
                            'nullable' => true,
                            'declared' => 'Mautic\\CoreBundle\\Entity\\FormEntity',
                        ],
                        'createdByUser' => [
                            'fieldName' => 'createdByUser',
                            'type' => 'string',
                            'length' => 191,
                            'columnName' => 'created_by_user',
                            'nullable' => true,
                            'declared' => 'Mautic\\CoreBundle\\Entity\\FormEntity',
                        ],
                        'dateModified' => [
                            'fieldName' => 'dateModified',
                            'type' => 'datetime',
                            'columnName' => 'date_modified',
                            'nullable' => true,
                            'declared' => 'Mautic\\CoreBundle\\Entity\\FormEntity',
                        ],
                        'modifiedBy' => [
                            'fieldName' => 'modifiedBy',
                            'type' => 'integer',
                            'columnName' => 'modified_by',
                            'nullable' => true,
                            'declared' => 'Mautic\\CoreBundle\\Entity\\FormEntity',
                        ],
                        'modifiedByUser' => [
                            'fieldName' => 'modifiedByUser',
                            'type' => 'string',
                            'length' => 191,
                            'columnName' => 'modified_by_user',
                            'nullable' => true,
                            'declared' => 'Mautic\\CoreBundle\\Entity\\FormEntity',
                        ],
                        'checkedOut' => [
                            'fieldName' => 'checkedOut',
                            'type' => 'datetime',
                            'columnName' => 'checked_out',
                            'nullable' => true,
                            'declared' => 'Mautic\\CoreBundle\\Entity\\FormEntity',
                        ],
                        'checkedOutBy' => [
                            'fieldName' => 'checkedOutBy',
                            'type' => 'integer',
                            'columnName' => 'checked_out_by',
                            'nullable' => true,
                            'declared' => 'Mautic\\CoreBundle\\Entity\\FormEntity',
                        ],
                        'checkedOutByUser' => [
                            'fieldName' => 'checkedOutByUser',
                            'type' => 'string',
                            'length' => 191,
                            'columnName' => 'checked_out_by_user',
                            'nullable' => true,
                            'declared' => 'Mautic\\CoreBundle\\Entity\\FormEntity',
                        ],
                        'id' => [
                            'fieldName' => 'id',
                            'type' => 'integer',
                            'id' => true,
                            'options' => [
                                'unsigned' => true,
                            ],
                            'columnName' => 'id',
                        ],
                        'title' => [
                            'fieldName' => 'title',
                            'type' => 'string',
                            'length' => 191,
                            'columnName' => 'title',
                        ],
                        'description' => [
                            'fieldName' => 'description',
                            'type' => 'text',
                            'nullable' => true,
                            'columnName' => 'description',
                        ],
                        'alias' => [
                            'length' => 191,
                            'fieldName' => 'alias',
                            'type' => 'string',
                            'columnName' => 'alias',
                        ],
                        'color' => [
                            'fieldName' => 'color',
                            'type' => 'string',
                            'length' => 7,
                            'nullable' => true,
                            'columnName' => 'color',
                        ],
                        'bundle' => [
                            'fieldName' => 'bundle',
                            'type' => 'string',
                            'length' => 50,
                            'columnName' => 'bundle',
                        ],
                    ],
                ],
                'fieldNames' => [
                    [
                        'is_published' => 'isPublished',
                        'date_added' => 'dateAdded',
                        'created_by' => 'createdBy',
                        'created_by_user' => 'createdByUser',
                        'date_modified' => 'dateModified',
                        'modified_by' => 'modifiedBy',
                        'modified_by_user' => 'modifiedByUser',
                        'checked_out' => 'checkedOut',
                        'checked_out_by' => 'checkedOutBy',
                        'checked_out_by_user' => 'checkedOutByUser',
                        'id' => 'id',
                        'title' => 'title',
                        'description' => 'description',
                        'alias' => 'alias',
                        'color' => 'color',
                        'bundle' => 'bundle',
                    ],
                ],
                'columnNames' => [
                    [
                        'isPublished' => 'is_published',
                        'dateAdded' => 'date_added',
                        'createdBy' => 'created_by',
                        'createdByUser' => 'created_by_user',
                        'dateModified' => 'date_modified',
                        'modifiedBy' => 'modified_by',
                        'modifiedByUser' => 'modified_by_user',
                        'checkedOut' => 'checked_out',
                        'checkedOutBy' => 'checked_out_by',
                        'checkedOutByUser' => 'checked_out_by_user',
                        'id' => 'id',
                        'title' => 'title',
                        'description' => 'description',
                        'alias' => 'alias',
                        'color' => 'color',
                        'bundle' => 'bundle',
                    ],
                ],
                'table' => [
                    [
                        'name' => 'categories',
                        'indexes' => [
                            'category_alias_search' => [
                                'columns' => [
                                    'alias',
                                ],
                            ],
                        ],
                        'uniqueConstraints' => [],
                    ],
                ],
                'idGenerator' => [
                    $o[1],
                ],
                'changeTrackingPolicy' => [
                    2,
                ],
            ],
        ],
        $o[0],
        []
    );
},
15 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ClassMetadata')),
            clone ($p['Doctrine\\ORM\\Id\\BigIntegerIdentityGenerator'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Id\\BigIntegerIdentityGenerator')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'Mautic\\ChannelBundle\\Entity\\MessageQueue',
                ],
                'namespace' => [
                    'Mautic\\ChannelBundle\\Entity',
                ],
                'rootEntityName' => [
                    'Mautic\\ChannelBundle\\Entity\\MessageQueue',
                ],
                'customRepositoryClassName' => [
                    'Mautic\\ChannelBundle\\Entity\\MessageQueueRepository',
                ],
                'identifier' => [
                    [
                        'id',
                    ],
                ],
                'generatorType' => [
                    4,
                ],
                'fieldMappings' => [
                    [
                        'id' => [
                            'fieldName' => 'id',
                            'columnName' => 'id',
                            'id' => true,
                            'nullable' => false,
                            'type' => 'bigint',
                            'options' => [
                                'unsigned' => true,
                            ],
                        ],
                        'channel' => [
                            'length' => 191,
                            'fieldName' => 'channel',
                            'type' => 'string',
                            'columnName' => 'channel',
                        ],
                        'channelId' => [
                            'fieldName' => 'channelId',
                            'type' => 'integer',
                            'columnName' => 'channel_id',
                        ],
                        'priority' => [
                            'fieldName' => 'priority',
                            'type' => 'smallint',
                            'columnName' => 'priority',
                        ],
                        'maxAttempts' => [
                            'fieldName' => 'maxAttempts',
                            'type' => 'smallint',
                            'columnName' => 'max_attempts',
                        ],
                        'attempts' => [
                            'fieldName' => 'attempts',
                            'type' => 'smallint',
                            'columnName' => 'attempts',
                        ],
                        'success' => [
                            'fieldName' => 'success',
                            'type' => 'boolean',
                            'columnName' => 'success',
                        ],
                        'status' => [
                            'fieldName' => 'status',
                            'type' => 'string',
                            'length' => 191,
                            'columnName' => 'status',
                        ],
                        'datePublished' => [
                            'fieldName' => 'datePublished',
                            'type' => 'datetime',
                            'columnName' => 'date_published',
                            'nullable' => true,
                        ],
                        'scheduledDate' => [
                            'fieldName' => 'scheduledDate',
                            'type' => 'datetime',
                            'columnName' => 'scheduled_date',
                            'nullable' => true,
                        ],
                        'lastAttempt' => [
                            'fieldName' => 'lastAttempt',
                            'type' => 'datetime',
                            'columnName' => 'last_attempt',
                            'nullable' => true,
                        ],
                        'dateSent' => [
                            'fieldName' => 'dateSent',
                            'type' => 'datetime',
                            'columnName' => 'date_sent',
                            'nullable' => true,
                        ],
                        'options' => [
                            'fieldName' => 'options',
                            'type' => 'array',
                            'nullable' => true,
                            'columnName' => 'options',
                        ],
                    ],
                ],
                'fieldNames' => [
                    [
                        'id' => 'id',
                        'channel' => 'channel',
                        'channel_id' => 'channelId',
                        'priority' => 'priority',
                        'max_attempts' => 'maxAttempts',
                        'attempts' => 'attempts',
                        'success' => 'success',
                        'status' => 'status',
                        'date_published' => 'datePublished',
                        'scheduled_date' => 'scheduledDate',
                        'last_attempt' => 'lastAttempt',
                        'date_sent' => 'dateSent',
                        'options' => 'options',
                    ],
                ],
                'columnNames' => [
                    [
                        'id' => 'id',
                        'channel' => 'channel',
                        'channelId' => 'channel_id',
                        'priority' => 'priority',
                        'maxAttempts' => 'max_attempts',
                        'attempts' => 'attempts',
                        'success' => 'success',
                        'status' => 'status',
                        'datePublished' => 'date_published',
                        'scheduledDate' => 'scheduled_date',
                        'lastAttempt' => 'last_attempt',
                        'dateSent' => 'date_sent',
                        'options' => 'options',
                    ],
                ],
                'table' => [
                    [
                        'name' => 'message_queue',
                        'indexes' => [
                            'message_status_search' => [
                                'columns' => [
                                    'status',
                                ],
                            ],
                            'message_date_sent' => [
                                'columns' => [
                                    'date_sent',
                                ],
                            ],
                            'message_scheduled_date' => [
                                'columns' => [
                                    'scheduled_date',
                                ],
                            ],
                            'message_priority' => [
                                'columns' => [
                                    'priority',
                                ],
                            ],
                            'message_success' => [
                                'columns' => [
                                    'success',
                                ],
                            ],
                            'message_channel_search' => [
                                'columns' => [
                                    'channel',
                                    'channel_id',
                                ],
                            ],
                        ],
                        'uniqueConstraints' => [],
                    ],
                ],
                'associationMappings' => [
                    [
                        'event' => [
                            'fieldName' => 'event',
                            'targetEntity' => 'Mautic\\CampaignBundle\\Entity\\Event',
                            'joinColumns' => [
                                [
                                    'name' => 'event_id',
                                    'referencedColumnName' => 'id',
                                    'nullable' => true,
                                    'unique' => false,
                                    'onDelete' => 'CASCADE',
                                    'columnDefinition' => null,
                                ],
                            ],
                            'type' => 2,
                            'mappedBy' => null,
                            'inversedBy' => null,
                            'isOwningSide' => true,
                            'sourceEntity' => 'Mautic\\ChannelBundle\\Entity\\MessageQueue',
                            'fetch' => 2,
                            'cascade' => [],
                            'isCascadeRemove' => false,
                            'isCascadePersist' => false,
                            'isCascadeRefresh' => false,
                            'isCascadeMerge' => false,
                            'isCascadeDetach' => false,
                            'sourceToTargetKeyColumns' => [
                                'event_id' => 'id',
                            ],
                            'joinColumnFieldNames' => [
                                'event_id' => 'event_id',
                            ],
                            'targetToSourceKeyColumns' => [
                                'id' => 'event_id',
                            ],
                            'orphanRemoval' => false,
                        ],
                        'lead' => [
                            'fieldName' => 'lead',
                            'targetEntity' => 'Mautic\\LeadBundle\\Entity\\Lead',
                            'joinColumns' => [
                                [
                                    'name' => 'lead_id',
                                    'referencedColumnName' => 'id',
                                    'nullable' => false,
                                    'unique' => false,
                                    'onDelete' => 'CASCADE',
                                    'columnDefinition' => null,
                                ],
                            ],
                            'type' => 2,
                            'mappedBy' => null,
                            'inversedBy' => null,
                            'isOwningSide' => true,
                            'sourceEntity' => 'Mautic\\ChannelBundle\\Entity\\MessageQueue',
                            'fetch' => 2,
                            'cascade' => [],
                            'isCascadeRemove' => false,
                            'isCascadePersist' => false,
                            'isCascadeRefresh' => false,
                            'isCascadeMerge' => false,
                            'isCascadeDetach' => false,
                            'sourceToTargetKeyColumns' => [
                                'lead_id' => 'id',
                            ],
                            'joinColumnFieldNames' => [
                                'lead_id' => 'lead_id',
                            ],
                            'targetToSourceKeyColumns' => [
                                'id' => 'lead_id',
                            ],
                            'orphanRemoval' => false,
                        ],
                    ],
                ],
                'idGenerator' => [
                    $o[1],
                ],
                'changeTrackingPolicy' => [
                    2,
                ],
            ],
        ],
        $o[0],
        []
    );
},
16 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ClassMetadata')),
            clone ($p['Doctrine\\ORM\\Id\\IdentityGenerator'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Id\\IdentityGenerator')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'Mautic\\ChannelBundle\\Entity\\Channel',
                ],
                'namespace' => [
                    'Mautic\\ChannelBundle\\Entity',
                ],
                'rootEntityName' => [
                    'Mautic\\ChannelBundle\\Entity\\Channel',
                ],
                'identifier' => [
                    [
                        'id',
                    ],
                ],
                'generatorType' => [
                    4,
                ],
                'fieldMappings' => [
                    [
                        'id' => [
                            'fieldName' => 'id',
                            'type' => 'integer',
                            'id' => true,
                            'options' => [
                                'unsigned' => true,
                            ],
                            'columnName' => 'id',
                        ],
                        'channel' => [
                            'length' => 191,
                            'fieldName' => 'channel',
                            'type' => 'string',
                            'columnName' => 'channel',
                        ],
                        'channelId' => [
                            'fieldName' => 'channelId',
                            'type' => 'integer',
                            'columnName' => 'channel_id',
                            'nullable' => true,
                        ],
                        'properties' => [
                            'fieldName' => 'properties',
                            'type' => 'json_array',
                            'columnName' => 'properties',
                        ],
                        'isEnabled' => [
                            'fieldName' => 'isEnabled',
                            'type' => 'boolean',
                            'columnName' => 'is_enabled',
                        ],
                    ],
                ],
                'fieldNames' => [
                    [
                        'id' => 'id',
                        'channel' => 'channel',
                        'channel_id' => 'channelId',
                        'properties' => 'properties',
                        'is_enabled' => 'isEnabled',
                    ],
                ],
                'columnNames' => [
                    [
                        'id' => 'id',
                        'channel' => 'channel',
                        'channelId' => 'channel_id',
                        'properties' => 'properties',
                        'isEnabled' => 'is_enabled',
                    ],
                ],
                'table' => [
                    [
                        'name' => 'message_channels',
                        'indexes' => [
                            'channel_entity_index' => [
                                'columns' => [
                                    'channel',
                                    'channel_id',
                                ],
                            ],
                            'channel_enabled_index' => [
                                'columns' => [
                                    'channel',
                                    'is_enabled',
                                ],
                            ],
                        ],
                        'uniqueConstraints' => [
                            'channel_index' => [
                                'columns' => [
                                    'message_id',
                                    'channel',
                                ],
                            ],
                        ],
                    ],
                ],
                'associationMappings' => [
                    [
                        'message' => [
                            'fieldName' => 'message',
                            'targetEntity' => 'Mautic\\ChannelBundle\\Entity\\Message',
                            'inversedBy' => 'channels',
                            'joinColumns' => [
                                [
                                    'name' => 'message_id',
                                    'referencedColumnName' => 'id',
                                    'nullable' => false,
                                    'unique' => false,
                                    'onDelete' => 'CASCADE',
                                    'columnDefinition' => null,
                                ],
                            ],
                            'type' => 2,
                            'mappedBy' => null,
                            'isOwningSide' => true,
                            'sourceEntity' => 'Mautic\\ChannelBundle\\Entity\\Channel',
                            'fetch' => 2,
                            'cascade' => [],
                            'isCascadeRemove' => false,
                            'isCascadePersist' => false,
                            'isCascadeRefresh' => false,
                            'isCascadeMerge' => false,
                            'isCascadeDetach' => false,
                            'sourceToTargetKeyColumns' => [
                                'message_id' => 'id',
                            ],
                            'joinColumnFieldNames' => [
                                'message_id' => 'message_id',
                            ],
                            'targetToSourceKeyColumns' => [
                                'id' => 'message_id',
                            ],
                            'orphanRemoval' => false,
                        ],
                    ],
                ],
                'idGenerator' => [
                    $o[1],
                ],
                'changeTrackingPolicy' => [
                    2,
                ],
            ],
        ],
        $o[0],
        []
    );
},
17 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ClassMetadata')),
            clone ($p['Doctrine\\ORM\\Id\\IdentityGenerator'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Id\\IdentityGenerator')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'Mautic\\ChannelBundle\\Entity\\Message',
                ],
                'namespace' => [
                    'Mautic\\ChannelBundle\\Entity',
                ],
                'rootEntityName' => [
                    'Mautic\\ChannelBundle\\Entity\\Message',
                ],
                'customRepositoryClassName' => [
                    'Mautic\\ChannelBundle\\Entity\\MessageRepository',
                ],
                'identifier' => [
                    [
                        'id',
                    ],
                ],
                'generatorType' => [
                    4,
                ],
                'fieldMappings' => [
                    [
                        'isPublished' => [
                            'fieldName' => 'isPublished',
                            'type' => 'boolean',
                            'columnName' => 'is_published',
                            'declared' => 'Mautic\\CoreBundle\\Entity\\FormEntity',
                        ],
                        'dateAdded' => [
                            'fieldName' => 'dateAdded',
                            'type' => 'datetime',
                            'columnName' => 'date_added',
                            'nullable' => true,
                            'declared' => 'Mautic\\CoreBundle\\Entity\\FormEntity',
                        ],
                        'createdBy' => [
                            'fieldName' => 'createdBy',
                            'type' => 'integer',
                            'columnName' => 'created_by',
                            'nullable' => true,
                            'declared' => 'Mautic\\CoreBundle\\Entity\\FormEntity',
                        ],
                        'createdByUser' => [
                            'fieldName' => 'createdByUser',
                            'type' => 'string',
                            'length' => 191,
                            'columnName' => 'created_by_user',
                            'nullable' => true,
                            'declared' => 'Mautic\\CoreBundle\\Entity\\FormEntity',
                        ],
                        'dateModified' => [
                            'fieldName' => 'dateModified',
                            'type' => 'datetime',
                            'columnName' => 'date_modified',
                            'nullable' => true,
                            'declared' => 'Mautic\\CoreBundle\\Entity\\FormEntity',
                        ],
                        'modifiedBy' => [
                            'fieldName' => 'modifiedBy',
                            'type' => 'integer',
                            'columnName' => 'modified_by',
                            'nullable' => true,
                            'declared' => 'Mautic\\CoreBundle\\Entity\\FormEntity',
                        ],
                        'modifiedByUser' => [
                            'fieldName' => 'modifiedByUser',
                            'type' => 'string',
                            'length' => 191,
                            'columnName' => 'modified_by_user',
                            'nullable' => true,
                            'declared' => 'Mautic\\CoreBundle\\Entity\\FormEntity',
                        ],
                        'checkedOut' => [
                            'fieldName' => 'checkedOut',
                            'type' => 'datetime',
                            'columnName' => 'checked_out',
                            'nullable' => true,
                            'declared' => 'Mautic\\CoreBundle\\Entity\\FormEntity',
                        ],
                        'checkedOutBy' => [
                            'fieldName' => 'checkedOutBy',
                            'type' => 'integer',
                            'columnName' => 'checked_out_by',
                            'nullable' => true,
                            'declared' => 'Mautic\\CoreBundle\\Entity\\FormEntity',
                        ],
                        'checkedOutByUser' => [
                            'fieldName' => 'checkedOutByUser',
                            'type' => 'string',
                            'length' => 191,
                            'columnName' => 'checked_out_by_user',
                            'nullable' => true,
                            'declared' => 'Mautic\\CoreBundle\\Entity\\FormEntity',
                        ],
                        'id' => [
                            'fieldName' => 'id',
                            'type' => 'integer',
                            'id' => true,
                            'options' => [
                                'unsigned' => true,
                            ],
                            'columnName' => 'id',
                        ],
                        'name' => [
                            'fieldName' => 'name',
                            'type' => 'string',
                            'length' => 191,
                            'columnName' => 'name',
                        ],
                        'description' => [
                            'fieldName' => 'description',
                            'type' => 'text',
                            'nullable' => true,
                            'columnName' => 'description',
                        ],
                        'publishUp' => [
                            'fieldName' => 'publishUp',
                            'type' => 'datetime',
                            'columnName' => 'publish_up',
                            'nullable' => true,
                        ],
                        'publishDown' => [
                            'fieldName' => 'publishDown',
                            'type' => 'datetime',
                            'columnName' => 'publish_down',
                            'nullable' => true,
                        ],
                    ],
                ],
                'fieldNames' => [
                    [
                        'is_published' => 'isPublished',
                        'date_added' => 'dateAdded',
                        'created_by' => 'createdBy',
                        'created_by_user' => 'createdByUser',
                        'date_modified' => 'dateModified',
                        'modified_by' => 'modifiedBy',
                        'modified_by_user' => 'modifiedByUser',
                        'checked_out' => 'checkedOut',
                        'checked_out_by' => 'checkedOutBy',
                        'checked_out_by_user' => 'checkedOutByUser',
                        'id' => 'id',
                        'name' => 'name',
                        'description' => 'description',
                        'publish_up' => 'publishUp',
                        'publish_down' => 'publishDown',
                    ],
                ],
                'columnNames' => [
                    [
                        'isPublished' => 'is_published',
                        'dateAdded' => 'date_added',
                        'createdBy' => 'created_by',
                        'createdByUser' => 'created_by_user',
                        'dateModified' => 'date_modified',
                        'modifiedBy' => 'modified_by',
                        'modifiedByUser' => 'modified_by_user',
                        'checkedOut' => 'checked_out',
                        'checkedOutBy' => 'checked_out_by',
                        'checkedOutByUser' => 'checked_out_by_user',
                        'id' => 'id',
                        'name' => 'name',
                        'description' => 'description',
                        'publishUp' => 'publish_up',
                        'publishDown' => 'publish_down',
                    ],
                ],
                'table' => [
                    [
                        'name' => 'messages',
                        'indexes' => [
                            'date_message_added' => [
                                'columns' => [
                                    'date_added',
                                ],
                            ],
                        ],
                        'uniqueConstraints' => [],
                    ],
                ],
                'associationMappings' => [
                    [
                        'category' => [
                            'fieldName' => 'category',
                            'targetEntity' => 'Mautic\\CategoryBundle\\Entity\\Category',
                            'cascade' => [
                                'merge',
                                'detach',
                            ],
                            'joinColumns' => [
                                [
                                    'name' => 'category_id',
                                    'referencedColumnName' => 'id',
                                    'nullable' => true,
                                    'unique' => false,
                                    'onDelete' => 'SET NULL',
                                    'columnDefinition' => null,
                                ],
                            ],
                            'type' => 2,
                            'mappedBy' => null,
                            'inversedBy' => null,
                            'isOwningSide' => true,
                            'sourceEntity' => 'Mautic\\ChannelBundle\\Entity\\Message',
                            'fetch' => 2,
                            'isCascadeRemove' => false,
                            'isCascadePersist' => false,
                            'isCascadeRefresh' => false,
                            'isCascadeMerge' => true,
                            'isCascadeDetach' => true,
                            'sourceToTargetKeyColumns' => [
                                'category_id' => 'id',
                            ],
                            'joinColumnFieldNames' => [
                                'category_id' => 'category_id',
                            ],
                            'targetToSourceKeyColumns' => [
                                'id' => 'category_id',
                            ],
                            'orphanRemoval' => false,
                        ],
                        'channels' => [
                            'fieldName' => 'channels',
                            'targetEntity' => 'Mautic\\ChannelBundle\\Entity\\Channel',
                            'indexBy' => 'channel',
                            'orphanRemoval' => true,
                            'mappedBy' => 'message',
                            'cascade' => [
                                'merge',
                                'persist',
                                'detach',
                            ],
                            'type' => 4,
                            'inversedBy' => null,
                            'isOwningSide' => false,
                            'sourceEntity' => 'Mautic\\ChannelBundle\\Entity\\Message',
                            'fetch' => 2,
                            'isCascadeRemove' => true,
                            'isCascadePersist' => true,
                            'isCascadeRefresh' => false,
                            'isCascadeMerge' => true,
                            'isCascadeDetach' => true,
                        ],
                    ],
                ],
                'idGenerator' => [
                    $o[1],
                ],
                'changeTrackingPolicy' => [
                    2,
                ],
            ],
        ],
        $o[0],
        []
    );
},
18 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ClassMetadata')),
            clone ($p['Doctrine\\ORM\\Id\\AssignedGenerator'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Id\\AssignedGenerator')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'Mautic\\CoreBundle\\Entity\\Cache',
                ],
                'namespace' => [
                    'Mautic\\CoreBundle\\Entity',
                ],
                'rootEntityName' => [
                    'Mautic\\CoreBundle\\Entity\\Cache',
                ],
                'identifier' => [
                    [
                        'id',
                    ],
                ],
                'fieldMappings' => [
                    [
                        'id' => [
                            'fieldName' => 'id',
                            'type' => 'binary',
                            'columnName' => 'item_id',
                            'id' => true,
                        ],
                        'data' => [
                            'fieldName' => 'data',
                            'type' => 'blob',
                            'columnName' => 'item_data',
                        ],
                        'lifetime' => [
                            'columnName' => 'item_lifetime',
                            'nullable' => true,
                            'options' => [
                                'unsigned' => true,
                            ],
                            'fieldName' => 'lifetime',
                            'type' => 'integer',
                        ],
                        'time' => [
                            'columnName' => 'item_time',
                            'options' => [
                                'unsigned' => true,
                            ],
                            'fieldName' => 'time',
                            'type' => 'integer',
                        ],
                    ],
                ],
                'fieldNames' => [
                    [
                        'item_id' => 'id',
                        'item_data' => 'data',
                        'item_lifetime' => 'lifetime',
                        'item_time' => 'time',
                    ],
                ],
                'columnNames' => [
                    [
                        'id' => 'item_id',
                        'data' => 'item_data',
                        'lifetime' => 'item_lifetime',
                        'time' => 'item_time',
                    ],
                ],
                'table' => [
                    [
                        'name' => 'cache_items',
                        'indexes' => [],
                        'uniqueConstraints' => [],
                    ],
                ],
                'idGenerator' => [
                    $o[1],
                ],
                'changeTrackingPolicy' => [
                    2,
                ],
            ],
        ],
        $o[0],
        []
    );
},
19 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ClassMetadata')),
            clone ($p['Doctrine\\ORM\\Id\\IdentityGenerator'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Id\\IdentityGenerator')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'Mautic\\CoreBundle\\Entity\\IpAddress',
                ],
                'namespace' => [
                    'Mautic\\CoreBundle\\Entity',
                ],
                'rootEntityName' => [
                    'Mautic\\CoreBundle\\Entity\\IpAddress',
                ],
                'customRepositoryClassName' => [
                    'Mautic\\CoreBundle\\Entity\\IpAddressRepository',
                ],
                'identifier' => [
                    [
                        'id',
                    ],
                ],
                'generatorType' => [
                    4,
                ],
                'fieldMappings' => [
                    [
                        'id' => [
                            'fieldName' => 'id',
                            'type' => 'integer',
                            'id' => true,
                            'options' => [
                                'unsigned' => true,
                            ],
                            'columnName' => 'id',
                        ],
                        'ipAddress' => [
                            'fieldName' => 'ipAddress',
                            'type' => 'string',
                            'length' => 45,
                            'columnName' => 'ip_address',
                        ],
                        'ipDetails' => [
                            'fieldName' => 'ipDetails',
                            'type' => 'array',
                            'columnName' => 'ip_details',
                            'nullable' => true,
                        ],
                    ],
                ],
                'fieldNames' => [
                    [
                        'id' => 'id',
                        'ip_address' => 'ipAddress',
                        'ip_details' => 'ipDetails',
                    ],
                ],
                'columnNames' => [
                    [
                        'id' => 'id',
                        'ipAddress' => 'ip_address',
                        'ipDetails' => 'ip_details',
                    ],
                ],
                'table' => [
                    [
                        'name' => 'ip_addresses',
                        'indexes' => [
                            'ip_search' => [
                                'columns' => [
                                    'ip_address',
                                ],
                            ],
                        ],
                        'uniqueConstraints' => [],
                    ],
                ],
                'idGenerator' => [
                    $o[1],
                ],
                'changeTrackingPolicy' => [
                    2,
                ],
            ],
        ],
        $o[0],
        []
    );
},
20 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ClassMetadata')),
            clone ($p['Doctrine\\ORM\\Id\\BigIntegerIdentityGenerator'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Id\\BigIntegerIdentityGenerator')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'Mautic\\CoreBundle\\Entity\\AuditLog',
                ],
                'namespace' => [
                    'Mautic\\CoreBundle\\Entity',
                ],
                'rootEntityName' => [
                    'Mautic\\CoreBundle\\Entity\\AuditLog',
                ],
                'customRepositoryClassName' => [
                    'Mautic\\CoreBundle\\Entity\\AuditLogRepository',
                ],
                'identifier' => [
                    [
                        'id',
                    ],
                ],
                'generatorType' => [
                    4,
                ],
                'fieldMappings' => [
                    [
                        'id' => [
                            'fieldName' => 'id',
                            'columnName' => 'id',
                            'id' => true,
                            'nullable' => false,
                            'type' => 'bigint',
                            'options' => [
                                'unsigned' => true,
                            ],
                        ],
                        'userId' => [
                            'fieldName' => 'userId',
                            'type' => 'integer',
                            'columnName' => 'user_id',
                        ],
                        'userName' => [
                            'fieldName' => 'userName',
                            'type' => 'string',
                            'length' => 191,
                            'columnName' => 'user_name',
                        ],
                        'bundle' => [
                            'fieldName' => 'bundle',
                            'type' => 'string',
                            'length' => 50,
                            'columnName' => 'bundle',
                        ],
                        'object' => [
                            'fieldName' => 'object',
                            'type' => 'string',
                            'length' => 50,
                            'columnName' => 'object',
                        ],
                        'objectId' => [
                            'fieldName' => 'objectId',
                            'columnName' => 'object_id',
                            'id' => false,
                            'nullable' => false,
                            'type' => 'bigint',
                            'options' => [
                                'unsigned' => true,
                            ],
                        ],
                        'action' => [
                            'fieldName' => 'action',
                            'type' => 'string',
                            'length' => 50,
                            'columnName' => 'action',
                        ],
                        'details' => [
                            'fieldName' => 'details',
                            'type' => 'array',
                            'nullable' => true,
                            'columnName' => 'details',
                        ],
                        'dateAdded' => [
                            'fieldName' => 'dateAdded',
                            'type' => 'datetime',
                            'columnName' => 'date_added',
                        ],
                        'ipAddress' => [
                            'fieldName' => 'ipAddress',
                            'type' => 'string',
                            'length' => 45,
                            'columnName' => 'ip_address',
                        ],
                    ],
                ],
                'fieldNames' => [
                    [
                        'id' => 'id',
                        'user_id' => 'userId',
                        'user_name' => 'userName',
                        'bundle' => 'bundle',
                        'object' => 'object',
                        'object_id' => 'objectId',
                        'action' => 'action',
                        'details' => 'details',
                        'date_added' => 'dateAdded',
                        'ip_address' => 'ipAddress',
                    ],
                ],
                'columnNames' => [
                    [
                        'id' => 'id',
                        'userId' => 'user_id',
                        'userName' => 'user_name',
                        'bundle' => 'bundle',
                        'object' => 'object',
                        'objectId' => 'object_id',
                        'action' => 'action',
                        'details' => 'details',
                        'dateAdded' => 'date_added',
                        'ipAddress' => 'ip_address',
                    ],
                ],
                'table' => [
                    [
                        'name' => 'audit_log',
                        'indexes' => [
                            'object_search' => [
                                'columns' => [
                                    'object',
                                    'object_id',
                                ],
                            ],
                            'timeline_search' => [
                                'columns' => [
                                    'bundle',
                                    'object',
                                    'action',
                                    'object_id',
                                ],
                            ],
                            'date_added_index' => [
                                'columns' => [
                                    'date_added',
                                ],
                            ],
                        ],
                        'uniqueConstraints' => [],
                    ],
                ],
                'idGenerator' => [
                    $o[1],
                ],
                'changeTrackingPolicy' => [
                    2,
                ],
            ],
        ],
        $o[0],
        []
    );
},
21 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ClassMetadata')),
            clone ($p['Doctrine\\ORM\\Id\\IdentityGenerator'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Id\\IdentityGenerator')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'Mautic\\CoreBundle\\Entity\\Notification',
                ],
                'namespace' => [
                    'Mautic\\CoreBundle\\Entity',
                ],
                'rootEntityName' => [
                    'Mautic\\CoreBundle\\Entity\\Notification',
                ],
                'customRepositoryClassName' => [
                    'Mautic\\CoreBundle\\Entity\\NotificationRepository',
                ],
                'identifier' => [
                    [
                        'id',
                    ],
                ],
                'generatorType' => [
                    4,
                ],
                'fieldMappings' => [
                    [
                        'id' => [
                            'fieldName' => 'id',
                            'type' => 'integer',
                            'id' => true,
                            'options' => [
                                'unsigned' => true,
                            ],
                            'columnName' => 'id',
                        ],
                        'type' => [
                            'fieldName' => 'type',
                            'type' => 'string',
                            'length' => 25,
                            'nullable' => true,
                            'columnName' => 'type',
                        ],
                        'header' => [
                            'fieldName' => 'header',
                            'type' => 'string',
                            'length' => 512,
                            'nullable' => true,
                            'columnName' => 'header',
                        ],
                        'message' => [
                            'fieldName' => 'message',
                            'type' => 'text',
                            'columnName' => 'message',
                        ],
                        'dateAdded' => [
                            'fieldName' => 'dateAdded',
                            'type' => 'datetime',
                            'columnName' => 'date_added',
                        ],
                        'iconClass' => [
                            'fieldName' => 'iconClass',
                            'type' => 'string',
                            'length' => 191,
                            'columnName' => 'icon_class',
                            'nullable' => true,
                        ],
                        'isRead' => [
                            'fieldName' => 'isRead',
                            'type' => 'boolean',
                            'columnName' => 'is_read',
                        ],
                    ],
                ],
                'fieldNames' => [
                    [
                        'id' => 'id',
                        'type' => 'type',
                        'header' => 'header',
                        'message' => 'message',
                        'date_added' => 'dateAdded',
                        'icon_class' => 'iconClass',
                        'is_read' => 'isRead',
                    ],
                ],
                'columnNames' => [
                    [
                        'id' => 'id',
                        'type' => 'type',
                        'header' => 'header',
                        'message' => 'message',
                        'dateAdded' => 'date_added',
                        'iconClass' => 'icon_class',
                        'isRead' => 'is_read',
                    ],
                ],
                'table' => [
                    [
                        'name' => 'notifications',
                        'indexes' => [
                            'notification_read_status' => [
                                'columns' => [
                                    'is_read',
                                ],
                            ],
                            'notification_type' => [
                                'columns' => [
                                    'type',
                                ],
                            ],
                            'notification_user_read_status' => [
                                'columns' => [
                                    'is_read',
                                    'user_id',
                                ],
                            ],
                        ],
                        'uniqueConstraints' => [],
                    ],
                ],
                'associationMappings' => [
                    [
                        'user' => [
                            'fieldName' => 'user',
                            'targetEntity' => 'Mautic\\UserBundle\\Entity\\User',
                            'joinColumns' => [
                                [
                                    'name' => 'user_id',
                                    'referencedColumnName' => 'id',
                                    'nullable' => false,
                                    'unique' => false,
                                    'onDelete' => 'CASCADE',
                                    'columnDefinition' => null,
                                ],
                            ],
                            'type' => 2,
                            'mappedBy' => null,
                            'inversedBy' => null,
                            'isOwningSide' => true,
                            'sourceEntity' => 'Mautic\\CoreBundle\\Entity\\Notification',
                            'fetch' => 2,
                            'cascade' => [],
                            'isCascadeRemove' => false,
                            'isCascadePersist' => false,
                            'isCascadeRefresh' => false,
                            'isCascadeMerge' => false,
                            'isCascadeDetach' => false,
                            'sourceToTargetKeyColumns' => [
                                'user_id' => 'id',
                            ],
                            'joinColumnFieldNames' => [
                                'user_id' => 'user_id',
                            ],
                            'targetToSourceKeyColumns' => [
                                'id' => 'user_id',
                            ],
                            'orphanRemoval' => false,
                        ],
                    ],
                ],
                'idGenerator' => [
                    $o[1],
                ],
                'changeTrackingPolicy' => [
                    2,
                ],
            ],
        ],
        $o[0],
        []
    );
},
22 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ClassMetadata')),
            clone ($p['Doctrine\\ORM\\Id\\IdentityGenerator'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Id\\IdentityGenerator')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'Mautic\\DashboardBundle\\Entity\\Widget',
                ],
                'namespace' => [
                    'Mautic\\DashboardBundle\\Entity',
                ],
                'rootEntityName' => [
                    'Mautic\\DashboardBundle\\Entity\\Widget',
                ],
                'customRepositoryClassName' => [
                    'Mautic\\DashboardBundle\\Entity\\WidgetRepository',
                ],
                'identifier' => [
                    [
                        'id',
                    ],
                ],
                'generatorType' => [
                    4,
                ],
                'fieldMappings' => [
                    [
                        'isPublished' => [
                            'fieldName' => 'isPublished',
                            'type' => 'boolean',
                            'columnName' => 'is_published',
                            'declared' => 'Mautic\\CoreBundle\\Entity\\FormEntity',
                        ],
                        'dateAdded' => [
                            'fieldName' => 'dateAdded',
                            'type' => 'datetime',
                            'columnName' => 'date_added',
                            'nullable' => true,
                            'declared' => 'Mautic\\CoreBundle\\Entity\\FormEntity',
                        ],
                        'createdBy' => [
                            'fieldName' => 'createdBy',
                            'type' => 'integer',
                            'columnName' => 'created_by',
                            'nullable' => true,
                            'declared' => 'Mautic\\CoreBundle\\Entity\\FormEntity',
                        ],
                        'createdByUser' => [
                            'fieldName' => 'createdByUser',
                            'type' => 'string',
                            'length' => 191,
                            'columnName' => 'created_by_user',
                            'nullable' => true,
                            'declared' => 'Mautic\\CoreBundle\\Entity\\FormEntity',
                        ],
                        'dateModified' => [
                            'fieldName' => 'dateModified',
                            'type' => 'datetime',
                            'columnName' => 'date_modified',
                            'nullable' => true,
                            'declared' => 'Mautic\\CoreBundle\\Entity\\FormEntity',
                        ],
                        'modifiedBy' => [
                            'fieldName' => 'modifiedBy',
                            'type' => 'integer',
                            'columnName' => 'modified_by',
                            'nullable' => true,
                            'declared' => 'Mautic\\CoreBundle\\Entity\\FormEntity',
                        ],
                        'modifiedByUser' => [
                            'fieldName' => 'modifiedByUser',
                            'type' => 'string',
                            'length' => 191,
                            'columnName' => 'modified_by_user',
                            'nullable' => true,
                            'declared' => 'Mautic\\CoreBundle\\Entity\\FormEntity',
                        ],
                        'checkedOut' => [
                            'fieldName' => 'checkedOut',
                            'type' => 'datetime',
                            'columnName' => 'checked_out',
                            'nullable' => true,
                            'declared' => 'Mautic\\CoreBundle\\Entity\\FormEntity',
                        ],
                        'checkedOutBy' => [
                            'fieldName' => 'checkedOutBy',
                            'type' => 'integer',
                            'columnName' => 'checked_out_by',
                            'nullable' => true,
                            'declared' => 'Mautic\\CoreBundle\\Entity\\FormEntity',
                        ],
                        'checkedOutByUser' => [
                            'fieldName' => 'checkedOutByUser',
                            'type' => 'string',
                            'length' => 191,
                            'columnName' => 'checked_out_by_user',
                            'nullable' => true,
                            'declared' => 'Mautic\\CoreBundle\\Entity\\FormEntity',
                        ],
                        'id' => [
                            'fieldName' => 'id',
                            'type' => 'integer',
                            'id' => true,
                            'options' => [
                                'unsigned' => true,
                            ],
                            'columnName' => 'id',
                        ],
                        'name' => [
                            'fieldName' => 'name',
                            'type' => 'string',
                            'length' => 191,
                            'columnName' => 'name',
                        ],
                        'type' => [
                            'length' => 191,
                            'fieldName' => 'type',
                            'type' => 'string',
                            'columnName' => 'type',
                        ],
                        'width' => [
                            'fieldName' => 'width',
                            'type' => 'integer',
                            'columnName' => 'width',
                        ],
                        'height' => [
                            'fieldName' => 'height',
                            'type' => 'integer',
                            'columnName' => 'height',
                        ],
                        'cacheTimeout' => [
                            'fieldName' => 'cacheTimeout',
                            'type' => 'integer',
                            'nullable' => true,
                            'columnName' => 'cache_timeout',
                        ],
                        'ordering' => [
                            'fieldName' => 'ordering',
                            'type' => 'integer',
                            'nullable' => true,
                            'columnName' => 'ordering',
                        ],
                        'params' => [
                            'fieldName' => 'params',
                            'type' => 'array',
                            'nullable' => true,
                            'columnName' => 'params',
                        ],
                    ],
                ],
                'fieldNames' => [
                    [
                        'is_published' => 'isPublished',
                        'date_added' => 'dateAdded',
                        'created_by' => 'createdBy',
                        'created_by_user' => 'createdByUser',
                        'date_modified' => 'dateModified',
                        'modified_by' => 'modifiedBy',
                        'modified_by_user' => 'modifiedByUser',
                        'checked_out' => 'checkedOut',
                        'checked_out_by' => 'checkedOutBy',
                        'checked_out_by_user' => 'checkedOutByUser',
                        'id' => 'id',
                        'name' => 'name',
                        'type' => 'type',
                        'width' => 'width',
                        'height' => 'height',
                        'cache_timeout' => 'cacheTimeout',
                        'ordering' => 'ordering',
                        'params' => 'params',
                    ],
                ],
                'columnNames' => [
                    [
                        'isPublished' => 'is_published',
                        'dateAdded' => 'date_added',
                        'createdBy' => 'created_by',
                        'createdByUser' => 'created_by_user',
                        'dateModified' => 'date_modified',
                        'modifiedBy' => 'modified_by',
                        'modifiedByUser' => 'modified_by_user',
                        'checkedOut' => 'checked_out',
                        'checkedOutBy' => 'checked_out_by',
                        'checkedOutByUser' => 'checked_out_by_user',
                        'id' => 'id',
                        'name' => 'name',
                        'type' => 'type',
                        'width' => 'width',
                        'height' => 'height',
                        'cacheTimeout' => 'cache_timeout',
                        'ordering' => 'ordering',
                        'params' => 'params',
                    ],
                ],
                'table' => [
                    [
                        'name' => 'widgets',
                        'indexes' => [],
                        'uniqueConstraints' => [],
                    ],
                ],
                'idGenerator' => [
                    $o[1],
                ],
                'changeTrackingPolicy' => [
                    2,
                ],
            ],
        ],
        $o[0],
        []
    );
},
23 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ClassMetadata')),
            clone ($p['Doctrine\\ORM\\Id\\IdentityGenerator'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Id\\IdentityGenerator')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'Mautic\\DynamicContentBundle\\Entity\\DynamicContent',
                ],
                'namespace' => [
                    'Mautic\\DynamicContentBundle\\Entity',
                ],
                'rootEntityName' => [
                    'Mautic\\DynamicContentBundle\\Entity\\DynamicContent',
                ],
                'customRepositoryClassName' => [
                    'Mautic\\DynamicContentBundle\\Entity\\DynamicContentRepository',
                ],
                'identifier' => [
                    [
                        'id',
                    ],
                ],
                'generatorType' => [
                    4,
                ],
                'fieldMappings' => [
                    [
                        'isPublished' => [
                            'fieldName' => 'isPublished',
                            'type' => 'boolean',
                            'columnName' => 'is_published',
                            'declared' => 'Mautic\\CoreBundle\\Entity\\FormEntity',
                        ],
                        'dateAdded' => [
                            'fieldName' => 'dateAdded',
                            'type' => 'datetime',
                            'columnName' => 'date_added',
                            'nullable' => true,
                            'declared' => 'Mautic\\CoreBundle\\Entity\\FormEntity',
                        ],
                        'createdBy' => [
                            'fieldName' => 'createdBy',
                            'type' => 'integer',
                            'columnName' => 'created_by',
                            'nullable' => true,
                            'declared' => 'Mautic\\CoreBundle\\Entity\\FormEntity',
                        ],
                        'createdByUser' => [
                            'fieldName' => 'createdByUser',
                            'type' => 'string',
                            'length' => 191,
                            'columnName' => 'created_by_user',
                            'nullable' => true,
                            'declared' => 'Mautic\\CoreBundle\\Entity\\FormEntity',
                        ],
                        'dateModified' => [
                            'fieldName' => 'dateModified',
                            'type' => 'datetime',
                            'columnName' => 'date_modified',
                            'nullable' => true,
                            'declared' => 'Mautic\\CoreBundle\\Entity\\FormEntity',
                        ],
                        'modifiedBy' => [
                            'fieldName' => 'modifiedBy',
                            'type' => 'integer',
                            'columnName' => 'modified_by',
                            'nullable' => true,
                            'declared' => 'Mautic\\CoreBundle\\Entity\\FormEntity',
                        ],
                        'modifiedByUser' => [
                            'fieldName' => 'modifiedByUser',
                            'type' => 'string',
                            'length' => 191,
                            'columnName' => 'modified_by_user',
                            'nullable' => true,
                            'declared' => 'Mautic\\CoreBundle\\Entity\\FormEntity',
                        ],
                        'checkedOut' => [
                            'fieldName' => 'checkedOut',
                            'type' => 'datetime',
                            'columnName' => 'checked_out',
                            'nullable' => true,
                            'declared' => 'Mautic\\CoreBundle\\Entity\\FormEntity',
                        ],
                        'checkedOutBy' => [
                            'fieldName' => 'checkedOutBy',
                            'type' => 'integer',
                            'columnName' => 'checked_out_by',
                            'nullable' => true,
                            'declared' => 'Mautic\\CoreBundle\\Entity\\FormEntity',
                        ],
                        'checkedOutByUser' => [
                            'fieldName' => 'checkedOutByUser',
                            'type' => 'string',
                            'length' => 191,
                            'columnName' => 'checked_out_by_user',
                            'nullable' => true,
                            'declared' => 'Mautic\\CoreBundle\\Entity\\FormEntity',
                        ],
                        'id' => [
                            'fieldName' => 'id',
                            'type' => 'integer',
                            'id' => true,
                            'options' => [
                                'unsigned' => true,
                            ],
                            'columnName' => 'id',
                        ],
                        'name' => [
                            'fieldName' => 'name',
                            'type' => 'string',
                            'length' => 191,
                            'columnName' => 'name',
                        ],
                        'description' => [
                            'fieldName' => 'description',
                            'type' => 'text',
                            'nullable' => true,
                            'columnName' => 'description',
                        ],
                        'publishUp' => [
                            'fieldName' => 'publishUp',
                            'type' => 'datetime',
                            'columnName' => 'publish_up',
                            'nullable' => true,
                        ],
                        'publishDown' => [
                            'fieldName' => 'publishDown',
                            'type' => 'datetime',
                            'columnName' => 'publish_down',
                            'nullable' => true,
                        ],
                        'sentCount' => [
                            'fieldName' => 'sentCount',
                            'type' => 'integer',
                            'columnName' => 'sent_count',
                        ],
                        'content' => [
                            'fieldName' => 'content',
                            'type' => 'text',
                            'columnName' => 'content',
                            'nullable' => true,
                        ],
                        'utmTags' => [
                            'fieldName' => 'utmTags',
                            'type' => 'json_array',
                            'columnName' => 'utm_tags',
                            'nullable' => true,
                        ],
                        'language' => [
                            'fieldName' => 'language',
                            'type' => 'string',
                            'length' => 191,
                            'columnName' => 'lang',
                        ],
                        'variantSettings' => [
                            'fieldName' => 'variantSettings',
                            'type' => 'array',
                            'columnName' => 'variant_settings',
                            'nullable' => true,
                        ],
                        'variantStartDate' => [
                            'fieldName' => 'variantStartDate',
                            'type' => 'datetime',
                            'columnName' => 'variant_start_date',
                            'nullable' => true,
                        ],
                        'filters' => [
                            'fieldName' => 'filters',
                            'type' => 'array',
                            'columnName' => 'filters',
                            'nullable' => true,
                        ],
                        'isCampaignBased' => [
                            'fieldName' => 'isCampaignBased',
                            'type' => 'boolean',
                            'columnName' => 'is_campaign_based',
                            'options' => [
                                'default' => 1,
                            ],
                        ],
                        'slotName' => [
                            'fieldName' => 'slotName',
                            'type' => 'string',
                            'length' => 191,
                            'columnName' => 'slot_name',
                            'nullable' => true,
                        ],
                    ],
                ],
                'fieldNames' => [
                    [
                        'is_published' => 'isPublished',
                        'date_added' => 'dateAdded',
                        'created_by' => 'createdBy',
                        'created_by_user' => 'createdByUser',
                        'date_modified' => 'dateModified',
                        'modified_by' => 'modifiedBy',
                        'modified_by_user' => 'modifiedByUser',
                        'checked_out' => 'checkedOut',
                        'checked_out_by' => 'checkedOutBy',
                        'checked_out_by_user' => 'checkedOutByUser',
                        'id' => 'id',
                        'name' => 'name',
                        'description' => 'description',
                        'publish_up' => 'publishUp',
                        'publish_down' => 'publishDown',
                        'sent_count' => 'sentCount',
                        'content' => 'content',
                        'utm_tags' => 'utmTags',
                        'lang' => 'language',
                        'variant_settings' => 'variantSettings',
                        'variant_start_date' => 'variantStartDate',
                        'filters' => 'filters',
                        'is_campaign_based' => 'isCampaignBased',
                        'slot_name' => 'slotName',
                    ],
                ],
                'columnNames' => [
                    [
                        'isPublished' => 'is_published',
                        'dateAdded' => 'date_added',
                        'createdBy' => 'created_by',
                        'createdByUser' => 'created_by_user',
                        'dateModified' => 'date_modified',
                        'modifiedBy' => 'modified_by',
                        'modifiedByUser' => 'modified_by_user',
                        'checkedOut' => 'checked_out',
                        'checkedOutBy' => 'checked_out_by',
                        'checkedOutByUser' => 'checked_out_by_user',
                        'id' => 'id',
                        'name' => 'name',
                        'description' => 'description',
                        'publishUp' => 'publish_up',
                        'publishDown' => 'publish_down',
                        'sentCount' => 'sent_count',
                        'content' => 'content',
                        'utmTags' => 'utm_tags',
                        'language' => 'lang',
                        'variantSettings' => 'variant_settings',
                        'variantStartDate' => 'variant_start_date',
                        'filters' => 'filters',
                        'isCampaignBased' => 'is_campaign_based',
                        'slotName' => 'slot_name',
                    ],
                ],
                'table' => [
                    [
                        'name' => 'dynamic_content',
                        'indexes' => [
                            'is_campaign_based_index' => [
                                'columns' => [
                                    'is_campaign_based',
                                ],
                            ],
                            'slot_name_index' => [
                                'columns' => [
                                    'slot_name',
                                ],
                            ],
                        ],
                        'uniqueConstraints' => [],
                    ],
                ],
                'lifecycleCallbacks' => [
                    [
                        'prePersist' => [
                            'cleanSlotName',
                        ],
                        'preUpdate' => [
                            'cleanSlotName',
                        ],
                    ],
                ],
                'associationMappings' => [
                    [
                        'category' => [
                            'fieldName' => 'category',
                            'targetEntity' => 'Mautic\\CategoryBundle\\Entity\\Category',
                            'cascade' => [
                                'merge',
                                'detach',
                            ],
                            'joinColumns' => [
                                [
                                    'name' => 'category_id',
                                    'referencedColumnName' => 'id',
                                    'nullable' => true,
                                    'unique' => false,
                                    'onDelete' => 'SET NULL',
                                    'columnDefinition' => null,
                                ],
                            ],
                            'type' => 2,
                            'mappedBy' => null,
                            'inversedBy' => null,
                            'isOwningSide' => true,
                            'sourceEntity' => 'Mautic\\DynamicContentBundle\\Entity\\DynamicContent',
                            'fetch' => 2,
                            'isCascadeRemove' => false,
                            'isCascadePersist' => false,
                            'isCascadeRefresh' => false,
                            'isCascadeMerge' => true,
                            'isCascadeDetach' => true,
                            'sourceToTargetKeyColumns' => [
                                'category_id' => 'id',
                            ],
                            'joinColumnFieldNames' => [
                                'category_id' => 'category_id',
                            ],
                            'targetToSourceKeyColumns' => [
                                'id' => 'category_id',
                            ],
                            'orphanRemoval' => false,
                        ],
                        'stats' => [
                            'fieldName' => 'stats',
                            'targetEntity' => 'Mautic\\DynamicContentBundle\\Entity\\Stat',
                            'indexBy' => 'id',
                            'mappedBy' => 'dynamicContent',
                            'cascade' => [
                                'persist',
                            ],
                            'fetch' => 4,
                            'type' => 4,
                            'inversedBy' => null,
                            'isOwningSide' => false,
                            'sourceEntity' => 'Mautic\\DynamicContentBundle\\Entity\\DynamicContent',
                            'isCascadeRemove' => false,
                            'isCascadePersist' => true,
                            'isCascadeRefresh' => false,
                            'isCascadeMerge' => false,
                            'isCascadeDetach' => false,
                            'orphanRemoval' => false,
                        ],
                        'translationChildren' => [
                            'fieldName' => 'translationChildren',
                            'targetEntity' => 'Mautic\\DynamicContentBundle\\Entity\\DynamicContent',
                            'indexBy' => 'id',
                            'orderBy' => [
                                'isPublished' => 'DESC',
                            ],
                            'mappedBy' => 'translationParent',
                            'type' => 4,
                            'inversedBy' => null,
                            'isOwningSide' => false,
                            'sourceEntity' => 'Mautic\\DynamicContentBundle\\Entity\\DynamicContent',
                            'fetch' => 2,
                            'cascade' => [],
                            'isCascadeRemove' => false,
                            'isCascadePersist' => false,
                            'isCascadeRefresh' => false,
                            'isCascadeMerge' => false,
                            'isCascadeDetach' => false,
                            'orphanRemoval' => false,
                        ],
                        'translationParent' => [
                            'fieldName' => 'translationParent',
                            'targetEntity' => 'Mautic\\DynamicContentBundle\\Entity\\DynamicContent',
                            'inversedBy' => 'translationChildren',
                            'joinColumns' => [
                                [
                                    'name' => 'translation_parent_id',
                                    'referencedColumnName' => 'id',
                                    'nullable' => true,
                                    'unique' => false,
                                    'onDelete' => 'CASCADE',
                                    'columnDefinition' => null,
                                ],
                            ],
                            'type' => 2,
                            'mappedBy' => null,
                            'isOwningSide' => true,
                            'sourceEntity' => 'Mautic\\DynamicContentBundle\\Entity\\DynamicContent',
                            'fetch' => 2,
                            'cascade' => [],
                            'isCascadeRemove' => false,
                            'isCascadePersist' => false,
                            'isCascadeRefresh' => false,
                            'isCascadeMerge' => false,
                            'isCascadeDetach' => false,
                            'sourceToTargetKeyColumns' => [
                                'translation_parent_id' => 'id',
                            ],
                            'joinColumnFieldNames' => [
                                'translation_parent_id' => 'translation_parent_id',
                            ],
                            'targetToSourceKeyColumns' => [
                                'id' => 'translation_parent_id',
                            ],
                            'orphanRemoval' => false,
                        ],
                        'variantParent' => [
                            'fieldName' => 'variantParent',
                            'targetEntity' => 'Mautic\\DynamicContentBundle\\Entity\\DynamicContent',
                            'inversedBy' => 'variantChildren',
                            'joinColumns' => [
                                [
                                    'name' => 'variant_parent_id',
                                    'referencedColumnName' => 'id',
                                    'nullable' => true,
                                    'unique' => false,
                                    'onDelete' => 'CASCADE',
                                    'columnDefinition' => null,
                                ],
                            ],
                            'type' => 2,
                            'mappedBy' => null,
                            'isOwningSide' => true,
                            'sourceEntity' => 'Mautic\\DynamicContentBundle\\Entity\\DynamicContent',
                            'fetch' => 2,
                            'cascade' => [],
                            'isCascadeRemove' => false,
                            'isCascadePersist' => false,
                            'isCascadeRefresh' => false,
                            'isCascadeMerge' => false,
                            'isCascadeDetach' => false,
                            'sourceToTargetKeyColumns' => [
                                'variant_parent_id' => 'id',
                            ],
                            'joinColumnFieldNames' => [
                                'variant_parent_id' => 'variant_parent_id',
                            ],
                            'targetToSourceKeyColumns' => [
                                'id' => 'variant_parent_id',
                            ],
                            'orphanRemoval' => false,
                        ],
                        'variantChildren' => [
                            'fieldName' => 'variantChildren',
                            'targetEntity' => 'Mautic\\DynamicContentBundle\\Entity\\DynamicContent',
                            'indexBy' => 'id',
                            'orderBy' => [
                                'isPublished' => 'DESC',
                            ],
                            'mappedBy' => 'variantParent',
                            'type' => 4,
                            'inversedBy' => null,
                            'isOwningSide' => false,
                            'sourceEntity' => 'Mautic\\DynamicContentBundle\\Entity\\DynamicContent',
                            'fetch' => 2,
                            'cascade' => [],
                            'isCascadeRemove' => false,
                            'isCascadePersist' => false,
                            'isCascadeRefresh' => false,
                            'isCascadeMerge' => false,
                            'isCascadeDetach' => false,
                            'orphanRemoval' => false,
                        ],
                    ],
                ],
                'idGenerator' => [
                    $o[1],
                ],
                'changeTrackingPolicy' => [
                    2,
                ],
            ],
        ],
        $o[0],
        []
    );
},
24 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ClassMetadata')),
            clone ($p['Doctrine\\ORM\\Id\\IdentityGenerator'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Id\\IdentityGenerator')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'Mautic\\DynamicContentBundle\\Entity\\DynamicContentLeadData',
                ],
                'namespace' => [
                    'Mautic\\DynamicContentBundle\\Entity',
                ],
                'rootEntityName' => [
                    'Mautic\\DynamicContentBundle\\Entity\\DynamicContentLeadData',
                ],
                'customRepositoryClassName' => [
                    'Mautic\\DynamicContentBundle\\Entity\\DynamicContentLeadDataRepository',
                ],
                'identifier' => [
                    [
                        'id',
                    ],
                ],
                'generatorType' => [
                    4,
                ],
                'fieldMappings' => [
                    [
                        'id' => [
                            'fieldName' => 'id',
                            'type' => 'integer',
                            'id' => true,
                            'options' => [
                                'unsigned' => true,
                            ],
                            'columnName' => 'id',
                        ],
                        'dateAdded' => [
                            'fieldName' => 'dateAdded',
                            'type' => 'datetime',
                            'columnName' => 'date_added',
                            'nullable' => true,
                        ],
                        'slot' => [
                            'fieldName' => 'slot',
                            'type' => 'text',
                            'columnName' => 'slot',
                        ],
                    ],
                ],
                'fieldNames' => [
                    [
                        'id' => 'id',
                        'date_added' => 'dateAdded',
                        'slot' => 'slot',
                    ],
                ],
                'columnNames' => [
                    [
                        'id' => 'id',
                        'dateAdded' => 'date_added',
                        'slot' => 'slot',
                    ],
                ],
                'table' => [
                    [
                        'name' => 'dynamic_content_lead_data',
                        'indexes' => [],
                        'uniqueConstraints' => [],
                    ],
                ],
                'associationMappings' => [
                    [
                        'lead' => [
                            'fieldName' => 'lead',
                            'targetEntity' => 'Mautic\\LeadBundle\\Entity\\Lead',
                            'joinColumns' => [
                                [
                                    'name' => 'lead_id',
                                    'referencedColumnName' => 'id',
                                    'nullable' => false,
                                    'unique' => false,
                                    'onDelete' => 'CASCADE',
                                    'columnDefinition' => null,
                                ],
                            ],
                            'type' => 2,
                            'mappedBy' => null,
                            'inversedBy' => null,
                            'isOwningSide' => true,
                            'sourceEntity' => 'Mautic\\DynamicContentBundle\\Entity\\DynamicContentLeadData',
                            'fetch' => 2,
                            'cascade' => [],
                            'isCascadeRemove' => false,
                            'isCascadePersist' => false,
                            'isCascadeRefresh' => false,
                            'isCascadeMerge' => false,
                            'isCascadeDetach' => false,
                            'sourceToTargetKeyColumns' => [
                                'lead_id' => 'id',
                            ],
                            'joinColumnFieldNames' => [
                                'lead_id' => 'lead_id',
                            ],
                            'targetToSourceKeyColumns' => [
                                'id' => 'lead_id',
                            ],
                            'orphanRemoval' => false,
                        ],
                        'dynamicContent' => [
                            'fieldName' => 'dynamicContent',
                            'targetEntity' => 'Mautic\\DynamicContentBundle\\Entity\\DynamicContent',
                            'inversedBy' => 'id',
                            'joinColumns' => [
                                [
                                    'name' => 'dynamic_content_id',
                                    'referencedColumnName' => 'id',
                                    'nullable' => true,
                                    'unique' => false,
                                    'onDelete' => 'CASCADE',
                                    'columnDefinition' => null,
                                ],
                            ],
                            'type' => 2,
                            'mappedBy' => null,
                            'isOwningSide' => true,
                            'sourceEntity' => 'Mautic\\DynamicContentBundle\\Entity\\DynamicContentLeadData',
                            'fetch' => 2,
                            'cascade' => [],
                            'isCascadeRemove' => false,
                            'isCascadePersist' => false,
                            'isCascadeRefresh' => false,
                            'isCascadeMerge' => false,
                            'isCascadeDetach' => false,
                            'sourceToTargetKeyColumns' => [
                                'dynamic_content_id' => 'id',
                            ],
                            'joinColumnFieldNames' => [
                                'dynamic_content_id' => 'dynamic_content_id',
                            ],
                            'targetToSourceKeyColumns' => [
                                'id' => 'dynamic_content_id',
                            ],
                            'orphanRemoval' => false,
                        ],
                    ],
                ],
                'idGenerator' => [
                    $o[1],
                ],
                'changeTrackingPolicy' => [
                    2,
                ],
            ],
        ],
        $o[0],
        []
    );
},
25 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ClassMetadata')),
            clone ($p['Doctrine\\ORM\\Id\\BigIntegerIdentityGenerator'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Id\\BigIntegerIdentityGenerator')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'Mautic\\DynamicContentBundle\\Entity\\Stat',
                ],
                'namespace' => [
                    'Mautic\\DynamicContentBundle\\Entity',
                ],
                'rootEntityName' => [
                    'Mautic\\DynamicContentBundle\\Entity\\Stat',
                ],
                'customRepositoryClassName' => [
                    'Mautic\\DynamicContentBundle\\Entity\\StatRepository',
                ],
                'identifier' => [
                    [
                        'id',
                    ],
                ],
                'generatorType' => [
                    4,
                ],
                'fieldMappings' => [
                    [
                        'id' => [
                            'fieldName' => 'id',
                            'columnName' => 'id',
                            'id' => true,
                            'nullable' => false,
                            'type' => 'bigint',
                            'options' => [
                                'unsigned' => true,
                            ],
                        ],
                        'dateSent' => [
                            'fieldName' => 'dateSent',
                            'type' => 'datetime',
                            'columnName' => 'date_sent',
                        ],
                        'source' => [
                            'fieldName' => 'source',
                            'type' => 'string',
                            'length' => 191,
                            'nullable' => true,
                            'columnName' => 'source',
                        ],
                        'sourceId' => [
                            'fieldName' => 'sourceId',
                            'type' => 'integer',
                            'columnName' => 'source_id',
                            'nullable' => true,
                        ],
                        'tokens' => [
                            'fieldName' => 'tokens',
                            'type' => 'array',
                            'nullable' => true,
                            'columnName' => 'tokens',
                        ],
                        'sentCount' => [
                            'fieldName' => 'sentCount',
                            'type' => 'integer',
                            'nullable' => true,
                            'columnName' => 'sent_count',
                        ],
                        'lastSent' => [
                            'fieldName' => 'lastSent',
                            'type' => 'datetime',
                            'nullable' => true,
                            'columnName' => 'last_sent',
                        ],
                        'sentDetails' => [
                            'fieldName' => 'sentDetails',
                            'type' => 'array',
                            'nullable' => true,
                            'columnName' => 'sent_details',
                        ],
                    ],
                ],
                'fieldNames' => [
                    [
                        'id' => 'id',
                        'date_sent' => 'dateSent',
                        'source' => 'source',
                        'source_id' => 'sourceId',
                        'tokens' => 'tokens',
                        'sent_count' => 'sentCount',
                        'last_sent' => 'lastSent',
                        'sent_details' => 'sentDetails',
                    ],
                ],
                'columnNames' => [
                    [
                        'id' => 'id',
                        'dateSent' => 'date_sent',
                        'source' => 'source',
                        'sourceId' => 'source_id',
                        'tokens' => 'tokens',
                        'sentCount' => 'sent_count',
                        'lastSent' => 'last_sent',
                        'sentDetails' => 'sent_details',
                    ],
                ],
                'table' => [
                    [
                        'name' => 'dynamic_content_stats',
                        'indexes' => [
                            'stat_dynamic_content_search' => [
                                'columns' => [
                                    'dynamic_content_id',
                                    'lead_id',
                                ],
                            ],
                            'stat_dynamic_content_source_search' => [
                                'columns' => [
                                    'source',
                                    'source_id',
                                ],
                            ],
                        ],
                        'uniqueConstraints' => [],
                    ],
                ],
                'associationMappings' => [
                    [
                        'dynamicContent' => [
                            'fieldName' => 'dynamicContent',
                            'targetEntity' => 'Mautic\\DynamicContentBundle\\Entity\\DynamicContent',
                            'inversedBy' => 'stats',
                            'joinColumns' => [
                                [
                                    'name' => 'dynamic_content_id',
                                    'referencedColumnName' => 'id',
                                    'nullable' => true,
                                    'unique' => false,
                                    'onDelete' => 'SET NULL',
                                    'columnDefinition' => null,
                                ],
                            ],
                            'type' => 2,
                            'mappedBy' => null,
                            'isOwningSide' => true,
                            'sourceEntity' => 'Mautic\\DynamicContentBundle\\Entity\\Stat',
                            'fetch' => 2,
                            'cascade' => [],
                            'isCascadeRemove' => false,
                            'isCascadePersist' => false,
                            'isCascadeRefresh' => false,
                            'isCascadeMerge' => false,
                            'isCascadeDetach' => false,
                            'sourceToTargetKeyColumns' => [
                                'dynamic_content_id' => 'id',
                            ],
                            'joinColumnFieldNames' => [
                                'dynamic_content_id' => 'dynamic_content_id',
                            ],
                            'targetToSourceKeyColumns' => [
                                'id' => 'dynamic_content_id',
                            ],
                            'orphanRemoval' => false,
                        ],
                        'lead' => [
                            'fieldName' => 'lead',
                            'targetEntity' => 'Mautic\\LeadBundle\\Entity\\Lead',
                            'joinColumns' => [
                                [
                                    'name' => 'lead_id',
                                    'referencedColumnName' => 'id',
                                    'nullable' => true,
                                    'unique' => false,
                                    'onDelete' => 'SET NULL',
                                    'columnDefinition' => null,
                                ],
                            ],
                            'type' => 2,
                            'mappedBy' => null,
                            'inversedBy' => null,
                            'isOwningSide' => true,
                            'sourceEntity' => 'Mautic\\DynamicContentBundle\\Entity\\Stat',
                            'fetch' => 2,
                            'cascade' => [],
                            'isCascadeRemove' => false,
                            'isCascadePersist' => false,
                            'isCascadeRefresh' => false,
                            'isCascadeMerge' => false,
                            'isCascadeDetach' => false,
                            'sourceToTargetKeyColumns' => [
                                'lead_id' => 'id',
                            ],
                            'joinColumnFieldNames' => [
                                'lead_id' => 'lead_id',
                            ],
                            'targetToSourceKeyColumns' => [
                                'id' => 'lead_id',
                            ],
                            'orphanRemoval' => false,
                        ],
                    ],
                ],
                'idGenerator' => [
                    $o[1],
                ],
                'changeTrackingPolicy' => [
                    2,
                ],
            ],
        ],
        $o[0],
        []
    );
},
26 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ClassMetadata')),
            clone ($p['Doctrine\\ORM\\Id\\IdentityGenerator'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Id\\IdentityGenerator')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'Mautic\\EmailBundle\\Entity\\Email',
                ],
                'namespace' => [
                    'Mautic\\EmailBundle\\Entity',
                ],
                'rootEntityName' => [
                    'Mautic\\EmailBundle\\Entity\\Email',
                ],
                'customRepositoryClassName' => [
                    'Mautic\\EmailBundle\\Entity\\EmailRepository',
                ],
                'identifier' => [
                    [
                        'id',
                    ],
                ],
                'generatorType' => [
                    4,
                ],
                'fieldMappings' => [
                    [
                        'isPublished' => [
                            'fieldName' => 'isPublished',
                            'type' => 'boolean',
                            'columnName' => 'is_published',
                            'declared' => 'Mautic\\CoreBundle\\Entity\\FormEntity',
                        ],
                        'dateAdded' => [
                            'fieldName' => 'dateAdded',
                            'type' => 'datetime',
                            'columnName' => 'date_added',
                            'nullable' => true,
                            'declared' => 'Mautic\\CoreBundle\\Entity\\FormEntity',
                        ],
                        'createdBy' => [
                            'fieldName' => 'createdBy',
                            'type' => 'integer',
                            'columnName' => 'created_by',
                            'nullable' => true,
                            'declared' => 'Mautic\\CoreBundle\\Entity\\FormEntity',
                        ],
                        'createdByUser' => [
                            'fieldName' => 'createdByUser',
                            'type' => 'string',
                            'length' => 191,
                            'columnName' => 'created_by_user',
                            'nullable' => true,
                            'declared' => 'Mautic\\CoreBundle\\Entity\\FormEntity',
                        ],
                        'dateModified' => [
                            'fieldName' => 'dateModified',
                            'type' => 'datetime',
                            'columnName' => 'date_modified',
                            'nullable' => true,
                            'declared' => 'Mautic\\CoreBundle\\Entity\\FormEntity',
                        ],
                        'modifiedBy' => [
                            'fieldName' => 'modifiedBy',
                            'type' => 'integer',
                            'columnName' => 'modified_by',
                            'nullable' => true,
                            'declared' => 'Mautic\\CoreBundle\\Entity\\FormEntity',
                        ],
                        'modifiedByUser' => [
                            'fieldName' => 'modifiedByUser',
                            'type' => 'string',
                            'length' => 191,
                            'columnName' => 'modified_by_user',
                            'nullable' => true,
                            'declared' => 'Mautic\\CoreBundle\\Entity\\FormEntity',
                        ],
                        'checkedOut' => [
                            'fieldName' => 'checkedOut',
                            'type' => 'datetime',
                            'columnName' => 'checked_out',
                            'nullable' => true,
                            'declared' => 'Mautic\\CoreBundle\\Entity\\FormEntity',
                        ],
                        'checkedOutBy' => [
                            'fieldName' => 'checkedOutBy',
                            'type' => 'integer',
                            'columnName' => 'checked_out_by',
                            'nullable' => true,
                            'declared' => 'Mautic\\CoreBundle\\Entity\\FormEntity',
                        ],
                        'checkedOutByUser' => [
                            'fieldName' => 'checkedOutByUser',
                            'type' => 'string',
                            'length' => 191,
                            'columnName' => 'checked_out_by_user',
                            'nullable' => true,
                            'declared' => 'Mautic\\CoreBundle\\Entity\\FormEntity',
                        ],
                        'id' => [
                            'fieldName' => 'id',
                            'type' => 'integer',
                            'id' => true,
                            'options' => [
                                'unsigned' => true,
                            ],
                            'columnName' => 'id',
                        ],
                        'name' => [
                            'fieldName' => 'name',
                            'type' => 'string',
                            'length' => 191,
                            'columnName' => 'name',
                        ],
                        'description' => [
                            'fieldName' => 'description',
                            'type' => 'text',
                            'nullable' => true,
                            'columnName' => 'description',
                        ],
                        'subject' => [
                            'fieldName' => 'subject',
                            'type' => 'text',
                            'nullable' => true,
                            'columnName' => 'subject',
                        ],
                        'fromAddress' => [
                            'fieldName' => 'fromAddress',
                            'type' => 'string',
                            'length' => 191,
                            'nullable' => true,
                            'columnName' => 'from_address',
                        ],
                        'fromName' => [
                            'fieldName' => 'fromName',
                            'type' => 'string',
                            'length' => 191,
                            'nullable' => true,
                            'columnName' => 'from_name',
                        ],
                        'replyToAddress' => [
                            'fieldName' => 'replyToAddress',
                            'type' => 'string',
                            'length' => 191,
                            'nullable' => true,
                            'columnName' => 'reply_to_address',
                        ],
                        'bccAddress' => [
                            'fieldName' => 'bccAddress',
                            'type' => 'string',
                            'length' => 191,
                            'nullable' => true,
                            'columnName' => 'bcc_address',
                        ],
                        'useOwnerAsMailer' => [
                            'fieldName' => 'useOwnerAsMailer',
                            'type' => 'boolean',
                            'nullable' => true,
                            'columnName' => 'use_owner_as_mailer',
                        ],
                        'template' => [
                            'fieldName' => 'template',
                            'type' => 'string',
                            'length' => 191,
                            'nullable' => true,
                            'columnName' => 'template',
                        ],
                        'content' => [
                            'fieldName' => 'content',
                            'type' => 'array',
                            'nullable' => true,
                            'columnName' => 'content',
                        ],
                        'utmTags' => [
                            'fieldName' => 'utmTags',
                            'type' => 'array',
                            'nullable' => true,
                            'columnName' => 'utm_tags',
                        ],
                        'plainText' => [
                            'fieldName' => 'plainText',
                            'type' => 'text',
                            'nullable' => true,
                            'columnName' => 'plain_text',
                        ],
                        'customHtml' => [
                            'fieldName' => 'customHtml',
                            'type' => 'text',
                            'nullable' => true,
                            'columnName' => 'custom_html',
                        ],
                        'emailType' => [
                            'fieldName' => 'emailType',
                            'type' => 'text',
                            'nullable' => true,
                            'columnName' => 'email_type',
                        ],
                        'publishUp' => [
                            'fieldName' => 'publishUp',
                            'type' => 'datetime',
                            'columnName' => 'publish_up',
                            'nullable' => true,
                        ],
                        'publishDown' => [
                            'fieldName' => 'publishDown',
                            'type' => 'datetime',
                            'columnName' => 'publish_down',
                            'nullable' => true,
                        ],
                        'readCount' => [
                            'fieldName' => 'readCount',
                            'type' => 'integer',
                            'columnName' => 'read_count',
                        ],
                        'sentCount' => [
                            'fieldName' => 'sentCount',
                            'type' => 'integer',
                            'columnName' => 'sent_count',
                        ],
                        'variantSentCount' => [
                            'fieldName' => 'variantSentCount',
                            'type' => 'integer',
                            'columnName' => 'variant_sent_count',
                        ],
                        'variantReadCount' => [
                            'fieldName' => 'variantReadCount',
                            'type' => 'integer',
                            'columnName' => 'variant_read_count',
                        ],
                        'revision' => [
                            'fieldName' => 'revision',
                            'type' => 'integer',
                            'columnName' => 'revision',
                        ],
                        'language' => [
                            'fieldName' => 'language',
                            'type' => 'string',
                            'length' => 191,
                            'columnName' => 'lang',
                        ],
                        'variantSettings' => [
                            'fieldName' => 'variantSettings',
                            'type' => 'array',
                            'columnName' => 'variant_settings',
                            'nullable' => true,
                        ],
                        'variantStartDate' => [
                            'fieldName' => 'variantStartDate',
                            'type' => 'datetime',
                            'columnName' => 'variant_start_date',
                            'nullable' => true,
                        ],
                        'dynamicContent' => [
                            'fieldName' => 'dynamicContent',
                            'type' => 'array',
                            'columnName' => 'dynamic_content',
                            'nullable' => true,
                        ],
                        'headers' => [
                            'fieldName' => 'headers',
                            'type' => 'json_array',
                            'columnName' => 'headers',
                        ],
                        'publicPreview' => [
                            'fieldName' => 'publicPreview',
                            'type' => 'boolean',
                            'nullable' => true,
                            'columnName' => 'public_preview',
                        ],
                    ],
                ],
                'fieldNames' => [
                    [
                        'is_published' => 'isPublished',
                        'date_added' => 'dateAdded',
                        'created_by' => 'createdBy',
                        'created_by_user' => 'createdByUser',
                        'date_modified' => 'dateModified',
                        'modified_by' => 'modifiedBy',
                        'modified_by_user' => 'modifiedByUser',
                        'checked_out' => 'checkedOut',
                        'checked_out_by' => 'checkedOutBy',
                        'checked_out_by_user' => 'checkedOutByUser',
                        'id' => 'id',
                        'name' => 'name',
                        'description' => 'description',
                        'subject' => 'subject',
                        'from_address' => 'fromAddress',
                        'from_name' => 'fromName',
                        'reply_to_address' => 'replyToAddress',
                        'bcc_address' => 'bccAddress',
                        'use_owner_as_mailer' => 'useOwnerAsMailer',
                        'template' => 'template',
                        'content' => 'content',
                        'utm_tags' => 'utmTags',
                        'plain_text' => 'plainText',
                        'custom_html' => 'customHtml',
                        'email_type' => 'emailType',
                        'publish_up' => 'publishUp',
                        'publish_down' => 'publishDown',
                        'read_count' => 'readCount',
                        'sent_count' => 'sentCount',
                        'variant_sent_count' => 'variantSentCount',
                        'variant_read_count' => 'variantReadCount',
                        'revision' => 'revision',
                        'lang' => 'language',
                        'variant_settings' => 'variantSettings',
                        'variant_start_date' => 'variantStartDate',
                        'dynamic_content' => 'dynamicContent',
                        'headers' => 'headers',
                        'public_preview' => 'publicPreview',
                    ],
                ],
                'columnNames' => [
                    [
                        'isPublished' => 'is_published',
                        'dateAdded' => 'date_added',
                        'createdBy' => 'created_by',
                        'createdByUser' => 'created_by_user',
                        'dateModified' => 'date_modified',
                        'modifiedBy' => 'modified_by',
                        'modifiedByUser' => 'modified_by_user',
                        'checkedOut' => 'checked_out',
                        'checkedOutBy' => 'checked_out_by',
                        'checkedOutByUser' => 'checked_out_by_user',
                        'id' => 'id',
                        'name' => 'name',
                        'description' => 'description',
                        'subject' => 'subject',
                        'fromAddress' => 'from_address',
                        'fromName' => 'from_name',
                        'replyToAddress' => 'reply_to_address',
                        'bccAddress' => 'bcc_address',
                        'useOwnerAsMailer' => 'use_owner_as_mailer',
                        'template' => 'template',
                        'content' => 'content',
                        'utmTags' => 'utm_tags',
                        'plainText' => 'plain_text',
                        'customHtml' => 'custom_html',
                        'emailType' => 'email_type',
                        'publishUp' => 'publish_up',
                        'publishDown' => 'publish_down',
                        'readCount' => 'read_count',
                        'sentCount' => 'sent_count',
                        'variantSentCount' => 'variant_sent_count',
                        'variantReadCount' => 'variant_read_count',
                        'revision' => 'revision',
                        'language' => 'lang',
                        'variantSettings' => 'variant_settings',
                        'variantStartDate' => 'variant_start_date',
                        'dynamicContent' => 'dynamic_content',
                        'headers' => 'headers',
                        'publicPreview' => 'public_preview',
                    ],
                ],
                'table' => [
                    [
                        'name' => 'emails',
                        'indexes' => [],
                        'uniqueConstraints' => [],
                    ],
                ],
                'lifecycleCallbacks' => [
                    [
                        'preUpdate' => [
                            'cleanUrlsInContent',
                        ],
                        'prePersist' => [
                            'cleanUrlsInContent',
                        ],
                    ],
                ],
                'associationMappings' => [
                    [
                        'category' => [
                            'fieldName' => 'category',
                            'targetEntity' => 'Mautic\\CategoryBundle\\Entity\\Category',
                            'cascade' => [
                                'merge',
                                'detach',
                            ],
                            'joinColumns' => [
                                [
                                    'name' => 'category_id',
                                    'referencedColumnName' => 'id',
                                    'nullable' => true,
                                    'unique' => false,
                                    'onDelete' => 'SET NULL',
                                    'columnDefinition' => null,
                                ],
                            ],
                            'type' => 2,
                            'mappedBy' => null,
                            'inversedBy' => null,
                            'isOwningSide' => true,
                            'sourceEntity' => 'Mautic\\EmailBundle\\Entity\\Email',
                            'fetch' => 2,
                            'isCascadeRemove' => false,
                            'isCascadePersist' => false,
                            'isCascadeRefresh' => false,
                            'isCascadeMerge' => true,
                            'isCascadeDetach' => true,
                            'sourceToTargetKeyColumns' => [
                                'category_id' => 'id',
                            ],
                            'joinColumnFieldNames' => [
                                'category_id' => 'category_id',
                            ],
                            'targetToSourceKeyColumns' => [
                                'id' => 'category_id',
                            ],
                            'orphanRemoval' => false,
                        ],
                        'lists' => [
                            'fieldName' => 'lists',
                            'targetEntity' => 'Mautic\\LeadBundle\\Entity\\LeadList',
                            'indexBy' => 'id',
                            'fetch' => 4,
                            'joinTable' => [
                                'joinColumns' => [
                                    [
                                        'name' => 'email_id',
                                        'referencedColumnName' => 'id',
                                        'nullable' => false,
                                        'unique' => false,
                                        'onDelete' => 'CASCADE',
                                        'columnDefinition' => null,
                                    ],
                                ],
                                'inverseJoinColumns' => [
                                    [
                                        'name' => 'leadlist_id',
                                        'referencedColumnName' => 'id',
                                        'nullable' => false,
                                        'unique' => false,
                                        'onDelete' => 'CASCADE',
                                        'columnDefinition' => null,
                                    ],
                                ],
                                'name' => 'email_list_xref',
                            ],
                            'type' => 8,
                            'mappedBy' => null,
                            'inversedBy' => null,
                            'isOwningSide' => true,
                            'sourceEntity' => 'Mautic\\EmailBundle\\Entity\\Email',
                            'cascade' => [],
                            'isCascadeRemove' => false,
                            'isCascadePersist' => false,
                            'isCascadeRefresh' => false,
                            'isCascadeMerge' => false,
                            'isCascadeDetach' => false,
                            'joinTableColumns' => [
                                'email_id',
                                'leadlist_id',
                            ],
                            'isOnDeleteCascade' => true,
                            'relationToSourceKeyColumns' => [
                                'email_id' => 'id',
                            ],
                            'relationToTargetKeyColumns' => [
                                'leadlist_id' => 'id',
                            ],
                            'orphanRemoval' => false,
                        ],
                        'stats' => [
                            'fieldName' => 'stats',
                            'targetEntity' => 'Mautic\\EmailBundle\\Entity\\Stat',
                            'indexBy' => 'id',
                            'mappedBy' => 'email',
                            'cascade' => [
                                'persist',
                            ],
                            'fetch' => 4,
                            'type' => 4,
                            'inversedBy' => null,
                            'isOwningSide' => false,
                            'sourceEntity' => 'Mautic\\EmailBundle\\Entity\\Email',
                            'isCascadeRemove' => false,
                            'isCascadePersist' => true,
                            'isCascadeRefresh' => false,
                            'isCascadeMerge' => false,
                            'isCascadeDetach' => false,
                            'orphanRemoval' => false,
                        ],
                        'translationChildren' => [
                            'fieldName' => 'translationChildren',
                            'targetEntity' => 'Mautic\\EmailBundle\\Entity\\Email',
                            'indexBy' => 'id',
                            'orderBy' => [
                                'isPublished' => 'DESC',
                            ],
                            'mappedBy' => 'translationParent',
                            'type' => 4,
                            'inversedBy' => null,
                            'isOwningSide' => false,
                            'sourceEntity' => 'Mautic\\EmailBundle\\Entity\\Email',
                            'fetch' => 2,
                            'cascade' => [],
                            'isCascadeRemove' => false,
                            'isCascadePersist' => false,
                            'isCascadeRefresh' => false,
                            'isCascadeMerge' => false,
                            'isCascadeDetach' => false,
                            'orphanRemoval' => false,
                        ],
                        'translationParent' => [
                            'fieldName' => 'translationParent',
                            'targetEntity' => 'Mautic\\EmailBundle\\Entity\\Email',
                            'inversedBy' => 'translationChildren',
                            'joinColumns' => [
                                [
                                    'name' => 'translation_parent_id',
                                    'referencedColumnName' => 'id',
                                    'nullable' => true,
                                    'unique' => false,
                                    'onDelete' => 'CASCADE',
                                    'columnDefinition' => null,
                                ],
                            ],
                            'type' => 2,
                            'mappedBy' => null,
                            'isOwningSide' => true,
                            'sourceEntity' => 'Mautic\\EmailBundle\\Entity\\Email',
                            'fetch' => 2,
                            'cascade' => [],
                            'isCascadeRemove' => false,
                            'isCascadePersist' => false,
                            'isCascadeRefresh' => false,
                            'isCascadeMerge' => false,
                            'isCascadeDetach' => false,
                            'sourceToTargetKeyColumns' => [
                                'translation_parent_id' => 'id',
                            ],
                            'joinColumnFieldNames' => [
                                'translation_parent_id' => 'translation_parent_id',
                            ],
                            'targetToSourceKeyColumns' => [
                                'id' => 'translation_parent_id',
                            ],
                            'orphanRemoval' => false,
                        ],
                        'variantParent' => [
                            'fieldName' => 'variantParent',
                            'targetEntity' => 'Mautic\\EmailBundle\\Entity\\Email',
                            'inversedBy' => 'variantChildren',
                            'joinColumns' => [
                                [
                                    'name' => 'variant_parent_id',
                                    'referencedColumnName' => 'id',
                                    'nullable' => true,
                                    'unique' => false,
                                    'onDelete' => 'CASCADE',
                                    'columnDefinition' => null,
                                ],
                            ],
                            'type' => 2,
                            'mappedBy' => null,
                            'isOwningSide' => true,
                            'sourceEntity' => 'Mautic\\EmailBundle\\Entity\\Email',
                            'fetch' => 2,
                            'cascade' => [],
                            'isCascadeRemove' => false,
                            'isCascadePersist' => false,
                            'isCascadeRefresh' => false,
                            'isCascadeMerge' => false,
                            'isCascadeDetach' => false,
                            'sourceToTargetKeyColumns' => [
                                'variant_parent_id' => 'id',
                            ],
                            'joinColumnFieldNames' => [
                                'variant_parent_id' => 'variant_parent_id',
                            ],
                            'targetToSourceKeyColumns' => [
                                'id' => 'variant_parent_id',
                            ],
                            'orphanRemoval' => false,
                        ],
                        'variantChildren' => [
                            'fieldName' => 'variantChildren',
                            'targetEntity' => 'Mautic\\EmailBundle\\Entity\\Email',
                            'indexBy' => 'id',
                            'orderBy' => [
                                'isPublished' => 'DESC',
                            ],
                            'mappedBy' => 'variantParent',
                            'type' => 4,
                            'inversedBy' => null,
                            'isOwningSide' => false,
                            'sourceEntity' => 'Mautic\\EmailBundle\\Entity\\Email',
                            'fetch' => 2,
                            'cascade' => [],
                            'isCascadeRemove' => false,
                            'isCascadePersist' => false,
                            'isCascadeRefresh' => false,
                            'isCascadeMerge' => false,
                            'isCascadeDetach' => false,
                            'orphanRemoval' => false,
                        ],
                        'unsubscribeForm' => [
                            'fieldName' => 'unsubscribeForm',
                            'targetEntity' => 'Mautic\\FormBundle\\Entity\\Form',
                            'joinColumns' => [
                                [
                                    'name' => 'unsubscribeform_id',
                                    'referencedColumnName' => 'id',
                                    'nullable' => true,
                                    'unique' => false,
                                    'onDelete' => 'SET NULL',
                                    'columnDefinition' => null,
                                ],
                            ],
                            'type' => 2,
                            'mappedBy' => null,
                            'inversedBy' => null,
                            'isOwningSide' => true,
                            'sourceEntity' => 'Mautic\\EmailBundle\\Entity\\Email',
                            'fetch' => 2,
                            'cascade' => [],
                            'isCascadeRemove' => false,
                            'isCascadePersist' => false,
                            'isCascadeRefresh' => false,
                            'isCascadeMerge' => false,
                            'isCascadeDetach' => false,
                            'sourceToTargetKeyColumns' => [
                                'unsubscribeform_id' => 'id',
                            ],
                            'joinColumnFieldNames' => [
                                'unsubscribeform_id' => 'unsubscribeform_id',
                            ],
                            'targetToSourceKeyColumns' => [
                                'id' => 'unsubscribeform_id',
                            ],
                            'orphanRemoval' => false,
                        ],
                        'preferenceCenter' => [
                            'fieldName' => 'preferenceCenter',
                            'targetEntity' => 'Mautic\\PageBundle\\Entity\\Page',
                            'joinColumns' => [
                                [
                                    'name' => 'preference_center_id',
                                    'referencedColumnName' => 'id',
                                    'nullable' => true,
                                    'unique' => false,
                                    'onDelete' => 'SET NULL',
                                    'columnDefinition' => null,
                                ],
                            ],
                            'type' => 2,
                            'mappedBy' => null,
                            'inversedBy' => null,
                            'isOwningSide' => true,
                            'sourceEntity' => 'Mautic\\EmailBundle\\Entity\\Email',
                            'fetch' => 2,
                            'cascade' => [],
                            'isCascadeRemove' => false,
                            'isCascadePersist' => false,
                            'isCascadeRefresh' => false,
                            'isCascadeMerge' => false,
                            'isCascadeDetach' => false,
                            'sourceToTargetKeyColumns' => [
                                'preference_center_id' => 'id',
                            ],
                            'joinColumnFieldNames' => [
                                'preference_center_id' => 'preference_center_id',
                            ],
                            'targetToSourceKeyColumns' => [
                                'id' => 'preference_center_id',
                            ],
                            'orphanRemoval' => false,
                        ],
                        'assetAttachments' => [
                            'fieldName' => 'assetAttachments',
                            'targetEntity' => 'Mautic\\AssetBundle\\Entity\\Asset',
                            'fetch' => 4,
                            'joinTable' => [
                                'joinColumns' => [
                                    [
                                        'name' => 'email_id',
                                        'referencedColumnName' => 'id',
                                        'nullable' => false,
                                        'unique' => false,
                                        'onDelete' => 'CASCADE',
                                        'columnDefinition' => null,
                                    ],
                                ],
                                'inverseJoinColumns' => [
                                    [
                                        'name' => 'asset_id',
                                        'referencedColumnName' => 'id',
                                        'nullable' => false,
                                        'unique' => false,
                                        'onDelete' => 'CASCADE',
                                        'columnDefinition' => null,
                                    ],
                                ],
                                'name' => 'email_assets_xref',
                            ],
                            'type' => 8,
                            'mappedBy' => null,
                            'inversedBy' => null,
                            'isOwningSide' => true,
                            'sourceEntity' => 'Mautic\\EmailBundle\\Entity\\Email',
                            'cascade' => [],
                            'isCascadeRemove' => false,
                            'isCascadePersist' => false,
                            'isCascadeRefresh' => false,
                            'isCascadeMerge' => false,
                            'isCascadeDetach' => false,
                            'joinTableColumns' => [
                                'email_id',
                                'asset_id',
                            ],
                            'isOnDeleteCascade' => true,
                            'relationToSourceKeyColumns' => [
                                'email_id' => 'id',
                            ],
                            'relationToTargetKeyColumns' => [
                                'asset_id' => 'id',
                            ],
                            'orphanRemoval' => false,
                        ],
                    ],
                ],
                'idGenerator' => [
                    $o[1],
                ],
                'changeTrackingPolicy' => [
                    2,
                ],
            ],
        ],
        $o[0],
        []
    );
},
27 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ClassMetadata')),
            clone ($p['Doctrine\\ORM\\Id\\BigIntegerIdentityGenerator'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Id\\BigIntegerIdentityGenerator')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'Mautic\\EmailBundle\\Entity\\StatDevice',
                ],
                'namespace' => [
                    'Mautic\\EmailBundle\\Entity',
                ],
                'rootEntityName' => [
                    'Mautic\\EmailBundle\\Entity\\StatDevice',
                ],
                'customRepositoryClassName' => [
                    'Mautic\\EmailBundle\\Entity\\StatDeviceRepository',
                ],
                'identifier' => [
                    [
                        'id',
                    ],
                ],
                'generatorType' => [
                    4,
                ],
                'fieldMappings' => [
                    [
                        'id' => [
                            'fieldName' => 'id',
                            'columnName' => 'id',
                            'id' => true,
                            'nullable' => false,
                            'type' => 'bigint',
                            'options' => [
                                'unsigned' => true,
                            ],
                        ],
                        'dateOpened' => [
                            'fieldName' => 'dateOpened',
                            'type' => 'datetime',
                            'columnName' => 'date_opened',
                        ],
                    ],
                ],
                'fieldNames' => [
                    [
                        'id' => 'id',
                        'date_opened' => 'dateOpened',
                    ],
                ],
                'columnNames' => [
                    [
                        'id' => 'id',
                        'dateOpened' => 'date_opened',
                    ],
                ],
                'table' => [
                    [
                        'name' => 'email_stats_devices',
                        'indexes' => [
                            'date_opened_search' => [
                                'columns' => [
                                    'date_opened',
                                ],
                            ],
                        ],
                        'uniqueConstraints' => [],
                    ],
                ],
                'associationMappings' => [
                    [
                        'device' => [
                            'fieldName' => 'device',
                            'targetEntity' => 'Mautic\\LeadBundle\\Entity\\LeadDevice',
                            'joinColumns' => [
                                [
                                    'name' => 'device_id',
                                    'referencedColumnName' => 'id',
                                    'nullable' => true,
                                    'unique' => false,
                                    'onDelete' => 'CASCADE',
                                    'columnDefinition' => null,
                                ],
                            ],
                            'type' => 2,
                            'mappedBy' => null,
                            'inversedBy' => null,
                            'isOwningSide' => true,
                            'sourceEntity' => 'Mautic\\EmailBundle\\Entity\\StatDevice',
                            'fetch' => 2,
                            'cascade' => [],
                            'isCascadeRemove' => false,
                            'isCascadePersist' => false,
                            'isCascadeRefresh' => false,
                            'isCascadeMerge' => false,
                            'isCascadeDetach' => false,
                            'sourceToTargetKeyColumns' => [
                                'device_id' => 'id',
                            ],
                            'joinColumnFieldNames' => [
                                'device_id' => 'device_id',
                            ],
                            'targetToSourceKeyColumns' => [
                                'id' => 'device_id',
                            ],
                            'orphanRemoval' => false,
                        ],
                        'stat' => [
                            'fieldName' => 'stat',
                            'targetEntity' => 'Mautic\\EmailBundle\\Entity\\Stat',
                            'joinColumns' => [
                                [
                                    'name' => 'stat_id',
                                    'referencedColumnName' => 'id',
                                    'nullable' => true,
                                    'unique' => false,
                                    'onDelete' => 'CASCADE',
                                    'columnDefinition' => null,
                                ],
                            ],
                            'type' => 2,
                            'mappedBy' => null,
                            'inversedBy' => null,
                            'isOwningSide' => true,
                            'sourceEntity' => 'Mautic\\EmailBundle\\Entity\\StatDevice',
                            'fetch' => 2,
                            'cascade' => [],
                            'isCascadeRemove' => false,
                            'isCascadePersist' => false,
                            'isCascadeRefresh' => false,
                            'isCascadeMerge' => false,
                            'isCascadeDetach' => false,
                            'sourceToTargetKeyColumns' => [
                                'stat_id' => 'id',
                            ],
                            'joinColumnFieldNames' => [
                                'stat_id' => 'stat_id',
                            ],
                            'targetToSourceKeyColumns' => [
                                'id' => 'stat_id',
                            ],
                            'orphanRemoval' => false,
                        ],
                        'ipAddress' => [
                            'fieldName' => 'ipAddress',
                            'targetEntity' => 'Mautic\\CoreBundle\\Entity\\IpAddress',
                            'cascade' => [
                                'persist',
                                'merge',
                                'detach',
                            ],
                            'joinColumns' => [
                                [
                                    'name' => 'ip_id',
                                    'referencedColumnName' => 'id',
                                    'nullable' => true,
                                    'unique' => false,
                                    'onDelete' => null,
                                    'columnDefinition' => null,
                                ],
                            ],
                            'type' => 2,
                            'mappedBy' => null,
                            'inversedBy' => null,
                            'isOwningSide' => true,
                            'sourceEntity' => 'Mautic\\EmailBundle\\Entity\\StatDevice',
                            'fetch' => 2,
                            'isCascadeRemove' => false,
                            'isCascadePersist' => true,
                            'isCascadeRefresh' => false,
                            'isCascadeMerge' => true,
                            'isCascadeDetach' => true,
                            'sourceToTargetKeyColumns' => [
                                'ip_id' => 'id',
                            ],
                            'joinColumnFieldNames' => [
                                'ip_id' => 'ip_id',
                            ],
                            'targetToSourceKeyColumns' => [
                                'id' => 'ip_id',
                            ],
                            'orphanRemoval' => false,
                        ],
                    ],
                ],
                'idGenerator' => [
                    $o[1],
                ],
                'changeTrackingPolicy' => [
                    2,
                ],
            ],
        ],
        $o[0],
        []
    );
},
28 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ClassMetadata')),
            clone ($p['Doctrine\\ORM\\Id\\AssignedGenerator'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Id\\AssignedGenerator')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'Mautic\\EmailBundle\\Entity\\EmailReply',
                ],
                'namespace' => [
                    'Mautic\\EmailBundle\\Entity',
                ],
                'rootEntityName' => [
                    'Mautic\\EmailBundle\\Entity\\EmailReply',
                ],
                'customRepositoryClassName' => [
                    'Mautic\\EmailBundle\\Entity\\EmailReplyRepository',
                ],
                'identifier' => [
                    [
                        'id',
                    ],
                ],
                'fieldMappings' => [
                    [
                        'id' => [
                            'fieldName' => 'id',
                            'type' => 'guid',
                            'id' => true,
                            'columnName' => 'id',
                        ],
                        'dateReplied' => [
                            'fieldName' => 'dateReplied',
                            'type' => 'datetime',
                            'columnName' => 'date_replied',
                        ],
                        'messageId' => [
                            'fieldName' => 'messageId',
                            'type' => 'string',
                            'length' => 191,
                            'columnName' => 'message_id',
                        ],
                    ],
                ],
                'fieldNames' => [
                    [
                        'id' => 'id',
                        'date_replied' => 'dateReplied',
                        'message_id' => 'messageId',
                    ],
                ],
                'columnNames' => [
                    [
                        'id' => 'id',
                        'dateReplied' => 'date_replied',
                        'messageId' => 'message_id',
                    ],
                ],
                'table' => [
                    [
                        'name' => 'email_stat_replies',
                        'indexes' => [
                            'email_replies' => [
                                'columns' => [
                                    'stat_id',
                                    'message_id',
                                ],
                            ],
                            'date_email_replied' => [
                                'columns' => [
                                    'date_replied',
                                ],
                            ],
                        ],
                        'uniqueConstraints' => [],
                    ],
                ],
                'associationMappings' => [
                    [
                        'stat' => [
                            'fieldName' => 'stat',
                            'targetEntity' => 'Mautic\\EmailBundle\\Entity\\Stat',
                            'inversedBy' => 'replies',
                            'joinColumns' => [
                                [
                                    'name' => 'stat_id',
                                    'referencedColumnName' => 'id',
                                    'nullable' => false,
                                    'unique' => false,
                                    'onDelete' => 'CASCADE',
                                    'columnDefinition' => null,
                                ],
                            ],
                            'type' => 2,
                            'mappedBy' => null,
                            'isOwningSide' => true,
                            'sourceEntity' => 'Mautic\\EmailBundle\\Entity\\EmailReply',
                            'fetch' => 2,
                            'cascade' => [],
                            'isCascadeRemove' => false,
                            'isCascadePersist' => false,
                            'isCascadeRefresh' => false,
                            'isCascadeMerge' => false,
                            'isCascadeDetach' => false,
                            'sourceToTargetKeyColumns' => [
                                'stat_id' => 'id',
                            ],
                            'joinColumnFieldNames' => [
                                'stat_id' => 'stat_id',
                            ],
                            'targetToSourceKeyColumns' => [
                                'id' => 'stat_id',
                            ],
                            'orphanRemoval' => false,
                        ],
                    ],
                ],
                'idGenerator' => [
                    $o[1],
                ],
                'changeTrackingPolicy' => [
                    2,
                ],
            ],
        ],
        $o[0],
        []
    );
},
29 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ClassMetadata')),
            clone ($p['Doctrine\\ORM\\Id\\BigIntegerIdentityGenerator'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Id\\BigIntegerIdentityGenerator')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'Mautic\\EmailBundle\\Entity\\Stat',
                ],
                'namespace' => [
                    'Mautic\\EmailBundle\\Entity',
                ],
                'rootEntityName' => [
                    'Mautic\\EmailBundle\\Entity\\Stat',
                ],
                'customRepositoryClassName' => [
                    'Mautic\\EmailBundle\\Entity\\StatRepository',
                ],
                'identifier' => [
                    [
                        'id',
                    ],
                ],
                'generatorType' => [
                    4,
                ],
                'fieldMappings' => [
                    [
                        'id' => [
                            'fieldName' => 'id',
                            'columnName' => 'id',
                            'id' => true,
                            'nullable' => false,
                            'type' => 'bigint',
                            'options' => [
                                'unsigned' => true,
                            ],
                        ],
                        'emailAddress' => [
                            'fieldName' => 'emailAddress',
                            'type' => 'string',
                            'length' => 191,
                            'columnName' => 'email_address',
                        ],
                        'dateSent' => [
                            'fieldName' => 'dateSent',
                            'type' => 'datetime',
                            'columnName' => 'date_sent',
                        ],
                        'isRead' => [
                            'fieldName' => 'isRead',
                            'type' => 'boolean',
                            'columnName' => 'is_read',
                        ],
                        'isFailed' => [
                            'fieldName' => 'isFailed',
                            'type' => 'boolean',
                            'columnName' => 'is_failed',
                        ],
                        'viewedInBrowser' => [
                            'fieldName' => 'viewedInBrowser',
                            'type' => 'boolean',
                            'columnName' => 'viewed_in_browser',
                        ],
                        'dateRead' => [
                            'fieldName' => 'dateRead',
                            'type' => 'datetime',
                            'columnName' => 'date_read',
                            'nullable' => true,
                        ],
                        'trackingHash' => [
                            'fieldName' => 'trackingHash',
                            'type' => 'string',
                            'length' => 191,
                            'columnName' => 'tracking_hash',
                            'nullable' => true,
                        ],
                        'retryCount' => [
                            'fieldName' => 'retryCount',
                            'type' => 'integer',
                            'columnName' => 'retry_count',
                            'nullable' => true,
                        ],
                        'source' => [
                            'fieldName' => 'source',
                            'type' => 'string',
                            'length' => 191,
                            'nullable' => true,
                            'columnName' => 'source',
                        ],
                        'sourceId' => [
                            'fieldName' => 'sourceId',
                            'type' => 'integer',
                            'columnName' => 'source_id',
                            'nullable' => true,
                        ],
                        'tokens' => [
                            'fieldName' => 'tokens',
                            'type' => 'array',
                            'nullable' => true,
                            'columnName' => 'tokens',
                        ],
                        'openCount' => [
                            'fieldName' => 'openCount',
                            'type' => 'integer',
                            'nullable' => true,
                            'columnName' => 'open_count',
                        ],
                        'lastOpened' => [
                            'fieldName' => 'lastOpened',
                            'type' => 'datetime',
                            'nullable' => true,
                            'columnName' => 'last_opened',
                        ],
                        'openDetails' => [
                            'fieldName' => 'openDetails',
                            'type' => 'array',
                            'nullable' => true,
                            'columnName' => 'open_details',
                        ],
                    ],
                ],
                'fieldNames' => [
                    [
                        'id' => 'id',
                        'email_address' => 'emailAddress',
                        'date_sent' => 'dateSent',
                        'is_read' => 'isRead',
                        'is_failed' => 'isFailed',
                        'viewed_in_browser' => 'viewedInBrowser',
                        'date_read' => 'dateRead',
                        'tracking_hash' => 'trackingHash',
                        'retry_count' => 'retryCount',
                        'source' => 'source',
                        'source_id' => 'sourceId',
                        'tokens' => 'tokens',
                        'open_count' => 'openCount',
                        'last_opened' => 'lastOpened',
                        'open_details' => 'openDetails',
                    ],
                ],
                'columnNames' => [
                    [
                        'id' => 'id',
                        'emailAddress' => 'email_address',
                        'dateSent' => 'date_sent',
                        'isRead' => 'is_read',
                        'isFailed' => 'is_failed',
                        'viewedInBrowser' => 'viewed_in_browser',
                        'dateRead' => 'date_read',
                        'trackingHash' => 'tracking_hash',
                        'retryCount' => 'retry_count',
                        'source' => 'source',
                        'sourceId' => 'source_id',
                        'tokens' => 'tokens',
                        'openCount' => 'open_count',
                        'lastOpened' => 'last_opened',
                        'openDetails' => 'open_details',
                    ],
                ],
                'table' => [
                    [
                        'name' => 'email_stats',
                        'indexes' => [
                            'stat_email_search' => [
                                'columns' => [
                                    'email_id',
                                    'lead_id',
                                ],
                            ],
                            'stat_email_search2' => [
                                'columns' => [
                                    'lead_id',
                                    'email_id',
                                ],
                            ],
                            'stat_email_failed_search' => [
                                'columns' => [
                                    'is_failed',
                                ],
                            ],
                            'is_read_date_sent' => [
                                'columns' => [
                                    'is_read',
                                    'date_sent',
                                ],
                            ],
                            'stat_email_hash_search' => [
                                'columns' => [
                                    'tracking_hash',
                                ],
                            ],
                            'stat_email_source_search' => [
                                'columns' => [
                                    'source',
                                    'source_id',
                                ],
                            ],
                            'email_date_sent' => [
                                'columns' => [
                                    'date_sent',
                                ],
                            ],
                            'email_date_read_lead' => [
                                'columns' => [
                                    'date_read',
                                    'lead_id',
                                ],
                            ],
                        ],
                        'uniqueConstraints' => [],
                    ],
                ],
                'associationMappings' => [
                    [
                        'email' => [
                            'fieldName' => 'email',
                            'targetEntity' => 'Mautic\\EmailBundle\\Entity\\Email',
                            'inversedBy' => 'stats',
                            'joinColumns' => [
                                [
                                    'name' => 'email_id',
                                    'referencedColumnName' => 'id',
                                    'nullable' => true,
                                    'unique' => false,
                                    'onDelete' => 'SET NULL',
                                    'columnDefinition' => null,
                                ],
                            ],
                            'type' => 2,
                            'mappedBy' => null,
                            'isOwningSide' => true,
                            'sourceEntity' => 'Mautic\\EmailBundle\\Entity\\Stat',
                            'fetch' => 2,
                            'cascade' => [],
                            'isCascadeRemove' => false,
                            'isCascadePersist' => false,
                            'isCascadeRefresh' => false,
                            'isCascadeMerge' => false,
                            'isCascadeDetach' => false,
                            'sourceToTargetKeyColumns' => [
                                'email_id' => 'id',
                            ],
                            'joinColumnFieldNames' => [
                                'email_id' => 'email_id',
                            ],
                            'targetToSourceKeyColumns' => [
                                'id' => 'email_id',
                            ],
                            'orphanRemoval' => false,
                        ],
                        'lead' => [
                            'fieldName' => 'lead',
                            'targetEntity' => 'Mautic\\LeadBundle\\Entity\\Lead',
                            'joinColumns' => [
                                [
                                    'name' => 'lead_id',
                                    'referencedColumnName' => 'id',
                                    'nullable' => true,
                                    'unique' => false,
                                    'onDelete' => 'SET NULL',
                                    'columnDefinition' => null,
                                ],
                            ],
                            'type' => 2,
                            'mappedBy' => null,
                            'inversedBy' => null,
                            'isOwningSide' => true,
                            'sourceEntity' => 'Mautic\\EmailBundle\\Entity\\Stat',
                            'fetch' => 2,
                            'cascade' => [],
                            'isCascadeRemove' => false,
                            'isCascadePersist' => false,
                            'isCascadeRefresh' => false,
                            'isCascadeMerge' => false,
                            'isCascadeDetach' => false,
                            'sourceToTargetKeyColumns' => [
                                'lead_id' => 'id',
                            ],
                            'joinColumnFieldNames' => [
                                'lead_id' => 'lead_id',
                            ],
                            'targetToSourceKeyColumns' => [
                                'id' => 'lead_id',
                            ],
                            'orphanRemoval' => false,
                        ],
                        'list' => [
                            'fieldName' => 'list',
                            'targetEntity' => 'Mautic\\LeadBundle\\Entity\\LeadList',
                            'joinColumns' => [
                                [
                                    'name' => 'list_id',
                                    'referencedColumnName' => 'id',
                                    'nullable' => true,
                                    'unique' => false,
                                    'onDelete' => 'SET NULL',
                                    'columnDefinition' => null,
                                ],
                            ],
                            'type' => 2,
                            'mappedBy' => null,
                            'inversedBy' => null,
                            'isOwningSide' => true,
                            'sourceEntity' => 'Mautic\\EmailBundle\\Entity\\Stat',
                            'fetch' => 2,
                            'cascade' => [],
                            'isCascadeRemove' => false,
                            'isCascadePersist' => false,
                            'isCascadeRefresh' => false,
                            'isCascadeMerge' => false,
                            'isCascadeDetach' => false,
                            'sourceToTargetKeyColumns' => [
                                'list_id' => 'id',
                            ],
                            'joinColumnFieldNames' => [
                                'list_id' => 'list_id',
                            ],
                            'targetToSourceKeyColumns' => [
                                'id' => 'list_id',
                            ],
                            'orphanRemoval' => false,
                        ],
                        'ipAddress' => [
                            'fieldName' => 'ipAddress',
                            'targetEntity' => 'Mautic\\CoreBundle\\Entity\\IpAddress',
                            'cascade' => [
                                'persist',
                                'merge',
                                'detach',
                            ],
                            'joinColumns' => [
                                [
                                    'name' => 'ip_id',
                                    'referencedColumnName' => 'id',
                                    'nullable' => true,
                                    'unique' => false,
                                    'onDelete' => null,
                                    'columnDefinition' => null,
                                ],
                            ],
                            'type' => 2,
                            'mappedBy' => null,
                            'inversedBy' => null,
                            'isOwningSide' => true,
                            'sourceEntity' => 'Mautic\\EmailBundle\\Entity\\Stat',
                            'fetch' => 2,
                            'isCascadeRemove' => false,
                            'isCascadePersist' => true,
                            'isCascadeRefresh' => false,
                            'isCascadeMerge' => true,
                            'isCascadeDetach' => true,
                            'sourceToTargetKeyColumns' => [
                                'ip_id' => 'id',
                            ],
                            'joinColumnFieldNames' => [
                                'ip_id' => 'ip_id',
                            ],
                            'targetToSourceKeyColumns' => [
                                'id' => 'ip_id',
                            ],
                            'orphanRemoval' => false,
                        ],
                        'storedCopy' => [
                            'fieldName' => 'storedCopy',
                            'targetEntity' => 'Mautic\\EmailBundle\\Entity\\Copy',
                            'joinColumns' => [
                                [
                                    'name' => 'copy_id',
                                    'referencedColumnName' => 'id',
                                    'nullable' => true,
                                    'unique' => false,
                                    'onDelete' => 'SET NULL',
                                    'columnDefinition' => null,
                                ],
                            ],
                            'type' => 2,
                            'mappedBy' => null,
                            'inversedBy' => null,
                            'isOwningSide' => true,
                            'sourceEntity' => 'Mautic\\EmailBundle\\Entity\\Stat',
                            'fetch' => 2,
                            'cascade' => [],
                            'isCascadeRemove' => false,
                            'isCascadePersist' => false,
                            'isCascadeRefresh' => false,
                            'isCascadeMerge' => false,
                            'isCascadeDetach' => false,
                            'sourceToTargetKeyColumns' => [
                                'copy_id' => 'id',
                            ],
                            'joinColumnFieldNames' => [
                                'copy_id' => 'copy_id',
                            ],
                            'targetToSourceKeyColumns' => [
                                'id' => 'copy_id',
                            ],
                            'orphanRemoval' => false,
                        ],
                        'replies' => [
                            'fieldName' => 'replies',
                            'targetEntity' => 'Mautic\\EmailBundle\\Entity\\EmailReply',
                            'mappedBy' => 'stat',
                            'fetch' => 4,
                            'cascade' => [
                                'remove',
                                'persist',
                                'refresh',
                                'merge',
                                'detach',
                            ],
                            'type' => 4,
                            'inversedBy' => null,
                            'isOwningSide' => false,
                            'sourceEntity' => 'Mautic\\EmailBundle\\Entity\\Stat',
                            'isCascadeRemove' => true,
                            'isCascadePersist' => true,
                            'isCascadeRefresh' => true,
                            'isCascadeMerge' => true,
                            'isCascadeDetach' => true,
                            'orphanRemoval' => false,
                        ],
                    ],
                ],
                'idGenerator' => [
                    $o[1],
                ],
                'changeTrackingPolicy' => [
                    2,
                ],
            ],
        ],
        $o[0],
        []
    );
},
30 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ClassMetadata')),
            clone ($p['Doctrine\\ORM\\Id\\AssignedGenerator'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Id\\AssignedGenerator')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'Mautic\\EmailBundle\\Entity\\Copy',
                ],
                'namespace' => [
                    'Mautic\\EmailBundle\\Entity',
                ],
                'rootEntityName' => [
                    'Mautic\\EmailBundle\\Entity\\Copy',
                ],
                'customRepositoryClassName' => [
                    'Mautic\\EmailBundle\\Entity\\CopyRepository',
                ],
                'identifier' => [
                    [
                        'id',
                    ],
                ],
                'fieldMappings' => [
                    [
                        'id' => [
                            'fieldName' => 'id',
                            'type' => 'string',
                            'length' => 32,
                            'id' => true,
                            'columnName' => 'id',
                        ],
                        'dateCreated' => [
                            'fieldName' => 'dateCreated',
                            'type' => 'datetime',
                            'columnName' => 'date_created',
                        ],
                        'body' => [
                            'fieldName' => 'body',
                            'type' => 'text',
                            'nullable' => true,
                            'columnName' => 'body',
                        ],
                        'subject' => [
                            'fieldName' => 'subject',
                            'type' => 'text',
                            'nullable' => true,
                            'columnName' => 'subject',
                        ],
                    ],
                ],
                'fieldNames' => [
                    [
                        'id' => 'id',
                        'date_created' => 'dateCreated',
                        'body' => 'body',
                        'subject' => 'subject',
                    ],
                ],
                'columnNames' => [
                    [
                        'id' => 'id',
                        'dateCreated' => 'date_created',
                        'body' => 'body',
                        'subject' => 'subject',
                    ],
                ],
                'table' => [
                    [
                        'name' => 'email_copies',
                        'indexes' => [],
                        'uniqueConstraints' => [],
                    ],
                ],
                'idGenerator' => [
                    $o[1],
                ],
                'changeTrackingPolicy' => [
                    2,
                ],
            ],
        ],
        $o[0],
        []
    );
},
31 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ClassMetadata')),
            clone ($p['Doctrine\\ORM\\Id\\IdentityGenerator'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Id\\IdentityGenerator')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'Mautic\\FormBundle\\Entity\\Action',
                ],
                'namespace' => [
                    'Mautic\\FormBundle\\Entity',
                ],
                'rootEntityName' => [
                    'Mautic\\FormBundle\\Entity\\Action',
                ],
                'customRepositoryClassName' => [
                    'Mautic\\FormBundle\\Entity\\ActionRepository',
                ],
                'identifier' => [
                    [
                        'id',
                    ],
                ],
                'generatorType' => [
                    4,
                ],
                'fieldMappings' => [
                    [
                        'id' => [
                            'fieldName' => 'id',
                            'type' => 'integer',
                            'id' => true,
                            'options' => [
                                'unsigned' => true,
                            ],
                            'columnName' => 'id',
                        ],
                        'name' => [
                            'fieldName' => 'name',
                            'type' => 'string',
                            'length' => 191,
                            'columnName' => 'name',
                        ],
                        'description' => [
                            'fieldName' => 'description',
                            'type' => 'text',
                            'nullable' => true,
                            'columnName' => 'description',
                        ],
                        'type' => [
                            'fieldName' => 'type',
                            'type' => 'string',
                            'length' => 50,
                            'columnName' => 'type',
                        ],
                        'order' => [
                            'fieldName' => 'order',
                            'type' => 'integer',
                            'columnName' => 'action_order',
                        ],
                        'properties' => [
                            'fieldName' => 'properties',
                            'type' => 'array',
                            'columnName' => 'properties',
                        ],
                    ],
                ],
                'fieldNames' => [
                    [
                        'id' => 'id',
                        'name' => 'name',
                        'description' => 'description',
                        'type' => 'type',
                        'action_order' => 'order',
                        'properties' => 'properties',
                    ],
                ],
                'columnNames' => [
                    [
                        'id' => 'id',
                        'name' => 'name',
                        'description' => 'description',
                        'type' => 'type',
                        'order' => 'action_order',
                        'properties' => 'properties',
                    ],
                ],
                'table' => [
                    [
                        'name' => 'form_actions',
                        'indexes' => [
                            'form_action_type_search' => [
                                'columns' => [
                                    'type',
                                ],
                            ],
                        ],
                        'uniqueConstraints' => [],
                    ],
                ],
                'associationMappings' => [
                    [
                        'form' => [
                            'fieldName' => 'form',
                            'targetEntity' => 'Mautic\\FormBundle\\Entity\\Form',
                            'inversedBy' => 'actions',
                            'joinColumns' => [
                                [
                                    'name' => 'form_id',
                                    'referencedColumnName' => 'id',
                                    'nullable' => false,
                                    'unique' => false,
                                    'onDelete' => 'CASCADE',
                                    'columnDefinition' => null,
                                ],
                            ],
                            'type' => 2,
                            'mappedBy' => null,
                            'isOwningSide' => true,
                            'sourceEntity' => 'Mautic\\FormBundle\\Entity\\Action',
                            'fetch' => 2,
                            'cascade' => [],
                            'isCascadeRemove' => false,
                            'isCascadePersist' => false,
                            'isCascadeRefresh' => false,
                            'isCascadeMerge' => false,
                            'isCascadeDetach' => false,
                            'sourceToTargetKeyColumns' => [
                                'form_id' => 'id',
                            ],
                            'joinColumnFieldNames' => [
                                'form_id' => 'form_id',
                            ],
                            'targetToSourceKeyColumns' => [
                                'id' => 'form_id',
                            ],
                            'orphanRemoval' => false,
                        ],
                    ],
                ],
                'idGenerator' => [
                    $o[1],
                ],
                'changeTrackingPolicy' => [
                    2,
                ],
            ],
        ],
        $o[0],
        []
    );
},
32 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ClassMetadata')),
            clone ($p['Doctrine\\ORM\\Id\\IdentityGenerator'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Id\\IdentityGenerator')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'Mautic\\FormBundle\\Entity\\Field',
                ],
                'namespace' => [
                    'Mautic\\FormBundle\\Entity',
                ],
                'rootEntityName' => [
                    'Mautic\\FormBundle\\Entity\\Field',
                ],
                'customRepositoryClassName' => [
                    'Mautic\\FormBundle\\Entity\\FieldRepository',
                ],
                'identifier' => [
                    [
                        'id',
                    ],
                ],
                'generatorType' => [
                    4,
                ],
                'fieldMappings' => [
                    [
                        'id' => [
                            'fieldName' => 'id',
                            'type' => 'integer',
                            'id' => true,
                            'options' => [
                                'unsigned' => true,
                            ],
                            'columnName' => 'id',
                        ],
                        'label' => [
                            'fieldName' => 'label',
                            'type' => 'text',
                            'columnName' => 'label',
                        ],
                        'showLabel' => [
                            'fieldName' => 'showLabel',
                            'type' => 'boolean',
                            'columnName' => 'show_label',
                            'nullable' => true,
                        ],
                        'alias' => [
                            'length' => 191,
                            'fieldName' => 'alias',
                            'type' => 'string',
                            'columnName' => 'alias',
                        ],
                        'type' => [
                            'length' => 191,
                            'fieldName' => 'type',
                            'type' => 'string',
                            'columnName' => 'type',
                        ],
                        'isCustom' => [
                            'fieldName' => 'isCustom',
                            'type' => 'boolean',
                            'columnName' => 'is_custom',
                        ],
                        'customParameters' => [
                            'fieldName' => 'customParameters',
                            'type' => 'array',
                            'columnName' => 'custom_parameters',
                            'nullable' => true,
                        ],
                        'defaultValue' => [
                            'fieldName' => 'defaultValue',
                            'type' => 'text',
                            'columnName' => 'default_value',
                            'nullable' => true,
                        ],
                        'isRequired' => [
                            'fieldName' => 'isRequired',
                            'type' => 'boolean',
                            'columnName' => 'is_required',
                        ],
                        'validationMessage' => [
                            'fieldName' => 'validationMessage',
                            'type' => 'text',
                            'columnName' => 'validation_message',
                            'nullable' => true,
                        ],
                        'helpMessage' => [
                            'fieldName' => 'helpMessage',
                            'type' => 'text',
                            'columnName' => 'help_message',
                            'nullable' => true,
                        ],
                        'order' => [
                            'fieldName' => 'order',
                            'type' => 'integer',
                            'columnName' => 'field_order',
                            'nullable' => true,
                        ],
                        'properties' => [
                            'fieldName' => 'properties',
                            'type' => 'array',
                            'nullable' => true,
                            'columnName' => 'properties',
                        ],
                        'validation' => [
                            'fieldName' => 'validation',
                            'type' => 'json_array',
                            'nullable' => true,
                            'columnName' => 'validation',
                        ],
                        'parent' => [
                            'fieldName' => 'parent',
                            'type' => 'string',
                            'length' => 191,
                            'nullable' => true,
                            'columnName' => 'parent_id',
                        ],
                        'conditions' => [
                            'fieldName' => 'conditions',
                            'type' => 'json_array',
                            'nullable' => true,
                            'columnName' => 'conditions',
                        ],
                        'labelAttributes' => [
                            'fieldName' => 'labelAttributes',
                            'type' => 'string',
                            'length' => 191,
                            'nullable' => true,
                            'columnName' => 'label_attr',
                        ],
                        'inputAttributes' => [
                            'fieldName' => 'inputAttributes',
                            'type' => 'string',
                            'length' => 191,
                            'nullable' => true,
                            'columnName' => 'input_attr',
                        ],
                        'containerAttributes' => [
                            'fieldName' => 'containerAttributes',
                            'type' => 'string',
                            'length' => 191,
                            'nullable' => true,
                            'columnName' => 'container_attr',
                        ],
                        'leadField' => [
                            'fieldName' => 'leadField',
                            'type' => 'string',
                            'length' => 191,
                            'nullable' => true,
                            'columnName' => 'lead_field',
                        ],
                        'saveResult' => [
                            'fieldName' => 'saveResult',
                            'type' => 'boolean',
                            'nullable' => true,
                            'columnName' => 'save_result',
                        ],
                        'isAutoFill' => [
                            'fieldName' => 'isAutoFill',
                            'type' => 'boolean',
                            'nullable' => true,
                            'columnName' => 'is_auto_fill',
                        ],
                        'showWhenValueExists' => [
                            'fieldName' => 'showWhenValueExists',
                            'type' => 'boolean',
                            'nullable' => true,
                            'columnName' => 'show_when_value_exists',
                        ],
                        'showAfterXSubmissions' => [
                            'fieldName' => 'showAfterXSubmissions',
                            'type' => 'integer',
                            'nullable' => true,
                            'columnName' => 'show_after_x_submissions',
                        ],
                        'alwaysDisplay' => [
                            'fieldName' => 'alwaysDisplay',
                            'type' => 'boolean',
                            'nullable' => true,
                            'columnName' => 'always_display',
                        ],
                    ],
                ],
                'fieldNames' => [
                    [
                        'id' => 'id',
                        'label' => 'label',
                        'show_label' => 'showLabel',
                        'alias' => 'alias',
                        'type' => 'type',
                        'is_custom' => 'isCustom',
                        'custom_parameters' => 'customParameters',
                        'default_value' => 'defaultValue',
                        'is_required' => 'isRequired',
                        'validation_message' => 'validationMessage',
                        'help_message' => 'helpMessage',
                        'field_order' => 'order',
                        'properties' => 'properties',
                        'validation' => 'validation',
                        'parent_id' => 'parent',
                        'conditions' => 'conditions',
                        'label_attr' => 'labelAttributes',
                        'input_attr' => 'inputAttributes',
                        'container_attr' => 'containerAttributes',
                        'lead_field' => 'leadField',
                        'save_result' => 'saveResult',
                        'is_auto_fill' => 'isAutoFill',
                        'show_when_value_exists' => 'showWhenValueExists',
                        'show_after_x_submissions' => 'showAfterXSubmissions',
                        'always_display' => 'alwaysDisplay',
                    ],
                ],
                'columnNames' => [
                    [
                        'id' => 'id',
                        'label' => 'label',
                        'showLabel' => 'show_label',
                        'alias' => 'alias',
                        'type' => 'type',
                        'isCustom' => 'is_custom',
                        'customParameters' => 'custom_parameters',
                        'defaultValue' => 'default_value',
                        'isRequired' => 'is_required',
                        'validationMessage' => 'validation_message',
                        'helpMessage' => 'help_message',
                        'order' => 'field_order',
                        'properties' => 'properties',
                        'validation' => 'validation',
                        'parent' => 'parent_id',
                        'conditions' => 'conditions',
                        'labelAttributes' => 'label_attr',
                        'inputAttributes' => 'input_attr',
                        'containerAttributes' => 'container_attr',
                        'leadField' => 'lead_field',
                        'saveResult' => 'save_result',
                        'isAutoFill' => 'is_auto_fill',
                        'showWhenValueExists' => 'show_when_value_exists',
                        'showAfterXSubmissions' => 'show_after_x_submissions',
                        'alwaysDisplay' => 'always_display',
                    ],
                ],
                'table' => [
                    [
                        'name' => 'form_fields',
                        'indexes' => [
                            'form_field_type_search' => [
                                'columns' => [
                                    'type',
                                ],
                            ],
                        ],
                        'uniqueConstraints' => [],
                    ],
                ],
                'associationMappings' => [
                    [
                        'form' => [
                            'fieldName' => 'form',
                            'targetEntity' => 'Mautic\\FormBundle\\Entity\\Form',
                            'inversedBy' => 'fields',
                            'joinColumns' => [
                                [
                                    'name' => 'form_id',
                                    'referencedColumnName' => 'id',
                                    'nullable' => false,
                                    'unique' => false,
                                    'onDelete' => 'CASCADE',
                                    'columnDefinition' => null,
                                ],
                            ],
                            'type' => 2,
                            'mappedBy' => null,
                            'isOwningSide' => true,
                            'sourceEntity' => 'Mautic\\FormBundle\\Entity\\Field',
                            'fetch' => 2,
                            'cascade' => [],
                            'isCascadeRemove' => false,
                            'isCascadePersist' => false,
                            'isCascadeRefresh' => false,
                            'isCascadeMerge' => false,
                            'isCascadeDetach' => false,
                            'sourceToTargetKeyColumns' => [
                                'form_id' => 'id',
                            ],
                            'joinColumnFieldNames' => [
                                'form_id' => 'form_id',
                            ],
                            'targetToSourceKeyColumns' => [
                                'id' => 'form_id',
                            ],
                            'orphanRemoval' => false,
                        ],
                    ],
                ],
                'idGenerator' => [
                    $o[1],
                ],
                'changeTrackingPolicy' => [
                    2,
                ],
            ],
        ],
        $o[0],
        []
    );
},
33 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ClassMetadata')),
            clone ($p['Doctrine\\ORM\\Id\\BigIntegerIdentityGenerator'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Id\\BigIntegerIdentityGenerator')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'Mautic\\FormBundle\\Entity\\Submission',
                ],
                'namespace' => [
                    'Mautic\\FormBundle\\Entity',
                ],
                'rootEntityName' => [
                    'Mautic\\FormBundle\\Entity\\Submission',
                ],
                'customRepositoryClassName' => [
                    'Mautic\\FormBundle\\Entity\\SubmissionRepository',
                ],
                'identifier' => [
                    [
                        'id',
                    ],
                ],
                'generatorType' => [
                    4,
                ],
                'fieldMappings' => [
                    [
                        'id' => [
                            'fieldName' => 'id',
                            'columnName' => 'id',
                            'id' => true,
                            'nullable' => false,
                            'type' => 'bigint',
                            'options' => [
                                'unsigned' => true,
                            ],
                        ],
                        'trackingId' => [
                            'fieldName' => 'trackingId',
                            'type' => 'string',
                            'length' => 191,
                            'columnName' => 'tracking_id',
                            'nullable' => true,
                        ],
                        'dateSubmitted' => [
                            'fieldName' => 'dateSubmitted',
                            'type' => 'datetime',
                            'columnName' => 'date_submitted',
                        ],
                        'referer' => [
                            'fieldName' => 'referer',
                            'type' => 'text',
                            'columnName' => 'referer',
                        ],
                    ],
                ],
                'fieldNames' => [
                    [
                        'id' => 'id',
                        'tracking_id' => 'trackingId',
                        'date_submitted' => 'dateSubmitted',
                        'referer' => 'referer',
                    ],
                ],
                'columnNames' => [
                    [
                        'id' => 'id',
                        'trackingId' => 'tracking_id',
                        'dateSubmitted' => 'date_submitted',
                        'referer' => 'referer',
                    ],
                ],
                'table' => [
                    [
                        'name' => 'form_submissions',
                        'indexes' => [
                            'form_submission_tracking_search' => [
                                'columns' => [
                                    'tracking_id',
                                ],
                            ],
                            'form_date_submitted' => [
                                'columns' => [
                                    'date_submitted',
                                ],
                            ],
                        ],
                        'uniqueConstraints' => [],
                    ],
                ],
                'associationMappings' => [
                    [
                        'form' => [
                            'fieldName' => 'form',
                            'targetEntity' => 'Mautic\\FormBundle\\Entity\\Form',
                            'inversedBy' => 'submissions',
                            'joinColumns' => [
                                [
                                    'name' => 'form_id',
                                    'referencedColumnName' => 'id',
                                    'nullable' => false,
                                    'unique' => false,
                                    'onDelete' => 'CASCADE',
                                    'columnDefinition' => null,
                                ],
                            ],
                            'type' => 2,
                            'mappedBy' => null,
                            'isOwningSide' => true,
                            'sourceEntity' => 'Mautic\\FormBundle\\Entity\\Submission',
                            'fetch' => 2,
                            'cascade' => [],
                            'isCascadeRemove' => false,
                            'isCascadePersist' => false,
                            'isCascadeRefresh' => false,
                            'isCascadeMerge' => false,
                            'isCascadeDetach' => false,
                            'sourceToTargetKeyColumns' => [
                                'form_id' => 'id',
                            ],
                            'joinColumnFieldNames' => [
                                'form_id' => 'form_id',
                            ],
                            'targetToSourceKeyColumns' => [
                                'id' => 'form_id',
                            ],
                            'orphanRemoval' => false,
                        ],
                        'ipAddress' => [
                            'fieldName' => 'ipAddress',
                            'targetEntity' => 'Mautic\\CoreBundle\\Entity\\IpAddress',
                            'cascade' => [
                                'persist',
                                'merge',
                                'detach',
                            ],
                            'joinColumns' => [
                                [
                                    'name' => 'ip_id',
                                    'referencedColumnName' => 'id',
                                    'nullable' => false,
                                    'unique' => false,
                                    'onDelete' => null,
                                    'columnDefinition' => null,
                                ],
                            ],
                            'type' => 2,
                            'mappedBy' => null,
                            'inversedBy' => null,
                            'isOwningSide' => true,
                            'sourceEntity' => 'Mautic\\FormBundle\\Entity\\Submission',
                            'fetch' => 2,
                            'isCascadeRemove' => false,
                            'isCascadePersist' => true,
                            'isCascadeRefresh' => false,
                            'isCascadeMerge' => true,
                            'isCascadeDetach' => true,
                            'sourceToTargetKeyColumns' => [
                                'ip_id' => 'id',
                            ],
                            'joinColumnFieldNames' => [
                                'ip_id' => 'ip_id',
                            ],
                            'targetToSourceKeyColumns' => [
                                'id' => 'ip_id',
                            ],
                            'orphanRemoval' => false,
                        ],
                        'lead' => [
                            'fieldName' => 'lead',
                            'targetEntity' => 'Mautic\\LeadBundle\\Entity\\Lead',
                            'joinColumns' => [
                                [
                                    'name' => 'lead_id',
                                    'referencedColumnName' => 'id',
                                    'nullable' => true,
                                    'unique' => false,
                                    'onDelete' => 'SET NULL',
                                    'columnDefinition' => null,
                                ],
                            ],
                            'type' => 2,
                            'mappedBy' => null,
                            'inversedBy' => null,
                            'isOwningSide' => true,
                            'sourceEntity' => 'Mautic\\FormBundle\\Entity\\Submission',
                            'fetch' => 2,
                            'cascade' => [],
                            'isCascadeRemove' => false,
                            'isCascadePersist' => false,
                            'isCascadeRefresh' => false,
                            'isCascadeMerge' => false,
                            'isCascadeDetach' => false,
                            'sourceToTargetKeyColumns' => [
                                'lead_id' => 'id',
                            ],
                            'joinColumnFieldNames' => [
                                'lead_id' => 'lead_id',
                            ],
                            'targetToSourceKeyColumns' => [
                                'id' => 'lead_id',
                            ],
                            'orphanRemoval' => false,
                        ],
                        'page' => [
                            'fieldName' => 'page',
                            'targetEntity' => 'Mautic\\PageBundle\\Entity\\Page',
                            'fetch' => 4,
                            'joinColumns' => [
                                [
                                    'name' => 'page_id',
                                    'referencedColumnName' => 'id',
                                    'nullable' => true,
                                    'unique' => false,
                                    'onDelete' => 'SET NULL',
                                    'columnDefinition' => null,
                                ],
                            ],
                            'type' => 2,
                            'mappedBy' => null,
                            'inversedBy' => null,
                            'isOwningSide' => true,
                            'sourceEntity' => 'Mautic\\FormBundle\\Entity\\Submission',
                            'cascade' => [],
                            'isCascadeRemove' => false,
                            'isCascadePersist' => false,
                            'isCascadeRefresh' => false,
                            'isCascadeMerge' => false,
                            'isCascadeDetach' => false,
                            'sourceToTargetKeyColumns' => [
                                'page_id' => 'id',
                            ],
                            'joinColumnFieldNames' => [
                                'page_id' => 'page_id',
                            ],
                            'targetToSourceKeyColumns' => [
                                'id' => 'page_id',
                            ],
                            'orphanRemoval' => false,
                        ],
                    ],
                ],
                'idGenerator' => [
                    $o[1],
                ],
                'changeTrackingPolicy' => [
                    2,
                ],
            ],
        ],
        $o[0],
        []
    );
},
34 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ClassMetadata')),
            clone ($p['Doctrine\\ORM\\Id\\IdentityGenerator'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Id\\IdentityGenerator')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'Mautic\\FormBundle\\Entity\\Form',
                ],
                'namespace' => [
                    'Mautic\\FormBundle\\Entity',
                ],
                'rootEntityName' => [
                    'Mautic\\FormBundle\\Entity\\Form',
                ],
                'customRepositoryClassName' => [
                    'Mautic\\FormBundle\\Entity\\FormRepository',
                ],
                'identifier' => [
                    [
                        'id',
                    ],
                ],
                'generatorType' => [
                    4,
                ],
                'fieldMappings' => [
                    [
                        'isPublished' => [
                            'fieldName' => 'isPublished',
                            'type' => 'boolean',
                            'columnName' => 'is_published',
                            'declared' => 'Mautic\\CoreBundle\\Entity\\FormEntity',
                        ],
                        'dateAdded' => [
                            'fieldName' => 'dateAdded',
                            'type' => 'datetime',
                            'columnName' => 'date_added',
                            'nullable' => true,
                            'declared' => 'Mautic\\CoreBundle\\Entity\\FormEntity',
                        ],
                        'createdBy' => [
                            'fieldName' => 'createdBy',
                            'type' => 'integer',
                            'columnName' => 'created_by',
                            'nullable' => true,
                            'declared' => 'Mautic\\CoreBundle\\Entity\\FormEntity',
                        ],
                        'createdByUser' => [
                            'fieldName' => 'createdByUser',
                            'type' => 'string',
                            'length' => 191,
                            'columnName' => 'created_by_user',
                            'nullable' => true,
                            'declared' => 'Mautic\\CoreBundle\\Entity\\FormEntity',
                        ],
                        'dateModified' => [
                            'fieldName' => 'dateModified',
                            'type' => 'datetime',
                            'columnName' => 'date_modified',
                            'nullable' => true,
                            'declared' => 'Mautic\\CoreBundle\\Entity\\FormEntity',
                        ],
                        'modifiedBy' => [
                            'fieldName' => 'modifiedBy',
                            'type' => 'integer',
                            'columnName' => 'modified_by',
                            'nullable' => true,
                            'declared' => 'Mautic\\CoreBundle\\Entity\\FormEntity',
                        ],
                        'modifiedByUser' => [
                            'fieldName' => 'modifiedByUser',
                            'type' => 'string',
                            'length' => 191,
                            'columnName' => 'modified_by_user',
                            'nullable' => true,
                            'declared' => 'Mautic\\CoreBundle\\Entity\\FormEntity',
                        ],
                        'checkedOut' => [
                            'fieldName' => 'checkedOut',
                            'type' => 'datetime',
                            'columnName' => 'checked_out',
                            'nullable' => true,
                            'declared' => 'Mautic\\CoreBundle\\Entity\\FormEntity',
                        ],
                        'checkedOutBy' => [
                            'fieldName' => 'checkedOutBy',
                            'type' => 'integer',
                            'columnName' => 'checked_out_by',
                            'nullable' => true,
                            'declared' => 'Mautic\\CoreBundle\\Entity\\FormEntity',
                        ],
                        'checkedOutByUser' => [
                            'fieldName' => 'checkedOutByUser',
                            'type' => 'string',
                            'length' => 191,
                            'columnName' => 'checked_out_by_user',
                            'nullable' => true,
                            'declared' => 'Mautic\\CoreBundle\\Entity\\FormEntity',
                        ],
                        'id' => [
                            'fieldName' => 'id',
                            'type' => 'integer',
                            'id' => true,
                            'options' => [
                                'unsigned' => true,
                            ],
                            'columnName' => 'id',
                        ],
                        'name' => [
                            'fieldName' => 'name',
                            'type' => 'string',
                            'length' => 191,
                            'columnName' => 'name',
                        ],
                        'description' => [
                            'fieldName' => 'description',
                            'type' => 'text',
                            'nullable' => true,
                            'columnName' => 'description',
                        ],
                        'alias' => [
                            'length' => 191,
                            'fieldName' => 'alias',
                            'type' => 'string',
                            'columnName' => 'alias',
                        ],
                        'formAttributes' => [
                            'fieldName' => 'formAttributes',
                            'type' => 'string',
                            'length' => 191,
                            'nullable' => true,
                            'columnName' => 'form_attr',
                        ],
                        'cachedHtml' => [
                            'fieldName' => 'cachedHtml',
                            'type' => 'text',
                            'columnName' => 'cached_html',
                            'nullable' => true,
                        ],
                        'postAction' => [
                            'fieldName' => 'postAction',
                            'type' => 'string',
                            'length' => 191,
                            'columnName' => 'post_action',
                        ],
                        'postActionProperty' => [
                            'fieldName' => 'postActionProperty',
                            'type' => 'text',
                            'columnName' => 'post_action_property',
                            'nullable' => true,
                        ],
                        'publishUp' => [
                            'fieldName' => 'publishUp',
                            'type' => 'datetime',
                            'columnName' => 'publish_up',
                            'nullable' => true,
                        ],
                        'publishDown' => [
                            'fieldName' => 'publishDown',
                            'type' => 'datetime',
                            'columnName' => 'publish_down',
                            'nullable' => true,
                        ],
                        'template' => [
                            'fieldName' => 'template',
                            'type' => 'string',
                            'length' => 191,
                            'nullable' => true,
                            'columnName' => 'template',
                        ],
                        'inKioskMode' => [
                            'fieldName' => 'inKioskMode',
                            'type' => 'boolean',
                            'columnName' => 'in_kiosk_mode',
                            'nullable' => true,
                        ],
                        'renderStyle' => [
                            'fieldName' => 'renderStyle',
                            'type' => 'boolean',
                            'columnName' => 'render_style',
                            'nullable' => true,
                        ],
                        'formType' => [
                            'fieldName' => 'formType',
                            'type' => 'string',
                            'length' => 191,
                            'nullable' => true,
                            'columnName' => 'form_type',
                        ],
                        'noIndex' => [
                            'fieldName' => 'noIndex',
                            'type' => 'boolean',
                            'columnName' => 'no_index',
                            'nullable' => true,
                        ],
                        'progressiveProfilingLimit' => [
                            'fieldName' => 'progressiveProfilingLimit',
                            'type' => 'integer',
                            'nullable' => true,
                            'columnName' => 'progressive_profiling_limit',
                        ],
                    ],
                ],
                'fieldNames' => [
                    [
                        'is_published' => 'isPublished',
                        'date_added' => 'dateAdded',
                        'created_by' => 'createdBy',
                        'created_by_user' => 'createdByUser',
                        'date_modified' => 'dateModified',
                        'modified_by' => 'modifiedBy',
                        'modified_by_user' => 'modifiedByUser',
                        'checked_out' => 'checkedOut',
                        'checked_out_by' => 'checkedOutBy',
                        'checked_out_by_user' => 'checkedOutByUser',
                        'id' => 'id',
                        'name' => 'name',
                        'description' => 'description',
                        'alias' => 'alias',
                        'form_attr' => 'formAttributes',
                        'cached_html' => 'cachedHtml',
                        'post_action' => 'postAction',
                        'post_action_property' => 'postActionProperty',
                        'publish_up' => 'publishUp',
                        'publish_down' => 'publishDown',
                        'template' => 'template',
                        'in_kiosk_mode' => 'inKioskMode',
                        'render_style' => 'renderStyle',
                        'form_type' => 'formType',
                        'no_index' => 'noIndex',
                        'progressive_profiling_limit' => 'progressiveProfilingLimit',
                    ],
                ],
                'columnNames' => [
                    [
                        'isPublished' => 'is_published',
                        'dateAdded' => 'date_added',
                        'createdBy' => 'created_by',
                        'createdByUser' => 'created_by_user',
                        'dateModified' => 'date_modified',
                        'modifiedBy' => 'modified_by',
                        'modifiedByUser' => 'modified_by_user',
                        'checkedOut' => 'checked_out',
                        'checkedOutBy' => 'checked_out_by',
                        'checkedOutByUser' => 'checked_out_by_user',
                        'id' => 'id',
                        'name' => 'name',
                        'description' => 'description',
                        'alias' => 'alias',
                        'formAttributes' => 'form_attr',
                        'cachedHtml' => 'cached_html',
                        'postAction' => 'post_action',
                        'postActionProperty' => 'post_action_property',
                        'publishUp' => 'publish_up',
                        'publishDown' => 'publish_down',
                        'template' => 'template',
                        'inKioskMode' => 'in_kiosk_mode',
                        'renderStyle' => 'render_style',
                        'formType' => 'form_type',
                        'noIndex' => 'no_index',
                        'progressiveProfilingLimit' => 'progressive_profiling_limit',
                    ],
                ],
                'table' => [
                    [
                        'name' => 'forms',
                        'indexes' => [],
                        'uniqueConstraints' => [],
                    ],
                ],
                'associationMappings' => [
                    [
                        'category' => [
                            'fieldName' => 'category',
                            'targetEntity' => 'Mautic\\CategoryBundle\\Entity\\Category',
                            'cascade' => [
                                'merge',
                                'detach',
                            ],
                            'joinColumns' => [
                                [
                                    'name' => 'category_id',
                                    'referencedColumnName' => 'id',
                                    'nullable' => true,
                                    'unique' => false,
                                    'onDelete' => 'SET NULL',
                                    'columnDefinition' => null,
                                ],
                            ],
                            'type' => 2,
                            'mappedBy' => null,
                            'inversedBy' => null,
                            'isOwningSide' => true,
                            'sourceEntity' => 'Mautic\\FormBundle\\Entity\\Form',
                            'fetch' => 2,
                            'isCascadeRemove' => false,
                            'isCascadePersist' => false,
                            'isCascadeRefresh' => false,
                            'isCascadeMerge' => true,
                            'isCascadeDetach' => true,
                            'sourceToTargetKeyColumns' => [
                                'category_id' => 'id',
                            ],
                            'joinColumnFieldNames' => [
                                'category_id' => 'category_id',
                            ],
                            'targetToSourceKeyColumns' => [
                                'id' => 'category_id',
                            ],
                            'orphanRemoval' => false,
                        ],
                        'fields' => [
                            'fieldName' => 'fields',
                            'targetEntity' => 'Mautic\\FormBundle\\Entity\\Field',
                            'indexBy' => 'id',
                            'orderBy' => [
                                'order' => 'ASC',
                            ],
                            'mappedBy' => 'form',
                            'cascade' => [
                                'remove',
                                'persist',
                                'refresh',
                                'merge',
                                'detach',
                            ],
                            'fetch' => 4,
                            'type' => 4,
                            'inversedBy' => null,
                            'isOwningSide' => false,
                            'sourceEntity' => 'Mautic\\FormBundle\\Entity\\Form',
                            'isCascadeRemove' => true,
                            'isCascadePersist' => true,
                            'isCascadeRefresh' => true,
                            'isCascadeMerge' => true,
                            'isCascadeDetach' => true,
                            'orphanRemoval' => false,
                        ],
                        'actions' => [
                            'fieldName' => 'actions',
                            'targetEntity' => 'Mautic\\FormBundle\\Entity\\Action',
                            'indexBy' => 'id',
                            'orderBy' => [
                                'order' => 'ASC',
                            ],
                            'mappedBy' => 'form',
                            'cascade' => [
                                'remove',
                                'persist',
                                'refresh',
                                'merge',
                                'detach',
                            ],
                            'fetch' => 4,
                            'type' => 4,
                            'inversedBy' => null,
                            'isOwningSide' => false,
                            'sourceEntity' => 'Mautic\\FormBundle\\Entity\\Form',
                            'isCascadeRemove' => true,
                            'isCascadePersist' => true,
                            'isCascadeRefresh' => true,
                            'isCascadeMerge' => true,
                            'isCascadeDetach' => true,
                            'orphanRemoval' => false,
                        ],
                        'submissions' => [
                            'fieldName' => 'submissions',
                            'targetEntity' => 'Mautic\\FormBundle\\Entity\\Submission',
                            'orderBy' => [
                                'dateSubmitted' => 'DESC',
                            ],
                            'mappedBy' => 'form',
                            'fetch' => 4,
                            'type' => 4,
                            'inversedBy' => null,
                            'isOwningSide' => false,
                            'sourceEntity' => 'Mautic\\FormBundle\\Entity\\Form',
                            'cascade' => [],
                            'isCascadeRemove' => false,
                            'isCascadePersist' => false,
                            'isCascadeRefresh' => false,
                            'isCascadeMerge' => false,
                            'isCascadeDetach' => false,
                            'orphanRemoval' => false,
                        ],
                    ],
                ],
                'idGenerator' => [
                    $o[1],
                ],
                'changeTrackingPolicy' => [
                    2,
                ],
            ],
        ],
        $o[0],
        []
    );
},
35 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ClassMetadata')),
            clone ($p['Doctrine\\ORM\\Id\\IdentityGenerator'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Id\\IdentityGenerator')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'Mautic\\IntegrationsBundle\\Entity\\ObjectMapping',
                ],
                'namespace' => [
                    'Mautic\\IntegrationsBundle\\Entity',
                ],
                'rootEntityName' => [
                    'Mautic\\IntegrationsBundle\\Entity\\ObjectMapping',
                ],
                'customRepositoryClassName' => [
                    'Mautic\\IntegrationsBundle\\Entity\\ObjectMappingRepository',
                ],
                'identifier' => [
                    [
                        'id',
                    ],
                ],
                'generatorType' => [
                    4,
                ],
                'fieldMappings' => [
                    [
                        'id' => [
                            'fieldName' => 'id',
                            'type' => 'integer',
                            'id' => true,
                            'options' => [
                                'unsigned' => true,
                            ],
                            'columnName' => 'id',
                        ],
                        'dateCreated' => [
                            'fieldName' => 'dateCreated',
                            'type' => 'datetime',
                            'columnName' => 'date_created',
                        ],
                        'integration' => [
                            'fieldName' => 'integration',
                            'type' => 'string',
                            'length' => 191,
                            'columnName' => 'integration',
                        ],
                        'internalObjectName' => [
                            'fieldName' => 'internalObjectName',
                            'type' => 'string',
                            'length' => 191,
                            'columnName' => 'internal_object_name',
                        ],
                        'internalObjectId' => [
                            'fieldName' => 'internalObjectId',
                            'columnName' => 'internal_object_id',
                            'id' => false,
                            'nullable' => false,
                            'type' => 'bigint',
                            'options' => [
                                'unsigned' => true,
                            ],
                        ],
                        'integrationObjectName' => [
                            'fieldName' => 'integrationObjectName',
                            'type' => 'string',
                            'length' => 191,
                            'columnName' => 'integration_object_name',
                        ],
                        'integrationObjectId' => [
                            'fieldName' => 'integrationObjectId',
                            'type' => 'string',
                            'length' => 191,
                            'columnName' => 'integration_object_id',
                        ],
                        'lastSyncDate' => [
                            'fieldName' => 'lastSyncDate',
                            'type' => 'datetime',
                            'columnName' => 'last_sync_date',
                        ],
                        'internalStorage' => [
                            'fieldName' => 'internalStorage',
                            'type' => 'json_array',
                            'columnName' => 'internal_storage',
                        ],
                        'isDeleted' => [
                            'fieldName' => 'isDeleted',
                            'type' => 'boolean',
                            'columnName' => 'is_deleted',
                        ],
                        'integrationReferenceId' => [
                            'fieldName' => 'integrationReferenceId',
                            'type' => 'string',
                            'length' => 191,
                            'columnName' => 'integration_reference_id',
                            'nullable' => true,
                        ],
                    ],
                ],
                'fieldNames' => [
                    [
                        'id' => 'id',
                        'date_created' => 'dateCreated',
                        'integration' => 'integration',
                        'internal_object_name' => 'internalObjectName',
                        'internal_object_id' => 'internalObjectId',
                        'integration_object_name' => 'integrationObjectName',
                        'integration_object_id' => 'integrationObjectId',
                        'last_sync_date' => 'lastSyncDate',
                        'internal_storage' => 'internalStorage',
                        'is_deleted' => 'isDeleted',
                        'integration_reference_id' => 'integrationReferenceId',
                    ],
                ],
                'columnNames' => [
                    [
                        'id' => 'id',
                        'dateCreated' => 'date_created',
                        'integration' => 'integration',
                        'internalObjectName' => 'internal_object_name',
                        'internalObjectId' => 'internal_object_id',
                        'integrationObjectName' => 'integration_object_name',
                        'integrationObjectId' => 'integration_object_id',
                        'lastSyncDate' => 'last_sync_date',
                        'internalStorage' => 'internal_storage',
                        'isDeleted' => 'is_deleted',
                        'integrationReferenceId' => 'integration_reference_id',
                    ],
                ],
                'table' => [
                    [
                        'name' => 'sync_object_mapping',
                        'indexes' => [
                            'integration_object' => [
                                'columns' => [
                                    'integration',
                                    'integration_object_name',
                                    'integration_object_id',
                                    'integration_reference_id',
                                ],
                            ],
                            'integration_reference' => [
                                'columns' => [
                                    'integration',
                                    'integration_object_name',
                                    'integration_reference_id',
                                    'integration_object_id',
                                ],
                            ],
                            'integration_last_sync_date' => [
                                'columns' => [
                                    'integration',
                                    'last_sync_date',
                                ],
                            ],
                        ],
                        'uniqueConstraints' => [],
                    ],
                ],
                'idGenerator' => [
                    $o[1],
                ],
                'changeTrackingPolicy' => [
                    2,
                ],
            ],
        ],
        $o[0],
        []
    );
},
36 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ClassMetadata')),
            clone ($p['Doctrine\\ORM\\Id\\IdentityGenerator'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Id\\IdentityGenerator')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'Mautic\\IntegrationsBundle\\Entity\\FieldChange',
                ],
                'namespace' => [
                    'Mautic\\IntegrationsBundle\\Entity',
                ],
                'rootEntityName' => [
                    'Mautic\\IntegrationsBundle\\Entity\\FieldChange',
                ],
                'customRepositoryClassName' => [
                    'Mautic\\IntegrationsBundle\\Entity\\FieldChangeRepository',
                ],
                'identifier' => [
                    [
                        'id',
                    ],
                ],
                'generatorType' => [
                    4,
                ],
                'fieldMappings' => [
                    [
                        'id' => [
                            'fieldName' => 'id',
                            'type' => 'integer',
                            'id' => true,
                            'options' => [
                                'unsigned' => true,
                            ],
                            'columnName' => 'id',
                        ],
                        'integration' => [
                            'fieldName' => 'integration',
                            'type' => 'string',
                            'length' => 191,
                            'columnName' => 'integration',
                        ],
                        'objectId' => [
                            'fieldName' => 'objectId',
                            'columnName' => 'object_id',
                            'id' => false,
                            'nullable' => false,
                            'type' => 'bigint',
                            'options' => [
                                'unsigned' => true,
                            ],
                        ],
                        'objectType' => [
                            'fieldName' => 'objectType',
                            'type' => 'string',
                            'length' => 191,
                            'columnName' => 'object_type',
                        ],
                        'modifiedAt' => [
                            'fieldName' => 'modifiedAt',
                            'type' => 'datetime',
                            'columnName' => 'modified_at',
                        ],
                        'columnName' => [
                            'fieldName' => 'columnName',
                            'type' => 'string',
                            'length' => 191,
                            'columnName' => 'column_name',
                        ],
                        'columnType' => [
                            'fieldName' => 'columnType',
                            'type' => 'string',
                            'length' => 191,
                            'columnName' => 'column_type',
                        ],
                        'columnValue' => [
                            'fieldName' => 'columnValue',
                            'type' => 'text',
                            'columnName' => 'column_value',
                        ],
                    ],
                ],
                'fieldNames' => [
                    [
                        'id' => 'id',
                        'integration' => 'integration',
                        'object_id' => 'objectId',
                        'object_type' => 'objectType',
                        'modified_at' => 'modifiedAt',
                        'column_name' => 'columnName',
                        'column_type' => 'columnType',
                        'column_value' => 'columnValue',
                    ],
                ],
                'columnNames' => [
                    [
                        'id' => 'id',
                        'integration' => 'integration',
                        'objectId' => 'object_id',
                        'objectType' => 'object_type',
                        'modifiedAt' => 'modified_at',
                        'columnName' => 'column_name',
                        'columnType' => 'column_type',
                        'columnValue' => 'column_value',
                    ],
                ],
                'table' => [
                    [
                        'name' => 'sync_object_field_change_report',
                        'indexes' => [
                            'object_composite_key' => [
                                'columns' => [
                                    'object_type',
                                    'object_id',
                                    'column_name',
                                ],
                            ],
                            'integration_object_composite_key' => [
                                'columns' => [
                                    'integration',
                                    'object_type',
                                    'object_id',
                                    'column_name',
                                ],
                            ],
                            'integration_object_type_modification_composite_key' => [
                                'columns' => [
                                    'integration',
                                    'object_type',
                                    'modified_at',
                                ],
                            ],
                        ],
                        'uniqueConstraints' => [],
                    ],
                ],
                'idGenerator' => [
                    $o[1],
                ],
                'changeTrackingPolicy' => [
                    2,
                ],
            ],
        ],
        $o[0],
        []
    );
},
37 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ClassMetadata')),
            clone ($p['Doctrine\\ORM\\Id\\IdentityGenerator'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Id\\IdentityGenerator')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'Mautic\\LeadBundle\\Entity\\DoNotContact',
                ],
                'namespace' => [
                    'Mautic\\LeadBundle\\Entity',
                ],
                'rootEntityName' => [
                    'Mautic\\LeadBundle\\Entity\\DoNotContact',
                ],
                'customRepositoryClassName' => [
                    'Mautic\\LeadBundle\\Entity\\DoNotContactRepository',
                ],
                'identifier' => [
                    [
                        'id',
                    ],
                ],
                'generatorType' => [
                    4,
                ],
                'fieldMappings' => [
                    [
                        'id' => [
                            'fieldName' => 'id',
                            'type' => 'integer',
                            'id' => true,
                            'options' => [
                                'unsigned' => true,
                            ],
                            'columnName' => 'id',
                        ],
                        'dateAdded' => [
                            'fieldName' => 'dateAdded',
                            'type' => 'datetime',
                            'columnName' => 'date_added',
                        ],
                        'reason' => [
                            'fieldName' => 'reason',
                            'type' => 'smallint',
                            'columnName' => 'reason',
                        ],
                        'channel' => [
                            'fieldName' => 'channel',
                            'type' => 'string',
                            'length' => 191,
                            'columnName' => 'channel',
                        ],
                        'channelId' => [
                            'fieldName' => 'channelId',
                            'type' => 'integer',
                            'columnName' => 'channel_id',
                            'nullable' => true,
                        ],
                        'comments' => [
                            'fieldName' => 'comments',
                            'type' => 'text',
                            'nullable' => true,
                            'columnName' => 'comments',
                        ],
                    ],
                ],
                'fieldNames' => [
                    [
                        'id' => 'id',
                        'date_added' => 'dateAdded',
                        'reason' => 'reason',
                        'channel' => 'channel',
                        'channel_id' => 'channelId',
                        'comments' => 'comments',
                    ],
                ],
                'columnNames' => [
                    [
                        'id' => 'id',
                        'dateAdded' => 'date_added',
                        'reason' => 'reason',
                        'channel' => 'channel',
                        'channelId' => 'channel_id',
                        'comments' => 'comments',
                    ],
                ],
                'table' => [
                    [
                        'name' => 'lead_donotcontact',
                        'indexes' => [
                            'dnc_reason_search' => [
                                'columns' => [
                                    'reason',
                                ],
                            ],
                        ],
                        'uniqueConstraints' => [],
                    ],
                ],
                'associationMappings' => [
                    [
                        'lead' => [
                            'fieldName' => 'lead',
                            'targetEntity' => 'Mautic\\LeadBundle\\Entity\\Lead',
                            'inversedBy' => 'doNotContact',
                            'joinColumns' => [
                                [
                                    'name' => 'lead_id',
                                    'referencedColumnName' => 'id',
                                    'nullable' => true,
                                    'unique' => false,
                                    'onDelete' => 'CASCADE',
                                    'columnDefinition' => null,
                                ],
                            ],
                            'type' => 2,
                            'mappedBy' => null,
                            'isOwningSide' => true,
                            'sourceEntity' => 'Mautic\\LeadBundle\\Entity\\DoNotContact',
                            'fetch' => 2,
                            'cascade' => [],
                            'isCascadeRemove' => false,
                            'isCascadePersist' => false,
                            'isCascadeRefresh' => false,
                            'isCascadeMerge' => false,
                            'isCascadeDetach' => false,
                            'sourceToTargetKeyColumns' => [
                                'lead_id' => 'id',
                            ],
                            'joinColumnFieldNames' => [
                                'lead_id' => 'lead_id',
                            ],
                            'targetToSourceKeyColumns' => [
                                'id' => 'lead_id',
                            ],
                            'orphanRemoval' => false,
                        ],
                    ],
                ],
                'idGenerator' => [
                    $o[1],
                ],
                'changeTrackingPolicy' => [
                    2,
                ],
            ],
        ],
        $o[0],
        []
    );
},
38 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ClassMetadata')),
            clone ($p['Doctrine\\ORM\\Id\\IdentityGenerator'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Id\\IdentityGenerator')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'Mautic\\LeadBundle\\Entity\\Import',
                ],
                'namespace' => [
                    'Mautic\\LeadBundle\\Entity',
                ],
                'rootEntityName' => [
                    'Mautic\\LeadBundle\\Entity\\Import',
                ],
                'customRepositoryClassName' => [
                    'Mautic\\LeadBundle\\Entity\\ImportRepository',
                ],
                'identifier' => [
                    [
                        'id',
                    ],
                ],
                'generatorType' => [
                    4,
                ],
                'fieldMappings' => [
                    [
                        'isPublished' => [
                            'fieldName' => 'isPublished',
                            'type' => 'boolean',
                            'columnName' => 'is_published',
                            'declared' => 'Mautic\\CoreBundle\\Entity\\FormEntity',
                        ],
                        'dateAdded' => [
                            'fieldName' => 'dateAdded',
                            'type' => 'datetime',
                            'columnName' => 'date_added',
                            'nullable' => true,
                            'declared' => 'Mautic\\CoreBundle\\Entity\\FormEntity',
                        ],
                        'createdBy' => [
                            'fieldName' => 'createdBy',
                            'type' => 'integer',
                            'columnName' => 'created_by',
                            'nullable' => true,
                            'declared' => 'Mautic\\CoreBundle\\Entity\\FormEntity',
                        ],
                        'createdByUser' => [
                            'fieldName' => 'createdByUser',
                            'type' => 'string',
                            'length' => 191,
                            'columnName' => 'created_by_user',
                            'nullable' => true,
                            'declared' => 'Mautic\\CoreBundle\\Entity\\FormEntity',
                        ],
                        'dateModified' => [
                            'fieldName' => 'dateModified',
                            'type' => 'datetime',
                            'columnName' => 'date_modified',
                            'nullable' => true,
                            'declared' => 'Mautic\\CoreBundle\\Entity\\FormEntity',
                        ],
                        'modifiedBy' => [
                            'fieldName' => 'modifiedBy',
                            'type' => 'integer',
                            'columnName' => 'modified_by',
                            'nullable' => true,
                            'declared' => 'Mautic\\CoreBundle\\Entity\\FormEntity',
                        ],
                        'modifiedByUser' => [
                            'fieldName' => 'modifiedByUser',
                            'type' => 'string',
                            'length' => 191,
                            'columnName' => 'modified_by_user',
                            'nullable' => true,
                            'declared' => 'Mautic\\CoreBundle\\Entity\\FormEntity',
                        ],
                        'checkedOut' => [
                            'fieldName' => 'checkedOut',
                            'type' => 'datetime',
                            'columnName' => 'checked_out',
                            'nullable' => true,
                            'declared' => 'Mautic\\CoreBundle\\Entity\\FormEntity',
                        ],
                        'checkedOutBy' => [
                            'fieldName' => 'checkedOutBy',
                            'type' => 'integer',
                            'columnName' => 'checked_out_by',
                            'nullable' => true,
                            'declared' => 'Mautic\\CoreBundle\\Entity\\FormEntity',
                        ],
                        'checkedOutByUser' => [
                            'fieldName' => 'checkedOutByUser',
                            'type' => 'string',
                            'length' => 191,
                            'columnName' => 'checked_out_by_user',
                            'nullable' => true,
                            'declared' => 'Mautic\\CoreBundle\\Entity\\FormEntity',
                        ],
                        'id' => [
                            'fieldName' => 'id',
                            'type' => 'integer',
                            'id' => true,
                            'options' => [
                                'unsigned' => true,
                            ],
                            'columnName' => 'id',
                        ],
                        'dir' => [
                            'length' => 191,
                            'fieldName' => 'dir',
                            'type' => 'string',
                            'columnName' => 'dir',
                        ],
                        'file' => [
                            'length' => 191,
                            'fieldName' => 'file',
                            'type' => 'string',
                            'columnName' => 'file',
                        ],
                        'originalFile' => [
                            'fieldName' => 'originalFile',
                            'type' => 'string',
                            'length' => 191,
                            'nullable' => true,
                            'columnName' => 'original_file',
                        ],
                        'lineCount' => [
                            'fieldName' => 'lineCount',
                            'type' => 'integer',
                            'columnName' => 'line_count',
                        ],
                        'insertedCount' => [
                            'fieldName' => 'insertedCount',
                            'type' => 'integer',
                            'columnName' => 'inserted_count',
                        ],
                        'updatedCount' => [
                            'fieldName' => 'updatedCount',
                            'type' => 'integer',
                            'columnName' => 'updated_count',
                        ],
                        'ignoredCount' => [
                            'fieldName' => 'ignoredCount',
                            'type' => 'integer',
                            'columnName' => 'ignored_count',
                        ],
                        'priority' => [
                            'fieldName' => 'priority',
                            'type' => 'integer',
                            'columnName' => 'priority',
                        ],
                        'status' => [
                            'fieldName' => 'status',
                            'type' => 'integer',
                            'columnName' => 'status',
                        ],
                        'dateStarted' => [
                            'fieldName' => 'dateStarted',
                            'type' => 'datetime',
                            'nullable' => true,
                            'columnName' => 'date_started',
                        ],
                        'dateEnded' => [
                            'fieldName' => 'dateEnded',
                            'type' => 'datetime',
                            'nullable' => true,
                            'columnName' => 'date_ended',
                        ],
                        'object' => [
                            'length' => 191,
                            'fieldName' => 'object',
                            'type' => 'string',
                            'columnName' => 'object',
                        ],
                        'properties' => [
                            'fieldName' => 'properties',
                            'type' => 'json_array',
                            'nullable' => true,
                            'columnName' => 'properties',
                        ],
                    ],
                ],
                'fieldNames' => [
                    [
                        'is_published' => 'isPublished',
                        'date_added' => 'dateAdded',
                        'created_by' => 'createdBy',
                        'created_by_user' => 'createdByUser',
                        'date_modified' => 'dateModified',
                        'modified_by' => 'modifiedBy',
                        'modified_by_user' => 'modifiedByUser',
                        'checked_out' => 'checkedOut',
                        'checked_out_by' => 'checkedOutBy',
                        'checked_out_by_user' => 'checkedOutByUser',
                        'id' => 'id',
                        'dir' => 'dir',
                        'file' => 'file',
                        'original_file' => 'originalFile',
                        'line_count' => 'lineCount',
                        'inserted_count' => 'insertedCount',
                        'updated_count' => 'updatedCount',
                        'ignored_count' => 'ignoredCount',
                        'priority' => 'priority',
                        'status' => 'status',
                        'date_started' => 'dateStarted',
                        'date_ended' => 'dateEnded',
                        'object' => 'object',
                        'properties' => 'properties',
                    ],
                ],
                'columnNames' => [
                    [
                        'isPublished' => 'is_published',
                        'dateAdded' => 'date_added',
                        'createdBy' => 'created_by',
                        'createdByUser' => 'created_by_user',
                        'dateModified' => 'date_modified',
                        'modifiedBy' => 'modified_by',
                        'modifiedByUser' => 'modified_by_user',
                        'checkedOut' => 'checked_out',
                        'checkedOutBy' => 'checked_out_by',
                        'checkedOutByUser' => 'checked_out_by_user',
                        'id' => 'id',
                        'dir' => 'dir',
                        'file' => 'file',
                        'originalFile' => 'original_file',
                        'lineCount' => 'line_count',
                        'insertedCount' => 'inserted_count',
                        'updatedCount' => 'updated_count',
                        'ignoredCount' => 'ignored_count',
                        'priority' => 'priority',
                        'status' => 'status',
                        'dateStarted' => 'date_started',
                        'dateEnded' => 'date_ended',
                        'object' => 'object',
                        'properties' => 'properties',
                    ],
                ],
                'table' => [
                    [
                        'name' => 'imports',
                        'indexes' => [
                            'import_object' => [
                                'columns' => [
                                    'object',
                                ],
                            ],
                            'import_status' => [
                                'columns' => [
                                    'status',
                                ],
                            ],
                            'import_priority' => [
                                'columns' => [
                                    'priority',
                                ],
                            ],
                        ],
                        'uniqueConstraints' => [],
                    ],
                ],
                'idGenerator' => [
                    $o[1],
                ],
                'changeTrackingPolicy' => [
                    2,
                ],
            ],
        ],
        $o[0],
        []
    );
},
39 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ClassMetadata')),
            clone ($p['Doctrine\\ORM\\Id\\IdentityGenerator'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Id\\IdentityGenerator')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'Mautic\\LeadBundle\\Entity\\Tag',
                ],
                'namespace' => [
                    'Mautic\\LeadBundle\\Entity',
                ],
                'rootEntityName' => [
                    'Mautic\\LeadBundle\\Entity\\Tag',
                ],
                'customRepositoryClassName' => [
                    'Mautic\\LeadBundle\\Entity\\TagRepository',
                ],
                'identifier' => [
                    [
                        'id',
                    ],
                ],
                'generatorType' => [
                    4,
                ],
                'fieldMappings' => [
                    [
                        'id' => [
                            'fieldName' => 'id',
                            'type' => 'integer',
                            'id' => true,
                            'options' => [
                                'unsigned' => true,
                            ],
                            'columnName' => 'id',
                        ],
                        'tag' => [
                            'length' => 191,
                            'fieldName' => 'tag',
                            'type' => 'string',
                            'columnName' => 'tag',
                        ],
                        'description' => [
                            'fieldName' => 'description',
                            'type' => 'text',
                            'columnName' => 'description',
                            'nullable' => true,
                        ],
                    ],
                ],
                'fieldNames' => [
                    [
                        'id' => 'id',
                        'tag' => 'tag',
                        'description' => 'description',
                    ],
                ],
                'columnNames' => [
                    [
                        'id' => 'id',
                        'tag' => 'tag',
                        'description' => 'description',
                    ],
                ],
                'table' => [
                    [
                        'name' => 'lead_tags',
                        'indexes' => [
                            'lead_tag_search' => [
                                'columns' => [
                                    'tag',
                                ],
                            ],
                        ],
                        'uniqueConstraints' => [],
                    ],
                ],
                'idGenerator' => [
                    $o[1],
                ],
                'changeTrackingPolicy' => [
                    2,
                ],
            ],
        ],
        $o[0],
        []
    );
},
40 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ClassMetadata')),
            clone ($p['Doctrine\\ORM\\Id\\IdentityGenerator'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Id\\IdentityGenerator')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'Mautic\\LeadBundle\\Entity\\MergeRecord',
                ],
                'namespace' => [
                    'Mautic\\LeadBundle\\Entity',
                ],
                'rootEntityName' => [
                    'Mautic\\LeadBundle\\Entity\\MergeRecord',
                ],
                'customRepositoryClassName' => [
                    'Mautic\\LeadBundle\\Entity\\MergeRecordRepository',
                ],
                'identifier' => [
                    [
                        'id',
                    ],
                ],
                'generatorType' => [
                    4,
                ],
                'fieldMappings' => [
                    [
                        'id' => [
                            'fieldName' => 'id',
                            'type' => 'integer',
                            'id' => true,
                            'columnName' => 'id',
                        ],
                        'dateAdded' => [
                            'fieldName' => 'dateAdded',
                            'type' => 'datetime',
                            'columnName' => 'date_added',
                        ],
                        'mergedId' => [
                            'fieldName' => 'mergedId',
                            'type' => 'integer',
                            'columnName' => 'merged_id',
                        ],
                        'name' => [
                            'length' => 191,
                            'fieldName' => 'name',
                            'type' => 'string',
                            'columnName' => 'name',
                        ],
                    ],
                ],
                'fieldNames' => [
                    [
                        'id' => 'id',
                        'date_added' => 'dateAdded',
                        'merged_id' => 'mergedId',
                        'name' => 'name',
                    ],
                ],
                'columnNames' => [
                    [
                        'id' => 'id',
                        'dateAdded' => 'date_added',
                        'mergedId' => 'merged_id',
                        'name' => 'name',
                    ],
                ],
                'table' => [
                    [
                        'name' => 'contact_merge_records',
                        'indexes' => [
                            'contact_merge_date_added' => [
                                'columns' => [
                                    'date_added',
                                ],
                            ],
                            'contact_merge_ids' => [
                                'columns' => [
                                    'merged_id',
                                ],
                            ],
                        ],
                        'uniqueConstraints' => [],
                    ],
                ],
                'associationMappings' => [
                    [
                        'contact' => [
                            'fieldName' => 'contact',
                            'targetEntity' => 'Mautic\\LeadBundle\\Entity\\Lead',
                            'joinColumns' => [
                                [
                                    'name' => 'contact_id',
                                    'referencedColumnName' => 'id',
                                    'nullable' => false,
                                    'unique' => false,
                                    'onDelete' => 'CASCADE',
                                    'columnDefinition' => null,
                                ],
                            ],
                            'type' => 2,
                            'mappedBy' => null,
                            'inversedBy' => null,
                            'isOwningSide' => true,
                            'sourceEntity' => 'Mautic\\LeadBundle\\Entity\\MergeRecord',
                            'fetch' => 2,
                            'cascade' => [],
                            'isCascadeRemove' => false,
                            'isCascadePersist' => false,
                            'isCascadeRefresh' => false,
                            'isCascadeMerge' => false,
                            'isCascadeDetach' => false,
                            'sourceToTargetKeyColumns' => [
                                'contact_id' => 'id',
                            ],
                            'joinColumnFieldNames' => [
                                'contact_id' => 'contact_id',
                            ],
                            'targetToSourceKeyColumns' => [
                                'id' => 'contact_id',
                            ],
                            'orphanRemoval' => false,
                        ],
                    ],
                ],
                'idGenerator' => [
                    $o[1],
                ],
                'changeTrackingPolicy' => [
                    2,
                ],
            ],
        ],
        $o[0],
        []
    );
},
41 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ClassMetadata')),
            clone ($p['Doctrine\\ORM\\Id\\BigIntegerIdentityGenerator'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Id\\BigIntegerIdentityGenerator')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'Mautic\\LeadBundle\\Entity\\LeadDevice',
                ],
                'namespace' => [
                    'Mautic\\LeadBundle\\Entity',
                ],
                'rootEntityName' => [
                    'Mautic\\LeadBundle\\Entity\\LeadDevice',
                ],
                'customRepositoryClassName' => [
                    'Mautic\\LeadBundle\\Entity\\LeadDeviceRepository',
                ],
                'identifier' => [
                    [
                        'id',
                    ],
                ],
                'generatorType' => [
                    4,
                ],
                'fieldMappings' => [
                    [
                        'id' => [
                            'fieldName' => 'id',
                            'columnName' => 'id',
                            'id' => true,
                            'nullable' => false,
                            'type' => 'bigint',
                            'options' => [
                                'unsigned' => true,
                            ],
                        ],
                        'dateAdded' => [
                            'fieldName' => 'dateAdded',
                            'type' => 'datetime',
                            'columnName' => 'date_added',
                        ],
                        'clientInfo' => [
                            'fieldName' => 'clientInfo',
                            'type' => 'array',
                            'columnName' => 'client_info',
                            'nullable' => true,
                        ],
                        'device' => [
                            'fieldName' => 'device',
                            'type' => 'string',
                            'length' => 191,
                            'nullable' => true,
                            'columnName' => 'device',
                        ],
                        'deviceOsName' => [
                            'fieldName' => 'deviceOsName',
                            'type' => 'string',
                            'length' => 191,
                            'columnName' => 'device_os_name',
                            'nullable' => true,
                        ],
                        'deviceOsShortName' => [
                            'fieldName' => 'deviceOsShortName',
                            'type' => 'string',
                            'length' => 191,
                            'columnName' => 'device_os_shortname',
                            'nullable' => true,
                        ],
                        'deviceOsVersion' => [
                            'fieldName' => 'deviceOsVersion',
                            'type' => 'string',
                            'length' => 191,
                            'columnName' => 'device_os_version',
                            'nullable' => true,
                        ],
                        'deviceOsPlatform' => [
                            'fieldName' => 'deviceOsPlatform',
                            'type' => 'string',
                            'length' => 191,
                            'columnName' => 'device_os_platform',
                            'nullable' => true,
                        ],
                        'deviceBrand' => [
                            'fieldName' => 'deviceBrand',
                            'type' => 'string',
                            'length' => 191,
                            'columnName' => 'device_brand',
                            'nullable' => true,
                        ],
                        'deviceModel' => [
                            'fieldName' => 'deviceModel',
                            'type' => 'string',
                            'length' => 191,
                            'columnName' => 'device_model',
                            'nullable' => true,
                        ],
                        'trackingId' => [
                            'fieldName' => 'trackingId',
                            'type' => 'string',
                            'length' => 191,
                            'columnName' => 'tracking_id',
                            'unique' => true,
                            'nullable' => true,
                        ],
                    ],
                ],
                'fieldNames' => [
                    [
                        'id' => 'id',
                        'date_added' => 'dateAdded',
                        'client_info' => 'clientInfo',
                        'device' => 'device',
                        'device_os_name' => 'deviceOsName',
                        'device_os_shortname' => 'deviceOsShortName',
                        'device_os_version' => 'deviceOsVersion',
                        'device_os_platform' => 'deviceOsPlatform',
                        'device_brand' => 'deviceBrand',
                        'device_model' => 'deviceModel',
                        'tracking_id' => 'trackingId',
                    ],
                ],
                'columnNames' => [
                    [
                        'id' => 'id',
                        'dateAdded' => 'date_added',
                        'clientInfo' => 'client_info',
                        'device' => 'device',
                        'deviceOsName' => 'device_os_name',
                        'deviceOsShortName' => 'device_os_shortname',
                        'deviceOsVersion' => 'device_os_version',
                        'deviceOsPlatform' => 'device_os_platform',
                        'deviceBrand' => 'device_brand',
                        'deviceModel' => 'device_model',
                        'trackingId' => 'tracking_id',
                    ],
                ],
                'table' => [
                    [
                        'name' => 'lead_devices',
                        'indexes' => [
                            'date_added_search' => [
                                'columns' => [
                                    'date_added',
                                ],
                            ],
                            'device_search' => [
                                'columns' => [
                                    'device',
                                ],
                            ],
                            'device_os_name_search' => [
                                'columns' => [
                                    'device_os_name',
                                ],
                            ],
                            'device_os_shortname_search' => [
                                'columns' => [
                                    'device_os_shortname',
                                ],
                            ],
                            'device_os_version_search' => [
                                'columns' => [
                                    'device_os_version',
                                ],
                            ],
                            'device_os_platform_search' => [
                                'columns' => [
                                    'device_os_platform',
                                ],
                            ],
                            'device_brand_search' => [
                                'columns' => [
                                    'device_brand',
                                ],
                            ],
                            'device_model_search' => [
                                'columns' => [
                                    'device_model',
                                ],
                            ],
                        ],
                        'uniqueConstraints' => [],
                    ],
                ],
                'associationMappings' => [
                    [
                        'lead' => [
                            'fieldName' => 'lead',
                            'targetEntity' => 'Mautic\\LeadBundle\\Entity\\Lead',
                            'joinColumns' => [
                                [
                                    'name' => 'lead_id',
                                    'referencedColumnName' => 'id',
                                    'nullable' => false,
                                    'unique' => false,
                                    'onDelete' => 'CASCADE',
                                    'columnDefinition' => null,
                                ],
                            ],
                            'type' => 2,
                            'mappedBy' => null,
                            'inversedBy' => null,
                            'isOwningSide' => true,
                            'sourceEntity' => 'Mautic\\LeadBundle\\Entity\\LeadDevice',
                            'fetch' => 2,
                            'cascade' => [],
                            'isCascadeRemove' => false,
                            'isCascadePersist' => false,
                            'isCascadeRefresh' => false,
                            'isCascadeMerge' => false,
                            'isCascadeDetach' => false,
                            'sourceToTargetKeyColumns' => [
                                'lead_id' => 'id',
                            ],
                            'joinColumnFieldNames' => [
                                'lead_id' => 'lead_id',
                            ],
                            'targetToSourceKeyColumns' => [
                                'id' => 'lead_id',
                            ],
                            'orphanRemoval' => false,
                        ],
                    ],
                ],
                'idGenerator' => [
                    $o[1],
                ],
                'changeTrackingPolicy' => [
                    2,
                ],
            ],
        ],
        $o[0],
        []
    );
},
42 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ClassMetadata')),
            clone ($p['Doctrine\\ORM\\Id\\IdentityGenerator'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Id\\IdentityGenerator')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'Mautic\\LeadBundle\\Entity\\Company',
                ],
                'namespace' => [
                    'Mautic\\LeadBundle\\Entity',
                ],
                'rootEntityName' => [
                    'Mautic\\LeadBundle\\Entity\\Company',
                ],
                'customRepositoryClassName' => [
                    'Mautic\\LeadBundle\\Entity\\CompanyRepository',
                ],
                'identifier' => [
                    [
                        'id',
                    ],
                ],
                'generatorType' => [
                    4,
                ],
                'fieldMappings' => [
                    [
                        'isPublished' => [
                            'fieldName' => 'isPublished',
                            'type' => 'boolean',
                            'columnName' => 'is_published',
                            'declared' => 'Mautic\\CoreBundle\\Entity\\FormEntity',
                        ],
                        'dateAdded' => [
                            'fieldName' => 'dateAdded',
                            'type' => 'datetime',
                            'columnName' => 'date_added',
                            'nullable' => true,
                            'declared' => 'Mautic\\CoreBundle\\Entity\\FormEntity',
                        ],
                        'createdBy' => [
                            'fieldName' => 'createdBy',
                            'type' => 'integer',
                            'columnName' => 'created_by',
                            'nullable' => true,
                            'declared' => 'Mautic\\CoreBundle\\Entity\\FormEntity',
                        ],
                        'createdByUser' => [
                            'fieldName' => 'createdByUser',
                            'type' => 'string',
                            'length' => 191,
                            'columnName' => 'created_by_user',
                            'nullable' => true,
                            'declared' => 'Mautic\\CoreBundle\\Entity\\FormEntity',
                        ],
                        'dateModified' => [
                            'fieldName' => 'dateModified',
                            'type' => 'datetime',
                            'columnName' => 'date_modified',
                            'nullable' => true,
                            'declared' => 'Mautic\\CoreBundle\\Entity\\FormEntity',
                        ],
                        'modifiedBy' => [
                            'fieldName' => 'modifiedBy',
                            'type' => 'integer',
                            'columnName' => 'modified_by',
                            'nullable' => true,
                            'declared' => 'Mautic\\CoreBundle\\Entity\\FormEntity',
                        ],
                        'modifiedByUser' => [
                            'fieldName' => 'modifiedByUser',
                            'type' => 'string',
                            'length' => 191,
                            'columnName' => 'modified_by_user',
                            'nullable' => true,
                            'declared' => 'Mautic\\CoreBundle\\Entity\\FormEntity',
                        ],
                        'checkedOut' => [
                            'fieldName' => 'checkedOut',
                            'type' => 'datetime',
                            'columnName' => 'checked_out',
                            'nullable' => true,
                            'declared' => 'Mautic\\CoreBundle\\Entity\\FormEntity',
                        ],
                        'checkedOutBy' => [
                            'fieldName' => 'checkedOutBy',
                            'type' => 'integer',
                            'columnName' => 'checked_out_by',
                            'nullable' => true,
                            'declared' => 'Mautic\\CoreBundle\\Entity\\FormEntity',
                        ],
                        'checkedOutByUser' => [
                            'fieldName' => 'checkedOutByUser',
                            'type' => 'string',
                            'length' => 191,
                            'columnName' => 'checked_out_by_user',
                            'nullable' => true,
                            'declared' => 'Mautic\\CoreBundle\\Entity\\FormEntity',
                        ],
                        'id' => [
                            'fieldName' => 'id',
                            'type' => 'integer',
                            'id' => true,
                            'columnName' => 'id',
                        ],
                        'socialCache' => [
                            'fieldName' => 'socialCache',
                            'type' => 'array',
                            'columnName' => 'social_cache',
                            'nullable' => true,
                        ],
                        'score' => [
                            'fieldName' => 'score',
                            'type' => 'integer',
                            'nullable' => true,
                            'columnName' => 'score',
                        ],
                        'email' => [
                            'fieldName' => 'email',
                            'type' => 'string',
                            'length' => 191,
                            'columnName' => 'companyemail',
                            'nullable' => true,
                        ],
                        'address1' => [
                            'fieldName' => 'address1',
                            'type' => 'string',
                            'length' => 191,
                            'columnName' => 'companyaddress1',
                            'nullable' => true,
                        ],
                        'address2' => [
                            'fieldName' => 'address2',
                            'type' => 'string',
                            'length' => 191,
                            'columnName' => 'companyaddress2',
                            'nullable' => true,
                        ],
                        'phone' => [
                            'fieldName' => 'phone',
                            'type' => 'string',
                            'length' => 191,
                            'columnName' => 'companyphone',
                            'nullable' => true,
                        ],
                        'city' => [
                            'fieldName' => 'city',
                            'type' => 'string',
                            'length' => 191,
                            'columnName' => 'companycity',
                            'nullable' => true,
                        ],
                        'state' => [
                            'fieldName' => 'state',
                            'type' => 'string',
                            'length' => 191,
                            'columnName' => 'companystate',
                            'nullable' => true,
                        ],
                        'zipcode' => [
                            'fieldName' => 'zipcode',
                            'type' => 'string',
                            'length' => 191,
                            'columnName' => 'companyzipcode',
                            'nullable' => true,
                        ],
                        'country' => [
                            'fieldName' => 'country',
                            'type' => 'string',
                            'length' => 191,
                            'columnName' => 'companycountry',
                            'nullable' => true,
                        ],
                        'name' => [
                            'fieldName' => 'name',
                            'type' => 'string',
                            'length' => 191,
                            'columnName' => 'companyname',
                            'nullable' => true,
                        ],
                        'website' => [
                            'fieldName' => 'website',
                            'type' => 'string',
                            'length' => 191,
                            'columnName' => 'companywebsite',
                            'nullable' => true,
                        ],
                        'industry' => [
                            'fieldName' => 'industry',
                            'type' => 'string',
                            'length' => 191,
                            'columnName' => 'companyindustry',
                            'nullable' => true,
                        ],
                        'description' => [
                            'fieldName' => 'description',
                            'type' => 'text',
                            'columnName' => 'companydescription',
                            'nullable' => true,
                        ],
                    ],
                ],
                'fieldNames' => [
                    [
                        'is_published' => 'isPublished',
                        'date_added' => 'dateAdded',
                        'created_by' => 'createdBy',
                        'created_by_user' => 'createdByUser',
                        'date_modified' => 'dateModified',
                        'modified_by' => 'modifiedBy',
                        'modified_by_user' => 'modifiedByUser',
                        'checked_out' => 'checkedOut',
                        'checked_out_by' => 'checkedOutBy',
                        'checked_out_by_user' => 'checkedOutByUser',
                        'id' => 'id',
                        'social_cache' => 'socialCache',
                        'score' => 'score',
                        'companyemail' => 'email',
                        'companyaddress1' => 'address1',
                        'companyaddress2' => 'address2',
                        'companyphone' => 'phone',
                        'companycity' => 'city',
                        'companystate' => 'state',
                        'companyzipcode' => 'zipcode',
                        'companycountry' => 'country',
                        'companyname' => 'name',
                        'companywebsite' => 'website',
                        'companyindustry' => 'industry',
                        'companydescription' => 'description',
                    ],
                ],
                'columnNames' => [
                    [
                        'isPublished' => 'is_published',
                        'dateAdded' => 'date_added',
                        'createdBy' => 'created_by',
                        'createdByUser' => 'created_by_user',
                        'dateModified' => 'date_modified',
                        'modifiedBy' => 'modified_by',
                        'modifiedByUser' => 'modified_by_user',
                        'checkedOut' => 'checked_out',
                        'checkedOutBy' => 'checked_out_by',
                        'checkedOutByUser' => 'checked_out_by_user',
                        'id' => 'id',
                        'socialCache' => 'social_cache',
                        'score' => 'score',
                        'email' => 'companyemail',
                        'address1' => 'companyaddress1',
                        'address2' => 'companyaddress2',
                        'phone' => 'companyphone',
                        'city' => 'companycity',
                        'state' => 'companystate',
                        'zipcode' => 'companyzipcode',
                        'country' => 'companycountry',
                        'name' => 'companyname',
                        'website' => 'companywebsite',
                        'industry' => 'companyindustry',
                        'description' => 'companydescription',
                    ],
                ],
                'table' => [
                    [
                        'name' => 'companies',
                        'indexes' => [],
                        'uniqueConstraints' => [],
                    ],
                ],
                'associationMappings' => [
                    [
                        'owner' => [
                            'fieldName' => 'owner',
                            'targetEntity' => 'Mautic\\UserBundle\\Entity\\User',
                            'cascade' => [
                                'merge',
                            ],
                            'joinColumns' => [
                                [
                                    'name' => 'owner_id',
                                    'referencedColumnName' => 'id',
                                    'nullable' => true,
                                    'unique' => false,
                                    'onDelete' => 'SET NULL',
                                    'columnDefinition' => null,
                                ],
                            ],
                            'type' => 2,
                            'mappedBy' => null,
                            'inversedBy' => null,
                            'isOwningSide' => true,
                            'sourceEntity' => 'Mautic\\LeadBundle\\Entity\\Company',
                            'fetch' => 2,
                            'isCascadeRemove' => false,
                            'isCascadePersist' => false,
                            'isCascadeRefresh' => false,
                            'isCascadeMerge' => true,
                            'isCascadeDetach' => false,
                            'sourceToTargetKeyColumns' => [
                                'owner_id' => 'id',
                            ],
                            'joinColumnFieldNames' => [
                                'owner_id' => 'owner_id',
                            ],
                            'targetToSourceKeyColumns' => [
                                'id' => 'owner_id',
                            ],
                            'orphanRemoval' => false,
                        ],
                    ],
                ],
                'idGenerator' => [
                    $o[1],
                ],
                'changeTrackingPolicy' => [
                    2,
                ],
            ],
        ],
        $o[0],
        []
    );
},
43 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ClassMetadata')),
            clone ($p['Doctrine\\ORM\\Id\\IdentityGenerator'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Id\\IdentityGenerator')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'Mautic\\LeadBundle\\Entity\\LeadNote',
                ],
                'namespace' => [
                    'Mautic\\LeadBundle\\Entity',
                ],
                'rootEntityName' => [
                    'Mautic\\LeadBundle\\Entity\\LeadNote',
                ],
                'customRepositoryClassName' => [
                    'Mautic\\LeadBundle\\Entity\\LeadNoteRepository',
                ],
                'identifier' => [
                    [
                        'id',
                    ],
                ],
                'generatorType' => [
                    4,
                ],
                'fieldMappings' => [
                    [
                        'isPublished' => [
                            'fieldName' => 'isPublished',
                            'type' => 'boolean',
                            'columnName' => 'is_published',
                            'declared' => 'Mautic\\CoreBundle\\Entity\\FormEntity',
                        ],
                        'dateAdded' => [
                            'fieldName' => 'dateAdded',
                            'type' => 'datetime',
                            'columnName' => 'date_added',
                            'nullable' => true,
                            'declared' => 'Mautic\\CoreBundle\\Entity\\FormEntity',
                        ],
                        'createdBy' => [
                            'fieldName' => 'createdBy',
                            'type' => 'integer',
                            'columnName' => 'created_by',
                            'nullable' => true,
                            'declared' => 'Mautic\\CoreBundle\\Entity\\FormEntity',
                        ],
                        'createdByUser' => [
                            'fieldName' => 'createdByUser',
                            'type' => 'string',
                            'length' => 191,
                            'columnName' => 'created_by_user',
                            'nullable' => true,
                            'declared' => 'Mautic\\CoreBundle\\Entity\\FormEntity',
                        ],
                        'dateModified' => [
                            'fieldName' => 'dateModified',
                            'type' => 'datetime',
                            'columnName' => 'date_modified',
                            'nullable' => true,
                            'declared' => 'Mautic\\CoreBundle\\Entity\\FormEntity',
                        ],
                        'modifiedBy' => [
                            'fieldName' => 'modifiedBy',
                            'type' => 'integer',
                            'columnName' => 'modified_by',
                            'nullable' => true,
                            'declared' => 'Mautic\\CoreBundle\\Entity\\FormEntity',
                        ],
                        'modifiedByUser' => [
                            'fieldName' => 'modifiedByUser',
                            'type' => 'string',
                            'length' => 191,
                            'columnName' => 'modified_by_user',
                            'nullable' => true,
                            'declared' => 'Mautic\\CoreBundle\\Entity\\FormEntity',
                        ],
                        'checkedOut' => [
                            'fieldName' => 'checkedOut',
                            'type' => 'datetime',
                            'columnName' => 'checked_out',
                            'nullable' => true,
                            'declared' => 'Mautic\\CoreBundle\\Entity\\FormEntity',
                        ],
                        'checkedOutBy' => [
                            'fieldName' => 'checkedOutBy',
                            'type' => 'integer',
                            'columnName' => 'checked_out_by',
                            'nullable' => true,
                            'declared' => 'Mautic\\CoreBundle\\Entity\\FormEntity',
                        ],
                        'checkedOutByUser' => [
                            'fieldName' => 'checkedOutByUser',
                            'type' => 'string',
                            'length' => 191,
                            'columnName' => 'checked_out_by_user',
                            'nullable' => true,
                            'declared' => 'Mautic\\CoreBundle\\Entity\\FormEntity',
                        ],
                        'id' => [
                            'fieldName' => 'id',
                            'type' => 'integer',
                            'id' => true,
                            'options' => [
                                'unsigned' => true,
                            ],
                            'columnName' => 'id',
                        ],
                        'text' => [
                            'fieldName' => 'text',
                            'type' => 'text',
                            'columnName' => 'text',
                        ],
                        'type' => [
                            'fieldName' => 'type',
                            'type' => 'string',
                            'length' => 50,
                            'nullable' => true,
                            'columnName' => 'type',
                        ],
                        'dateTime' => [
                            'fieldName' => 'dateTime',
                            'type' => 'datetime',
                            'columnName' => 'date_time',
                            'nullable' => true,
                        ],
                    ],
                ],
                'fieldNames' => [
                    [
                        'is_published' => 'isPublished',
                        'date_added' => 'dateAdded',
                        'created_by' => 'createdBy',
                        'created_by_user' => 'createdByUser',
                        'date_modified' => 'dateModified',
                        'modified_by' => 'modifiedBy',
                        'modified_by_user' => 'modifiedByUser',
                        'checked_out' => 'checkedOut',
                        'checked_out_by' => 'checkedOutBy',
                        'checked_out_by_user' => 'checkedOutByUser',
                        'id' => 'id',
                        'text' => 'text',
                        'type' => 'type',
                        'date_time' => 'dateTime',
                    ],
                ],
                'columnNames' => [
                    [
                        'isPublished' => 'is_published',
                        'dateAdded' => 'date_added',
                        'createdBy' => 'created_by',
                        'createdByUser' => 'created_by_user',
                        'dateModified' => 'date_modified',
                        'modifiedBy' => 'modified_by',
                        'modifiedByUser' => 'modified_by_user',
                        'checkedOut' => 'checked_out',
                        'checkedOutBy' => 'checked_out_by',
                        'checkedOutByUser' => 'checked_out_by_user',
                        'id' => 'id',
                        'text' => 'text',
                        'type' => 'type',
                        'dateTime' => 'date_time',
                    ],
                ],
                'table' => [
                    [
                        'name' => 'lead_notes',
                        'indexes' => [],
                        'uniqueConstraints' => [],
                    ],
                ],
                'associationMappings' => [
                    [
                        'lead' => [
                            'fieldName' => 'lead',
                            'targetEntity' => 'Mautic\\LeadBundle\\Entity\\Lead',
                            'inversedBy' => 'notes',
                            'joinColumns' => [
                                [
                                    'name' => 'lead_id',
                                    'referencedColumnName' => 'id',
                                    'nullable' => false,
                                    'unique' => false,
                                    'onDelete' => 'CASCADE',
                                    'columnDefinition' => null,
                                ],
                            ],
                            'type' => 2,
                            'mappedBy' => null,
                            'isOwningSide' => true,
                            'sourceEntity' => 'Mautic\\LeadBundle\\Entity\\LeadNote',
                            'fetch' => 2,
                            'cascade' => [],
                            'isCascadeRemove' => false,
                            'isCascadePersist' => false,
                            'isCascadeRefresh' => false,
                            'isCascadeMerge' => false,
                            'isCascadeDetach' => false,
                            'sourceToTargetKeyColumns' => [
                                'lead_id' => 'id',
                            ],
                            'joinColumnFieldNames' => [
                                'lead_id' => 'lead_id',
                            ],
                            'targetToSourceKeyColumns' => [
                                'id' => 'lead_id',
                            ],
                            'orphanRemoval' => false,
                        ],
                    ],
                ],
                'idGenerator' => [
                    $o[1],
                ],
                'changeTrackingPolicy' => [
                    2,
                ],
            ],
        ],
        $o[0],
        []
    );
},
44 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ClassMetadata')),
            clone ($p['Doctrine\\ORM\\Id\\IdentityGenerator'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Id\\IdentityGenerator')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'Mautic\\LeadBundle\\Entity\\FrequencyRule',
                ],
                'namespace' => [
                    'Mautic\\LeadBundle\\Entity',
                ],
                'rootEntityName' => [
                    'Mautic\\LeadBundle\\Entity\\FrequencyRule',
                ],
                'customRepositoryClassName' => [
                    'Mautic\\LeadBundle\\Entity\\FrequencyRuleRepository',
                ],
                'identifier' => [
                    [
                        'id',
                    ],
                ],
                'generatorType' => [
                    4,
                ],
                'fieldMappings' => [
                    [
                        'id' => [
                            'fieldName' => 'id',
                            'type' => 'integer',
                            'id' => true,
                            'options' => [
                                'unsigned' => true,
                            ],
                            'columnName' => 'id',
                        ],
                        'dateAdded' => [
                            'fieldName' => 'dateAdded',
                            'type' => 'datetime',
                            'columnName' => 'date_added',
                        ],
                        'frequencyNumber' => [
                            'fieldName' => 'frequencyNumber',
                            'type' => 'smallint',
                            'columnName' => 'frequency_number',
                            'nullable' => true,
                        ],
                        'frequencyTime' => [
                            'fieldName' => 'frequencyTime',
                            'type' => 'string',
                            'length' => 25,
                            'columnName' => 'frequency_time',
                            'nullable' => true,
                        ],
                        'channel' => [
                            'fieldName' => 'channel',
                            'type' => 'string',
                            'length' => 191,
                            'columnName' => 'channel',
                        ],
                        'preferredChannel' => [
                            'fieldName' => 'preferredChannel',
                            'type' => 'boolean',
                            'columnName' => 'preferred_channel',
                        ],
                        'pauseFromDate' => [
                            'fieldName' => 'pauseFromDate',
                            'type' => 'datetime',
                            'columnName' => 'pause_from_date',
                            'nullable' => true,
                        ],
                        'pauseToDate' => [
                            'fieldName' => 'pauseToDate',
                            'type' => 'datetime',
                            'columnName' => 'pause_to_date',
                            'nullable' => true,
                        ],
                    ],
                ],
                'fieldNames' => [
                    [
                        'id' => 'id',
                        'date_added' => 'dateAdded',
                        'frequency_number' => 'frequencyNumber',
                        'frequency_time' => 'frequencyTime',
                        'channel' => 'channel',
                        'preferred_channel' => 'preferredChannel',
                        'pause_from_date' => 'pauseFromDate',
                        'pause_to_date' => 'pauseToDate',
                    ],
                ],
                'columnNames' => [
                    [
                        'id' => 'id',
                        'dateAdded' => 'date_added',
                        'frequencyNumber' => 'frequency_number',
                        'frequencyTime' => 'frequency_time',
                        'channel' => 'channel',
                        'preferredChannel' => 'preferred_channel',
                        'pauseFromDate' => 'pause_from_date',
                        'pauseToDate' => 'pause_to_date',
                    ],
                ],
                'table' => [
                    [
                        'name' => 'lead_frequencyrules',
                        'indexes' => [
                            'channel_frequency' => [
                                'columns' => [
                                    'channel',
                                ],
                            ],
                        ],
                        'uniqueConstraints' => [],
                    ],
                ],
                'associationMappings' => [
                    [
                        'lead' => [
                            'fieldName' => 'lead',
                            'targetEntity' => 'Mautic\\LeadBundle\\Entity\\Lead',
                            'inversedBy' => 'frequencyRules',
                            'joinColumns' => [
                                [
                                    'name' => 'lead_id',
                                    'referencedColumnName' => 'id',
                                    'nullable' => false,
                                    'unique' => false,
                                    'onDelete' => 'CASCADE',
                                    'columnDefinition' => null,
                                ],
                            ],
                            'type' => 2,
                            'mappedBy' => null,
                            'isOwningSide' => true,
                            'sourceEntity' => 'Mautic\\LeadBundle\\Entity\\FrequencyRule',
                            'fetch' => 2,
                            'cascade' => [],
                            'isCascadeRemove' => false,
                            'isCascadePersist' => false,
                            'isCascadeRefresh' => false,
                            'isCascadeMerge' => false,
                            'isCascadeDetach' => false,
                            'sourceToTargetKeyColumns' => [
                                'lead_id' => 'id',
                            ],
                            'joinColumnFieldNames' => [
                                'lead_id' => 'lead_id',
                            ],
                            'targetToSourceKeyColumns' => [
                                'id' => 'lead_id',
                            ],
                            'orphanRemoval' => false,
                        ],
                    ],
                ],
                'idGenerator' => [
                    $o[1],
                ],
                'changeTrackingPolicy' => [
                    2,
                ],
            ],
        ],
        $o[0],
        []
    );
},
45 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ClassMetadata')),
            clone ($p['Doctrine\\ORM\\Id\\AssignedGenerator'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Id\\AssignedGenerator')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'Mautic\\LeadBundle\\Entity\\ListLead',
                ],
                'namespace' => [
                    'Mautic\\LeadBundle\\Entity',
                ],
                'rootEntityName' => [
                    'Mautic\\LeadBundle\\Entity\\ListLead',
                ],
                'customRepositoryClassName' => [
                    'Mautic\\LeadBundle\\Entity\\ListLeadRepository',
                ],
                'identifier' => [
                    [
                        'list',
                        'lead',
                    ],
                ],
                'fieldMappings' => [
                    [
                        'dateAdded' => [
                            'fieldName' => 'dateAdded',
                            'type' => 'datetime',
                            'columnName' => 'date_added',
                        ],
                        'manuallyRemoved' => [
                            'fieldName' => 'manuallyRemoved',
                            'type' => 'boolean',
                            'columnName' => 'manually_removed',
                        ],
                        'manuallyAdded' => [
                            'fieldName' => 'manuallyAdded',
                            'type' => 'boolean',
                            'columnName' => 'manually_added',
                        ],
                    ],
                ],
                'fieldNames' => [
                    [
                        'date_added' => 'dateAdded',
                        'manually_removed' => 'manuallyRemoved',
                        'manually_added' => 'manuallyAdded',
                    ],
                ],
                'columnNames' => [
                    [
                        'dateAdded' => 'date_added',
                        'manuallyRemoved' => 'manually_removed',
                        'manuallyAdded' => 'manually_added',
                    ],
                ],
                'table' => [
                    [
                        'name' => 'lead_lists_leads',
                        'indexes' => [
                            'manually_removed' => [
                                'columns' => [
                                    'manually_removed',
                                ],
                            ],
                        ],
                        'uniqueConstraints' => [],
                    ],
                ],
                'associationMappings' => [
                    [
                        'list' => [
                            'fieldName' => 'list',
                            'targetEntity' => 'Mautic\\LeadBundle\\Entity\\LeadList',
                            'id' => true,
                            'inversedBy' => 'leads',
                            'joinColumns' => [
                                [
                                    'name' => 'leadlist_id',
                                    'referencedColumnName' => 'id',
                                    'nullable' => false,
                                    'unique' => false,
                                    'onDelete' => 'CASCADE',
                                    'columnDefinition' => null,
                                ],
                            ],
                            'type' => 2,
                            'mappedBy' => null,
                            'isOwningSide' => true,
                            'sourceEntity' => 'Mautic\\LeadBundle\\Entity\\ListLead',
                            'fetch' => 2,
                            'cascade' => [],
                            'isCascadeRemove' => false,
                            'isCascadePersist' => false,
                            'isCascadeRefresh' => false,
                            'isCascadeMerge' => false,
                            'isCascadeDetach' => false,
                            'sourceToTargetKeyColumns' => [
                                'leadlist_id' => 'id',
                            ],
                            'joinColumnFieldNames' => [
                                'leadlist_id' => 'leadlist_id',
                            ],
                            'targetToSourceKeyColumns' => [
                                'id' => 'leadlist_id',
                            ],
                            'orphanRemoval' => false,
                        ],
                        'lead' => [
                            'fieldName' => 'lead',
                            'targetEntity' => 'Mautic\\LeadBundle\\Entity\\Lead',
                            'id' => true,
                            'joinColumns' => [
                                [
                                    'name' => 'lead_id',
                                    'referencedColumnName' => 'id',
                                    'nullable' => false,
                                    'unique' => false,
                                    'onDelete' => 'CASCADE',
                                    'columnDefinition' => null,
                                ],
                            ],
                            'type' => 2,
                            'mappedBy' => null,
                            'inversedBy' => null,
                            'isOwningSide' => true,
                            'sourceEntity' => 'Mautic\\LeadBundle\\Entity\\ListLead',
                            'fetch' => 2,
                            'cascade' => [],
                            'isCascadeRemove' => false,
                            'isCascadePersist' => false,
                            'isCascadeRefresh' => false,
                            'isCascadeMerge' => false,
                            'isCascadeDetach' => false,
                            'sourceToTargetKeyColumns' => [
                                'lead_id' => 'id',
                            ],
                            'joinColumnFieldNames' => [
                                'lead_id' => 'lead_id',
                            ],
                            'targetToSourceKeyColumns' => [
                                'id' => 'lead_id',
                            ],
                            'orphanRemoval' => false,
                        ],
                    ],
                ],
                'isIdentifierComposite' => [
                    true,
                ],
                'containsForeignIdentifier' => [
                    true,
                ],
                'idGenerator' => [
                    $o[1],
                ],
                'changeTrackingPolicy' => [
                    2,
                ],
            ],
        ],
        $o[0],
        []
    );
},
46 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ClassMetadata')),
            clone ($p['Doctrine\\ORM\\Id\\IdentityGenerator'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Id\\IdentityGenerator')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'Mautic\\LeadBundle\\Entity\\StagesChangeLog',
                ],
                'namespace' => [
                    'Mautic\\LeadBundle\\Entity',
                ],
                'rootEntityName' => [
                    'Mautic\\LeadBundle\\Entity\\StagesChangeLog',
                ],
                'customRepositoryClassName' => [
                    'Mautic\\LeadBundle\\Entity\\StagesChangeLogRepository',
                ],
                'identifier' => [
                    [
                        'id',
                    ],
                ],
                'generatorType' => [
                    4,
                ],
                'fieldMappings' => [
                    [
                        'id' => [
                            'fieldName' => 'id',
                            'type' => 'integer',
                            'id' => true,
                            'options' => [
                                'unsigned' => true,
                            ],
                            'columnName' => 'id',
                        ],
                        'eventName' => [
                            'fieldName' => 'eventName',
                            'type' => 'string',
                            'length' => 191,
                            'columnName' => 'event_name',
                        ],
                        'actionName' => [
                            'fieldName' => 'actionName',
                            'type' => 'string',
                            'length' => 191,
                            'columnName' => 'action_name',
                        ],
                        'dateAdded' => [
                            'fieldName' => 'dateAdded',
                            'type' => 'datetime',
                            'columnName' => 'date_added',
                        ],
                    ],
                ],
                'fieldNames' => [
                    [
                        'id' => 'id',
                        'event_name' => 'eventName',
                        'action_name' => 'actionName',
                        'date_added' => 'dateAdded',
                    ],
                ],
                'columnNames' => [
                    [
                        'id' => 'id',
                        'eventName' => 'event_name',
                        'actionName' => 'action_name',
                        'dateAdded' => 'date_added',
                    ],
                ],
                'table' => [
                    [
                        'name' => 'lead_stages_change_log',
                        'indexes' => [],
                        'uniqueConstraints' => [],
                    ],
                ],
                'associationMappings' => [
                    [
                        'lead' => [
                            'fieldName' => 'lead',
                            'targetEntity' => 'Mautic\\LeadBundle\\Entity\\Lead',
                            'inversedBy' => 'stageChangeLog',
                            'joinColumns' => [
                                [
                                    'name' => 'lead_id',
                                    'referencedColumnName' => 'id',
                                    'nullable' => false,
                                    'unique' => false,
                                    'onDelete' => 'CASCADE',
                                    'columnDefinition' => null,
                                ],
                            ],
                            'type' => 2,
                            'mappedBy' => null,
                            'isOwningSide' => true,
                            'sourceEntity' => 'Mautic\\LeadBundle\\Entity\\StagesChangeLog',
                            'fetch' => 2,
                            'cascade' => [],
                            'isCascadeRemove' => false,
                            'isCascadePersist' => false,
                            'isCascadeRefresh' => false,
                            'isCascadeMerge' => false,
                            'isCascadeDetach' => false,
                            'sourceToTargetKeyColumns' => [
                                'lead_id' => 'id',
                            ],
                            'joinColumnFieldNames' => [
                                'lead_id' => 'lead_id',
                            ],
                            'targetToSourceKeyColumns' => [
                                'id' => 'lead_id',
                            ],
                            'orphanRemoval' => false,
                        ],
                        'stage' => [
                            'fieldName' => 'stage',
                            'targetEntity' => 'Mautic\\StageBundle\\Entity\\Stage',
                            'inversedBy' => 'log',
                            'joinColumns' => [
                                [
                                    'name' => 'stage_id',
                                    'referencedColumnName' => 'id',
                                    'nullable' => true,
                                    'unique' => false,
                                    'onDelete' => 'CASCADE',
                                    'columnDefinition' => null,
                                ],
                            ],
                            'type' => 2,
                            'mappedBy' => null,
                            'isOwningSide' => true,
                            'sourceEntity' => 'Mautic\\LeadBundle\\Entity\\StagesChangeLog',
                            'fetch' => 2,
                            'cascade' => [],
                            'isCascadeRemove' => false,
                            'isCascadePersist' => false,
                            'isCascadeRefresh' => false,
                            'isCascadeMerge' => false,
                            'isCascadeDetach' => false,
                            'sourceToTargetKeyColumns' => [
                                'stage_id' => 'id',
                            ],
                            'joinColumnFieldNames' => [
                                'stage_id' => 'stage_id',
                            ],
                            'targetToSourceKeyColumns' => [
                                'id' => 'stage_id',
                            ],
                            'orphanRemoval' => false,
                        ],
                    ],
                ],
                'idGenerator' => [
                    $o[1],
                ],
                'changeTrackingPolicy' => [
                    2,
                ],
            ],
        ],
        $o[0],
        []
    );
},
47 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ClassMetadata')),
            clone ($p['Doctrine\\ORM\\Id\\IdentityGenerator'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Id\\IdentityGenerator')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'Mautic\\LeadBundle\\Entity\\CompanyChangeLog',
                ],
                'namespace' => [
                    'Mautic\\LeadBundle\\Entity',
                ],
                'rootEntityName' => [
                    'Mautic\\LeadBundle\\Entity\\CompanyChangeLog',
                ],
                'customRepositoryClassName' => [
                    'Mautic\\LeadBundle\\Entity\\CompanyChangeLogRepository',
                ],
                'identifier' => [
                    [
                        'id',
                    ],
                ],
                'generatorType' => [
                    4,
                ],
                'fieldMappings' => [
                    [
                        'id' => [
                            'fieldName' => 'id',
                            'type' => 'integer',
                            'id' => true,
                            'options' => [
                                'unsigned' => true,
                            ],
                            'columnName' => 'id',
                        ],
                        'type' => [
                            'fieldName' => 'type',
                            'type' => 'text',
                            'length' => 50,
                            'columnName' => 'type',
                        ],
                        'eventName' => [
                            'fieldName' => 'eventName',
                            'type' => 'string',
                            'length' => 191,
                            'columnName' => 'event_name',
                        ],
                        'actionName' => [
                            'fieldName' => 'actionName',
                            'type' => 'string',
                            'length' => 191,
                            'columnName' => 'action_name',
                        ],
                        'company' => [
                            'fieldName' => 'company',
                            'type' => 'integer',
                            'columnName' => 'company_id',
                        ],
                        'dateAdded' => [
                            'fieldName' => 'dateAdded',
                            'type' => 'datetime',
                            'columnName' => 'date_added',
                        ],
                    ],
                ],
                'fieldNames' => [
                    [
                        'id' => 'id',
                        'type' => 'type',
                        'event_name' => 'eventName',
                        'action_name' => 'actionName',
                        'company_id' => 'company',
                        'date_added' => 'dateAdded',
                    ],
                ],
                'columnNames' => [
                    [
                        'id' => 'id',
                        'type' => 'type',
                        'eventName' => 'event_name',
                        'actionName' => 'action_name',
                        'company' => 'company_id',
                        'dateAdded' => 'date_added',
                    ],
                ],
                'table' => [
                    [
                        'name' => 'lead_companies_change_log',
                        'indexes' => [
                            'company_date_added' => [
                                'columns' => [
                                    'date_added',
                                ],
                            ],
                        ],
                        'uniqueConstraints' => [],
                    ],
                ],
                'associationMappings' => [
                    [
                        'lead' => [
                            'fieldName' => 'lead',
                            'targetEntity' => 'Mautic\\LeadBundle\\Entity\\Lead',
                            'inversedBy' => 'companyChangeLog',
                            'joinColumns' => [
                                [
                                    'name' => 'lead_id',
                                    'referencedColumnName' => 'id',
                                    'nullable' => false,
                                    'unique' => false,
                                    'onDelete' => 'CASCADE',
                                    'columnDefinition' => null,
                                ],
                            ],
                            'type' => 2,
                            'mappedBy' => null,
                            'isOwningSide' => true,
                            'sourceEntity' => 'Mautic\\LeadBundle\\Entity\\CompanyChangeLog',
                            'fetch' => 2,
                            'cascade' => [],
                            'isCascadeRemove' => false,
                            'isCascadePersist' => false,
                            'isCascadeRefresh' => false,
                            'isCascadeMerge' => false,
                            'isCascadeDetach' => false,
                            'sourceToTargetKeyColumns' => [
                                'lead_id' => 'id',
                            ],
                            'joinColumnFieldNames' => [
                                'lead_id' => 'lead_id',
                            ],
                            'targetToSourceKeyColumns' => [
                                'id' => 'lead_id',
                            ],
                            'orphanRemoval' => false,
                        ],
                    ],
                ],
                'idGenerator' => [
                    $o[1],
                ],
                'changeTrackingPolicy' => [
                    2,
                ],
            ],
        ],
        $o[0],
        []
    );
},
48 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ClassMetadata')),
            clone ($p['Doctrine\\ORM\\Id\\IdentityGenerator'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Id\\IdentityGenerator')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'Mautic\\LeadBundle\\Entity\\LeadList',
                ],
                'namespace' => [
                    'Mautic\\LeadBundle\\Entity',
                ],
                'rootEntityName' => [
                    'Mautic\\LeadBundle\\Entity\\LeadList',
                ],
                'customRepositoryClassName' => [
                    'Mautic\\LeadBundle\\Entity\\LeadListRepository',
                ],
                'identifier' => [
                    [
                        'id',
                    ],
                ],
                'generatorType' => [
                    4,
                ],
                'fieldMappings' => [
                    [
                        'isPublished' => [
                            'fieldName' => 'isPublished',
                            'type' => 'boolean',
                            'columnName' => 'is_published',
                            'declared' => 'Mautic\\CoreBundle\\Entity\\FormEntity',
                        ],
                        'dateAdded' => [
                            'fieldName' => 'dateAdded',
                            'type' => 'datetime',
                            'columnName' => 'date_added',
                            'nullable' => true,
                            'declared' => 'Mautic\\CoreBundle\\Entity\\FormEntity',
                        ],
                        'createdBy' => [
                            'fieldName' => 'createdBy',
                            'type' => 'integer',
                            'columnName' => 'created_by',
                            'nullable' => true,
                            'declared' => 'Mautic\\CoreBundle\\Entity\\FormEntity',
                        ],
                        'createdByUser' => [
                            'fieldName' => 'createdByUser',
                            'type' => 'string',
                            'length' => 191,
                            'columnName' => 'created_by_user',
                            'nullable' => true,
                            'declared' => 'Mautic\\CoreBundle\\Entity\\FormEntity',
                        ],
                        'dateModified' => [
                            'fieldName' => 'dateModified',
                            'type' => 'datetime',
                            'columnName' => 'date_modified',
                            'nullable' => true,
                            'declared' => 'Mautic\\CoreBundle\\Entity\\FormEntity',
                        ],
                        'modifiedBy' => [
                            'fieldName' => 'modifiedBy',
                            'type' => 'integer',
                            'columnName' => 'modified_by',
                            'nullable' => true,
                            'declared' => 'Mautic\\CoreBundle\\Entity\\FormEntity',
                        ],
                        'modifiedByUser' => [
                            'fieldName' => 'modifiedByUser',
                            'type' => 'string',
                            'length' => 191,
                            'columnName' => 'modified_by_user',
                            'nullable' => true,
                            'declared' => 'Mautic\\CoreBundle\\Entity\\FormEntity',
                        ],
                        'checkedOut' => [
                            'fieldName' => 'checkedOut',
                            'type' => 'datetime',
                            'columnName' => 'checked_out',
                            'nullable' => true,
                            'declared' => 'Mautic\\CoreBundle\\Entity\\FormEntity',
                        ],
                        'checkedOutBy' => [
                            'fieldName' => 'checkedOutBy',
                            'type' => 'integer',
                            'columnName' => 'checked_out_by',
                            'nullable' => true,
                            'declared' => 'Mautic\\CoreBundle\\Entity\\FormEntity',
                        ],
                        'checkedOutByUser' => [
                            'fieldName' => 'checkedOutByUser',
                            'type' => 'string',
                            'length' => 191,
                            'columnName' => 'checked_out_by_user',
                            'nullable' => true,
                            'declared' => 'Mautic\\CoreBundle\\Entity\\FormEntity',
                        ],
                        'id' => [
                            'fieldName' => 'id',
                            'type' => 'integer',
                            'id' => true,
                            'options' => [
                                'unsigned' => true,
                            ],
                            'columnName' => 'id',
                        ],
                        'name' => [
                            'fieldName' => 'name',
                            'type' => 'string',
                            'length' => 191,
                            'columnName' => 'name',
                        ],
                        'description' => [
                            'fieldName' => 'description',
                            'type' => 'text',
                            'nullable' => true,
                            'columnName' => 'description',
                        ],
                        'alias' => [
                            'length' => 191,
                            'fieldName' => 'alias',
                            'type' => 'string',
                            'columnName' => 'alias',
                        ],
                        'publicName' => [
                            'fieldName' => 'publicName',
                            'type' => 'string',
                            'length' => 191,
                            'columnName' => 'public_name',
                        ],
                        'filters' => [
                            'fieldName' => 'filters',
                            'type' => 'array',
                            'columnName' => 'filters',
                        ],
                        'isGlobal' => [
                            'fieldName' => 'isGlobal',
                            'type' => 'boolean',
                            'columnName' => 'is_global',
                        ],
                        'isPreferenceCenter' => [
                            'fieldName' => 'isPreferenceCenter',
                            'type' => 'boolean',
                            'columnName' => 'is_preference_center',
                        ],
                        'lastBuiltDate' => [
                            'fieldName' => 'lastBuiltDate',
                            'type' => 'datetime',
                            'columnName' => 'last_built_date',
                            'nullable' => true,
                        ],
                    ],
                ],
                'fieldNames' => [
                    [
                        'is_published' => 'isPublished',
                        'date_added' => 'dateAdded',
                        'created_by' => 'createdBy',
                        'created_by_user' => 'createdByUser',
                        'date_modified' => 'dateModified',
                        'modified_by' => 'modifiedBy',
                        'modified_by_user' => 'modifiedByUser',
                        'checked_out' => 'checkedOut',
                        'checked_out_by' => 'checkedOutBy',
                        'checked_out_by_user' => 'checkedOutByUser',
                        'id' => 'id',
                        'name' => 'name',
                        'description' => 'description',
                        'alias' => 'alias',
                        'public_name' => 'publicName',
                        'filters' => 'filters',
                        'is_global' => 'isGlobal',
                        'is_preference_center' => 'isPreferenceCenter',
                        'last_built_date' => 'lastBuiltDate',
                    ],
                ],
                'columnNames' => [
                    [
                        'isPublished' => 'is_published',
                        'dateAdded' => 'date_added',
                        'createdBy' => 'created_by',
                        'createdByUser' => 'created_by_user',
                        'dateModified' => 'date_modified',
                        'modifiedBy' => 'modified_by',
                        'modifiedByUser' => 'modified_by_user',
                        'checkedOut' => 'checked_out',
                        'checkedOutBy' => 'checked_out_by',
                        'checkedOutByUser' => 'checked_out_by_user',
                        'id' => 'id',
                        'name' => 'name',
                        'description' => 'description',
                        'alias' => 'alias',
                        'publicName' => 'public_name',
                        'filters' => 'filters',
                        'isGlobal' => 'is_global',
                        'isPreferenceCenter' => 'is_preference_center',
                        'lastBuiltDate' => 'last_built_date',
                    ],
                ],
                'table' => [
                    [
                        'name' => 'lead_lists',
                        'indexes' => [],
                        'uniqueConstraints' => [],
                    ],
                ],
                'lifecycleCallbacks' => [
                    [
                        'prePersist' => [
                            'initializeLastBuiltDate',
                        ],
                    ],
                ],
                'associationMappings' => [
                    [
                        'category' => [
                            'fieldName' => 'category',
                            'targetEntity' => 'Mautic\\CategoryBundle\\Entity\\Category',
                            'cascade' => [
                                'merge',
                                'detach',
                            ],
                            'joinColumns' => [
                                [
                                    'name' => 'category_id',
                                    'referencedColumnName' => 'id',
                                    'nullable' => true,
                                    'unique' => false,
                                    'onDelete' => 'SET NULL',
                                    'columnDefinition' => null,
                                ],
                            ],
                            'type' => 2,
                            'mappedBy' => null,
                            'inversedBy' => null,
                            'isOwningSide' => true,
                            'sourceEntity' => 'Mautic\\LeadBundle\\Entity\\LeadList',
                            'fetch' => 2,
                            'isCascadeRemove' => false,
                            'isCascadePersist' => false,
                            'isCascadeRefresh' => false,
                            'isCascadeMerge' => true,
                            'isCascadeDetach' => true,
                            'sourceToTargetKeyColumns' => [
                                'category_id' => 'id',
                            ],
                            'joinColumnFieldNames' => [
                                'category_id' => 'category_id',
                            ],
                            'targetToSourceKeyColumns' => [
                                'id' => 'category_id',
                            ],
                            'orphanRemoval' => false,
                        ],
                        'leads' => [
                            'fieldName' => 'leads',
                            'targetEntity' => 'Mautic\\LeadBundle\\Entity\\ListLead',
                            'indexBy' => 'id',
                            'mappedBy' => 'list',
                            'fetch' => 4,
                            'type' => 4,
                            'inversedBy' => null,
                            'isOwningSide' => false,
                            'sourceEntity' => 'Mautic\\LeadBundle\\Entity\\LeadList',
                            'cascade' => [],
                            'isCascadeRemove' => false,
                            'isCascadePersist' => false,
                            'isCascadeRefresh' => false,
                            'isCascadeMerge' => false,
                            'isCascadeDetach' => false,
                            'orphanRemoval' => false,
                        ],
                    ],
                ],
                'idGenerator' => [
                    $o[1],
                ],
                'changeTrackingPolicy' => [
                    2,
                ],
            ],
        ],
        $o[0],
        []
    );
},
49 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ClassMetadata')),
            clone ($p['Doctrine\\ORM\\Id\\BigIntegerIdentityGenerator'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Id\\BigIntegerIdentityGenerator')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'Mautic\\LeadBundle\\Entity\\Lead',
                ],
                'namespace' => [
                    'Mautic\\LeadBundle\\Entity',
                ],
                'rootEntityName' => [
                    'Mautic\\LeadBundle\\Entity\\Lead',
                ],
                'customRepositoryClassName' => [
                    'Mautic\\LeadBundle\\Entity\\LeadRepository',
                ],
                'identifier' => [
                    [
                        'id',
                    ],
                ],
                'generatorType' => [
                    4,
                ],
                'fieldMappings' => [
                    [
                        'isPublished' => [
                            'fieldName' => 'isPublished',
                            'type' => 'boolean',
                            'columnName' => 'is_published',
                            'declared' => 'Mautic\\CoreBundle\\Entity\\FormEntity',
                        ],
                        'dateAdded' => [
                            'fieldName' => 'dateAdded',
                            'type' => 'datetime',
                            'columnName' => 'date_added',
                            'nullable' => true,
                            'declared' => 'Mautic\\CoreBundle\\Entity\\FormEntity',
                        ],
                        'createdBy' => [
                            'fieldName' => 'createdBy',
                            'type' => 'integer',
                            'columnName' => 'created_by',
                            'nullable' => true,
                            'declared' => 'Mautic\\CoreBundle\\Entity\\FormEntity',
                        ],
                        'createdByUser' => [
                            'fieldName' => 'createdByUser',
                            'type' => 'string',
                            'length' => 191,
                            'columnName' => 'created_by_user',
                            'nullable' => true,
                            'declared' => 'Mautic\\CoreBundle\\Entity\\FormEntity',
                        ],
                        'dateModified' => [
                            'fieldName' => 'dateModified',
                            'type' => 'datetime',
                            'columnName' => 'date_modified',
                            'nullable' => true,
                            'declared' => 'Mautic\\CoreBundle\\Entity\\FormEntity',
                        ],
                        'modifiedBy' => [
                            'fieldName' => 'modifiedBy',
                            'type' => 'integer',
                            'columnName' => 'modified_by',
                            'nullable' => true,
                            'declared' => 'Mautic\\CoreBundle\\Entity\\FormEntity',
                        ],
                        'modifiedByUser' => [
                            'fieldName' => 'modifiedByUser',
                            'type' => 'string',
                            'length' => 191,
                            'columnName' => 'modified_by_user',
                            'nullable' => true,
                            'declared' => 'Mautic\\CoreBundle\\Entity\\FormEntity',
                        ],
                        'checkedOut' => [
                            'fieldName' => 'checkedOut',
                            'type' => 'datetime',
                            'columnName' => 'checked_out',
                            'nullable' => true,
                            'declared' => 'Mautic\\CoreBundle\\Entity\\FormEntity',
                        ],
                        'checkedOutBy' => [
                            'fieldName' => 'checkedOutBy',
                            'type' => 'integer',
                            'columnName' => 'checked_out_by',
                            'nullable' => true,
                            'declared' => 'Mautic\\CoreBundle\\Entity\\FormEntity',
                        ],
                        'checkedOutByUser' => [
                            'fieldName' => 'checkedOutByUser',
                            'type' => 'string',
                            'length' => 191,
                            'columnName' => 'checked_out_by_user',
                            'nullable' => true,
                            'declared' => 'Mautic\\CoreBundle\\Entity\\FormEntity',
                        ],
                        'id' => [
                            'fieldName' => 'id',
                            'columnName' => 'id',
                            'id' => true,
                            'nullable' => false,
                            'type' => 'bigint',
                            'options' => [
                                'unsigned' => true,
                            ],
                        ],
                        'points' => [
                            'fieldName' => 'points',
                            'type' => 'integer',
                            'columnName' => 'points',
                        ],
                        'lastActive' => [
                            'fieldName' => 'lastActive',
                            'type' => 'datetime',
                            'columnName' => 'last_active',
                            'nullable' => true,
                        ],
                        'internal' => [
                            'fieldName' => 'internal',
                            'type' => 'array',
                            'nullable' => true,
                            'columnName' => 'internal',
                        ],
                        'socialCache' => [
                            'fieldName' => 'socialCache',
                            'type' => 'array',
                            'columnName' => 'social_cache',
                            'nullable' => true,
                        ],
                        'dateIdentified' => [
                            'fieldName' => 'dateIdentified',
                            'type' => 'datetime',
                            'columnName' => 'date_identified',
                            'nullable' => true,
                        ],
                        'preferredProfileImage' => [
                            'fieldName' => 'preferredProfileImage',
                            'type' => 'string',
                            'length' => 191,
                            'columnName' => 'preferred_profile_image',
                            'nullable' => true,
                        ],
                        'title' => [
                            'fieldName' => 'title',
                            'type' => 'string',
                            'length' => 191,
                            'columnName' => 'title',
                            'nullable' => true,
                        ],
                        'firstname' => [
                            'fieldName' => 'firstname',
                            'type' => 'string',
                            'length' => 191,
                            'columnName' => 'firstname',
                            'nullable' => true,
                        ],
                        'lastname' => [
                            'fieldName' => 'lastname',
                            'type' => 'string',
                            'length' => 191,
                            'columnName' => 'lastname',
                            'nullable' => true,
                        ],
                        'company' => [
                            'fieldName' => 'company',
                            'type' => 'string',
                            'length' => 191,
                            'columnName' => 'company',
                            'nullable' => true,
                        ],
                        'position' => [
                            'fieldName' => 'position',
                            'type' => 'string',
                            'length' => 191,
                            'columnName' => 'position',
                            'nullable' => true,
                        ],
                        'email' => [
                            'fieldName' => 'email',
                            'type' => 'string',
                            'length' => 191,
                            'columnName' => 'email',
                            'nullable' => true,
                        ],
                        'phone' => [
                            'fieldName' => 'phone',
                            'type' => 'string',
                            'length' => 191,
                            'columnName' => 'phone',
                            'nullable' => true,
                        ],
                        'mobile' => [
                            'fieldName' => 'mobile',
                            'type' => 'string',
                            'length' => 191,
                            'columnName' => 'mobile',
                            'nullable' => true,
                        ],
                        'address1' => [
                            'fieldName' => 'address1',
                            'type' => 'string',
                            'length' => 191,
                            'columnName' => 'address1',
                            'nullable' => true,
                        ],
                        'address2' => [
                            'fieldName' => 'address2',
                            'type' => 'string',
                            'length' => 191,
                            'columnName' => 'address2',
                            'nullable' => true,
                        ],
                        'city' => [
                            'fieldName' => 'city',
                            'type' => 'string',
                            'length' => 191,
                            'columnName' => 'city',
                            'nullable' => true,
                        ],
                        'state' => [
                            'fieldName' => 'state',
                            'type' => 'string',
                            'length' => 191,
                            'columnName' => 'state',
                            'nullable' => true,
                        ],
                        'zipcode' => [
                            'fieldName' => 'zipcode',
                            'type' => 'string',
                            'length' => 191,
                            'columnName' => 'zipcode',
                            'nullable' => true,
                        ],
                        'timezone' => [
                            'fieldName' => 'timezone',
                            'type' => 'string',
                            'length' => 191,
                            'columnName' => 'timezone',
                            'nullable' => true,
                        ],
                        'country' => [
                            'fieldName' => 'country',
                            'type' => 'string',
                            'length' => 191,
                            'columnName' => 'country',
                            'nullable' => true,
                        ],
                    ],
                ],
                'fieldNames' => [
                    [
                        'is_published' => 'isPublished',
                        'date_added' => 'dateAdded',
                        'created_by' => 'createdBy',
                        'created_by_user' => 'createdByUser',
                        'date_modified' => 'dateModified',
                        'modified_by' => 'modifiedBy',
                        'modified_by_user' => 'modifiedByUser',
                        'checked_out' => 'checkedOut',
                        'checked_out_by' => 'checkedOutBy',
                        'checked_out_by_user' => 'checkedOutByUser',
                        'id' => 'id',
                        'points' => 'points',
                        'last_active' => 'lastActive',
                        'internal' => 'internal',
                        'social_cache' => 'socialCache',
                        'date_identified' => 'dateIdentified',
                        'preferred_profile_image' => 'preferredProfileImage',
                        'title' => 'title',
                        'firstname' => 'firstname',
                        'lastname' => 'lastname',
                        'company' => 'company',
                        'position' => 'position',
                        'email' => 'email',
                        'phone' => 'phone',
                        'mobile' => 'mobile',
                        'address1' => 'address1',
                        'address2' => 'address2',
                        'city' => 'city',
                        'state' => 'state',
                        'zipcode' => 'zipcode',
                        'timezone' => 'timezone',
                        'country' => 'country',
                    ],
                ],
                'columnNames' => [
                    [
                        'isPublished' => 'is_published',
                        'dateAdded' => 'date_added',
                        'createdBy' => 'created_by',
                        'createdByUser' => 'created_by_user',
                        'dateModified' => 'date_modified',
                        'modifiedBy' => 'modified_by',
                        'modifiedByUser' => 'modified_by_user',
                        'checkedOut' => 'checked_out',
                        'checkedOutBy' => 'checked_out_by',
                        'checkedOutByUser' => 'checked_out_by_user',
                        'id' => 'id',
                        'points' => 'points',
                        'lastActive' => 'last_active',
                        'internal' => 'internal',
                        'socialCache' => 'social_cache',
                        'dateIdentified' => 'date_identified',
                        'preferredProfileImage' => 'preferred_profile_image',
                        'title' => 'title',
                        'firstname' => 'firstname',
                        'lastname' => 'lastname',
                        'company' => 'company',
                        'position' => 'position',
                        'email' => 'email',
                        'phone' => 'phone',
                        'mobile' => 'mobile',
                        'address1' => 'address1',
                        'address2' => 'address2',
                        'city' => 'city',
                        'state' => 'state',
                        'zipcode' => 'zipcode',
                        'timezone' => 'timezone',
                        'country' => 'country',
                    ],
                ],
                'table' => [
                    [
                        'name' => 'leads',
                        'indexes' => [
                            'lead_date_added' => [
                                'columns' => [
                                    'date_added',
                                ],
                            ],
                            'date_identified' => [
                                'columns' => [
                                    'date_identified',
                                ],
                            ],
                        ],
                        'uniqueConstraints' => [],
                    ],
                ],
                'lifecycleCallbacks' => [
                    [
                        'preUpdate' => [
                            'checkDateIdentified',
                            'checkAttributionDate',
                        ],
                        'prePersist' => [
                            'checkDateIdentified',
                            'checkAttributionDate',
                            'checkDateAdded',
                        ],
                    ],
                ],
                'associationMappings' => [
                    [
                        'owner' => [
                            'fieldName' => 'owner',
                            'targetEntity' => 'Mautic\\UserBundle\\Entity\\User',
                            'fetch' => 2,
                            'joinColumns' => [
                                [
                                    'name' => 'owner_id',
                                    'referencedColumnName' => 'id',
                                    'nullable' => true,
                                    'unique' => false,
                                    'onDelete' => 'SET NULL',
                                    'columnDefinition' => null,
                                ],
                            ],
                            'type' => 2,
                            'mappedBy' => null,
                            'inversedBy' => null,
                            'isOwningSide' => true,
                            'sourceEntity' => 'Mautic\\LeadBundle\\Entity\\Lead',
                            'cascade' => [],
                            'isCascadeRemove' => false,
                            'isCascadePersist' => false,
                            'isCascadeRefresh' => false,
                            'isCascadeMerge' => false,
                            'isCascadeDetach' => false,
                            'sourceToTargetKeyColumns' => [
                                'owner_id' => 'id',
                            ],
                            'joinColumnFieldNames' => [
                                'owner_id' => 'owner_id',
                            ],
                            'targetToSourceKeyColumns' => [
                                'id' => 'owner_id',
                            ],
                            'orphanRemoval' => false,
                        ],
                        'pointsChangeLog' => [
                            'fieldName' => 'pointsChangeLog',
                            'targetEntity' => 'Mautic\\LeadBundle\\Entity\\PointsChangeLog',
                            'orphanRemoval' => true,
                            'orderBy' => [
                                'dateAdded' => 'DESC',
                            ],
                            'mappedBy' => 'lead',
                            'cascade' => [
                                'remove',
                                'persist',
                                'refresh',
                                'merge',
                                'detach',
                            ],
                            'fetch' => 4,
                            'type' => 4,
                            'inversedBy' => null,
                            'isOwningSide' => false,
                            'sourceEntity' => 'Mautic\\LeadBundle\\Entity\\Lead',
                            'isCascadeRemove' => true,
                            'isCascadePersist' => true,
                            'isCascadeRefresh' => true,
                            'isCascadeMerge' => true,
                            'isCascadeDetach' => true,
                        ],
                        'companyChangeLog' => [
                            'fieldName' => 'companyChangeLog',
                            'targetEntity' => 'Mautic\\LeadBundle\\Entity\\CompanyChangeLog',
                            'orphanRemoval' => true,
                            'orderBy' => [
                                'dateAdded' => 'DESC',
                            ],
                            'mappedBy' => 'lead',
                            'cascade' => [
                                'remove',
                                'persist',
                                'refresh',
                                'merge',
                                'detach',
                            ],
                            'fetch' => 4,
                            'type' => 4,
                            'inversedBy' => null,
                            'isOwningSide' => false,
                            'sourceEntity' => 'Mautic\\LeadBundle\\Entity\\Lead',
                            'isCascadeRemove' => true,
                            'isCascadePersist' => true,
                            'isCascadeRefresh' => true,
                            'isCascadeMerge' => true,
                            'isCascadeDetach' => true,
                        ],
                        'doNotContact' => [
                            'fieldName' => 'doNotContact',
                            'targetEntity' => 'Mautic\\LeadBundle\\Entity\\DoNotContact',
                            'orphanRemoval' => true,
                            'mappedBy' => 'lead',
                            'cascade' => [
                                'persist',
                                'detach',
                                'merge',
                            ],
                            'fetch' => 4,
                            'type' => 4,
                            'inversedBy' => null,
                            'isOwningSide' => false,
                            'sourceEntity' => 'Mautic\\LeadBundle\\Entity\\Lead',
                            'isCascadeRemove' => true,
                            'isCascadePersist' => true,
                            'isCascadeRefresh' => false,
                            'isCascadeMerge' => true,
                            'isCascadeDetach' => true,
                        ],
                        'ipAddresses' => [
                            'fieldName' => 'ipAddresses',
                            'targetEntity' => 'Mautic\\CoreBundle\\Entity\\IpAddress',
                            'indexBy' => 'ipAddress',
                            'cascade' => [
                                'detach',
                                'merge',
                                'persist',
                            ],
                            'joinTable' => [
                                'joinColumns' => [
                                    [
                                        'name' => 'lead_id',
                                        'referencedColumnName' => 'id',
                                        'nullable' => false,
                                        'unique' => false,
                                        'onDelete' => 'CASCADE',
                                        'columnDefinition' => null,
                                    ],
                                ],
                                'inverseJoinColumns' => [
                                    [
                                        'name' => 'ip_id',
                                        'referencedColumnName' => 'id',
                                        'nullable' => false,
                                        'unique' => false,
                                        'onDelete' => null,
                                        'columnDefinition' => null,
                                    ],
                                ],
                                'name' => 'lead_ips_xref',
                            ],
                            'type' => 8,
                            'mappedBy' => null,
                            'inversedBy' => null,
                            'isOwningSide' => true,
                            'sourceEntity' => 'Mautic\\LeadBundle\\Entity\\Lead',
                            'fetch' => 2,
                            'isCascadeRemove' => false,
                            'isCascadePersist' => true,
                            'isCascadeRefresh' => false,
                            'isCascadeMerge' => true,
                            'isCascadeDetach' => true,
                            'joinTableColumns' => [
                                'lead_id',
                                'ip_id',
                            ],
                            'isOnDeleteCascade' => true,
                            'relationToSourceKeyColumns' => [
                                'lead_id' => 'id',
                            ],
                            'relationToTargetKeyColumns' => [
                                'ip_id' => 'id',
                            ],
                            'orphanRemoval' => false,
                        ],
                        'pushIds' => [
                            'fieldName' => 'pushIds',
                            'targetEntity' => 'Mautic\\NotificationBundle\\Entity\\PushID',
                            'orphanRemoval' => true,
                            'mappedBy' => 'lead',
                            'cascade' => [
                                'remove',
                                'persist',
                                'refresh',
                                'merge',
                                'detach',
                            ],
                            'fetch' => 4,
                            'type' => 4,
                            'inversedBy' => null,
                            'isOwningSide' => false,
                            'sourceEntity' => 'Mautic\\LeadBundle\\Entity\\Lead',
                            'isCascadeRemove' => true,
                            'isCascadePersist' => true,
                            'isCascadeRefresh' => true,
                            'isCascadeMerge' => true,
                            'isCascadeDetach' => true,
                        ],
                        'eventLog' => [
                            'fieldName' => 'eventLog',
                            'targetEntity' => 'Mautic\\LeadBundle\\Entity\\LeadEventLog',
                            'mappedBy' => 'lead',
                            'cascade' => [
                                'persist',
                                'merge',
                                'detach',
                            ],
                            'fetch' => 4,
                            'type' => 4,
                            'inversedBy' => null,
                            'isOwningSide' => false,
                            'sourceEntity' => 'Mautic\\LeadBundle\\Entity\\Lead',
                            'isCascadeRemove' => false,
                            'isCascadePersist' => true,
                            'isCascadeRefresh' => false,
                            'isCascadeMerge' => true,
                            'isCascadeDetach' => true,
                            'orphanRemoval' => false,
                        ],
                        'notes' => [
                            'fieldName' => 'notes',
                            'targetEntity' => 'Mautic\\LeadBundle\\Entity\\LeadNote',
                            'orphanRemoval' => true,
                            'orderBy' => [
                                'dateAdded' => 'DESC',
                            ],
                            'mappedBy' => 'lead',
                            'cascade' => [
                                'detach',
                                'merge',
                            ],
                            'fetch' => 4,
                            'type' => 4,
                            'inversedBy' => null,
                            'isOwningSide' => false,
                            'sourceEntity' => 'Mautic\\LeadBundle\\Entity\\Lead',
                            'isCascadeRemove' => true,
                            'isCascadePersist' => false,
                            'isCascadeRefresh' => false,
                            'isCascadeMerge' => true,
                            'isCascadeDetach' => true,
                        ],
                        'tags' => [
                            'fieldName' => 'tags',
                            'targetEntity' => 'Mautic\\LeadBundle\\Entity\\Tag',
                            'orderBy' => [
                                'tag' => 'ASC',
                            ],
                            'indexBy' => 'tag',
                            'fetch' => 2,
                            'cascade' => [
                                'merge',
                                'persist',
                                'detach',
                            ],
                            'joinTable' => [
                                'joinColumns' => [
                                    [
                                        'name' => 'lead_id',
                                        'referencedColumnName' => 'id',
                                        'nullable' => false,
                                        'unique' => false,
                                        'onDelete' => 'CASCADE',
                                        'columnDefinition' => null,
                                    ],
                                ],
                                'inverseJoinColumns' => [
                                    [
                                        'name' => 'tag_id',
                                        'referencedColumnName' => 'id',
                                        'nullable' => false,
                                        'unique' => false,
                                        'onDelete' => null,
                                        'columnDefinition' => null,
                                    ],
                                ],
                                'name' => 'lead_tags_xref',
                            ],
                            'type' => 8,
                            'mappedBy' => null,
                            'inversedBy' => null,
                            'isOwningSide' => true,
                            'sourceEntity' => 'Mautic\\LeadBundle\\Entity\\Lead',
                            'isCascadeRemove' => false,
                            'isCascadePersist' => true,
                            'isCascadeRefresh' => false,
                            'isCascadeMerge' => true,
                            'isCascadeDetach' => true,
                            'joinTableColumns' => [
                                'lead_id',
                                'tag_id',
                            ],
                            'isOnDeleteCascade' => true,
                            'relationToSourceKeyColumns' => [
                                'lead_id' => 'id',
                            ],
                            'relationToTargetKeyColumns' => [
                                'tag_id' => 'id',
                            ],
                            'orphanRemoval' => false,
                        ],
                        'stage' => [
                            'fieldName' => 'stage',
                            'targetEntity' => 'Mautic\\StageBundle\\Entity\\Stage',
                            'cascade' => [
                                'persist',
                                'merge',
                                'detach',
                            ],
                            'joinColumns' => [
                                [
                                    'name' => 'stage_id',
                                    'referencedColumnName' => 'id',
                                    'nullable' => true,
                                    'unique' => false,
                                    'onDelete' => 'SET NULL',
                                    'columnDefinition' => null,
                                ],
                            ],
                            'type' => 2,
                            'mappedBy' => null,
                            'inversedBy' => null,
                            'isOwningSide' => true,
                            'sourceEntity' => 'Mautic\\LeadBundle\\Entity\\Lead',
                            'fetch' => 2,
                            'isCascadeRemove' => false,
                            'isCascadePersist' => true,
                            'isCascadeRefresh' => false,
                            'isCascadeMerge' => true,
                            'isCascadeDetach' => true,
                            'sourceToTargetKeyColumns' => [
                                'stage_id' => 'id',
                            ],
                            'joinColumnFieldNames' => [
                                'stage_id' => 'stage_id',
                            ],
                            'targetToSourceKeyColumns' => [
                                'id' => 'stage_id',
                            ],
                            'orphanRemoval' => false,
                        ],
                        'stageChangeLog' => [
                            'fieldName' => 'stageChangeLog',
                            'targetEntity' => 'Mautic\\LeadBundle\\Entity\\StagesChangeLog',
                            'orphanRemoval' => true,
                            'orderBy' => [
                                'dateAdded' => 'DESC',
                            ],
                            'mappedBy' => 'lead',
                            'cascade' => [
                                'remove',
                                'persist',
                                'refresh',
                                'merge',
                                'detach',
                            ],
                            'fetch' => 4,
                            'type' => 4,
                            'inversedBy' => null,
                            'isOwningSide' => false,
                            'sourceEntity' => 'Mautic\\LeadBundle\\Entity\\Lead',
                            'isCascadeRemove' => true,
                            'isCascadePersist' => true,
                            'isCascadeRefresh' => true,
                            'isCascadeMerge' => true,
                            'isCascadeDetach' => true,
                        ],
                        'utmtags' => [
                            'fieldName' => 'utmtags',
                            'targetEntity' => 'Mautic\\LeadBundle\\Entity\\UtmTag',
                            'orphanRemoval' => true,
                            'mappedBy' => 'lead',
                            'cascade' => [
                                'remove',
                                'persist',
                                'refresh',
                                'merge',
                                'detach',
                            ],
                            'fetch' => 4,
                            'type' => 4,
                            'inversedBy' => null,
                            'isOwningSide' => false,
                            'sourceEntity' => 'Mautic\\LeadBundle\\Entity\\Lead',
                            'isCascadeRemove' => true,
                            'isCascadePersist' => true,
                            'isCascadeRefresh' => true,
                            'isCascadeMerge' => true,
                            'isCascadeDetach' => true,
                        ],
                        'frequencyRules' => [
                            'fieldName' => 'frequencyRules',
                            'targetEntity' => 'Mautic\\LeadBundle\\Entity\\FrequencyRule',
                            'orphanRemoval' => true,
                            'indexBy' => 'channel',
                            'orderBy' => [
                                'dateAdded' => 'DESC',
                            ],
                            'mappedBy' => 'lead',
                            'cascade' => [
                                'remove',
                                'persist',
                                'refresh',
                                'merge',
                                'detach',
                            ],
                            'fetch' => 4,
                            'type' => 4,
                            'inversedBy' => null,
                            'isOwningSide' => false,
                            'sourceEntity' => 'Mautic\\LeadBundle\\Entity\\Lead',
                            'isCascadeRemove' => true,
                            'isCascadePersist' => true,
                            'isCascadeRefresh' => true,
                            'isCascadeMerge' => true,
                            'isCascadeDetach' => true,
                        ],
                    ],
                ],
                'idGenerator' => [
                    $o[1],
                ],
                'changeTrackingPolicy' => [
                    2,
                ],
            ],
        ],
        $o[0],
        []
    );
},
50 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ClassMetadata')),
            clone ($p['Doctrine\\ORM\\Id\\IdentityGenerator'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Id\\IdentityGenerator')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'Mautic\\LeadBundle\\Entity\\UtmTag',
                ],
                'namespace' => [
                    'Mautic\\LeadBundle\\Entity',
                ],
                'rootEntityName' => [
                    'Mautic\\LeadBundle\\Entity\\UtmTag',
                ],
                'customRepositoryClassName' => [
                    'Mautic\\LeadBundle\\Entity\\UtmTagRepository',
                ],
                'identifier' => [
                    [
                        'id',
                    ],
                ],
                'generatorType' => [
                    4,
                ],
                'fieldMappings' => [
                    [
                        'id' => [
                            'fieldName' => 'id',
                            'type' => 'integer',
                            'id' => true,
                            'options' => [
                                'unsigned' => true,
                            ],
                            'columnName' => 'id',
                        ],
                        'dateAdded' => [
                            'fieldName' => 'dateAdded',
                            'type' => 'datetime',
                            'columnName' => 'date_added',
                        ],
                        'query' => [
                            'fieldName' => 'query',
                            'type' => 'array',
                            'nullable' => true,
                            'columnName' => 'query',
                        ],
                        'referer' => [
                            'fieldName' => 'referer',
                            'type' => 'text',
                            'nullable' => true,
                            'columnName' => 'referer',
                        ],
                        'remoteHost' => [
                            'fieldName' => 'remoteHost',
                            'type' => 'string',
                            'length' => 191,
                            'nullable' => true,
                            'columnName' => 'remote_host',
                        ],
                        'url' => [
                            'fieldName' => 'url',
                            'type' => 'text',
                            'nullable' => true,
                            'columnName' => 'url',
                        ],
                        'userAgent' => [
                            'fieldName' => 'userAgent',
                            'type' => 'text',
                            'nullable' => true,
                            'columnName' => 'user_agent',
                        ],
                        'utmCampaign' => [
                            'fieldName' => 'utmCampaign',
                            'type' => 'string',
                            'length' => 191,
                            'nullable' => true,
                            'columnName' => 'utm_campaign',
                        ],
                        'utmContent' => [
                            'fieldName' => 'utmContent',
                            'type' => 'string',
                            'length' => 191,
                            'nullable' => true,
                            'columnName' => 'utm_content',
                        ],
                        'utmMedium' => [
                            'fieldName' => 'utmMedium',
                            'type' => 'string',
                            'length' => 191,
                            'nullable' => true,
                            'columnName' => 'utm_medium',
                        ],
                        'utmSource' => [
                            'fieldName' => 'utmSource',
                            'type' => 'string',
                            'length' => 191,
                            'nullable' => true,
                            'columnName' => 'utm_source',
                        ],
                        'utmTerm' => [
                            'fieldName' => 'utmTerm',
                            'type' => 'string',
                            'length' => 191,
                            'nullable' => true,
                            'columnName' => 'utm_term',
                        ],
                    ],
                ],
                'fieldNames' => [
                    [
                        'id' => 'id',
                        'date_added' => 'dateAdded',
                        'query' => 'query',
                        'referer' => 'referer',
                        'remote_host' => 'remoteHost',
                        'url' => 'url',
                        'user_agent' => 'userAgent',
                        'utm_campaign' => 'utmCampaign',
                        'utm_content' => 'utmContent',
                        'utm_medium' => 'utmMedium',
                        'utm_source' => 'utmSource',
                        'utm_term' => 'utmTerm',
                    ],
                ],
                'columnNames' => [
                    [
                        'id' => 'id',
                        'dateAdded' => 'date_added',
                        'query' => 'query',
                        'referer' => 'referer',
                        'remoteHost' => 'remote_host',
                        'url' => 'url',
                        'userAgent' => 'user_agent',
                        'utmCampaign' => 'utm_campaign',
                        'utmContent' => 'utm_content',
                        'utmMedium' => 'utm_medium',
                        'utmSource' => 'utm_source',
                        'utmTerm' => 'utm_term',
                    ],
                ],
                'table' => [
                    [
                        'name' => 'lead_utmtags',
                        'indexes' => [],
                        'uniqueConstraints' => [],
                    ],
                ],
                'associationMappings' => [
                    [
                        'lead' => [
                            'fieldName' => 'lead',
                            'targetEntity' => 'Mautic\\LeadBundle\\Entity\\Lead',
                            'inversedBy' => 'utmtags',
                            'joinColumns' => [
                                [
                                    'name' => 'lead_id',
                                    'referencedColumnName' => 'id',
                                    'nullable' => false,
                                    'unique' => false,
                                    'onDelete' => 'CASCADE',
                                    'columnDefinition' => null,
                                ],
                            ],
                            'type' => 2,
                            'mappedBy' => null,
                            'isOwningSide' => true,
                            'sourceEntity' => 'Mautic\\LeadBundle\\Entity\\UtmTag',
                            'fetch' => 2,
                            'cascade' => [],
                            'isCascadeRemove' => false,
                            'isCascadePersist' => false,
                            'isCascadeRefresh' => false,
                            'isCascadeMerge' => false,
                            'isCascadeDetach' => false,
                            'sourceToTargetKeyColumns' => [
                                'lead_id' => 'id',
                            ],
                            'joinColumnFieldNames' => [
                                'lead_id' => 'lead_id',
                            ],
                            'targetToSourceKeyColumns' => [
                                'id' => 'lead_id',
                            ],
                            'orphanRemoval' => false,
                        ],
                    ],
                ],
                'idGenerator' => [
                    $o[1],
                ],
                'changeTrackingPolicy' => [
                    2,
                ],
            ],
        ],
        $o[0],
        []
    );
},
51 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ClassMetadata')),
            clone ($p['Doctrine\\ORM\\Id\\BigIntegerIdentityGenerator'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Id\\BigIntegerIdentityGenerator')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'Mautic\\LeadBundle\\Entity\\PointsChangeLog',
                ],
                'namespace' => [
                    'Mautic\\LeadBundle\\Entity',
                ],
                'rootEntityName' => [
                    'Mautic\\LeadBundle\\Entity\\PointsChangeLog',
                ],
                'customRepositoryClassName' => [
                    'Mautic\\LeadBundle\\Entity\\PointsChangeLogRepository',
                ],
                'identifier' => [
                    [
                        'id',
                    ],
                ],
                'generatorType' => [
                    4,
                ],
                'fieldMappings' => [
                    [
                        'id' => [
                            'fieldName' => 'id',
                            'columnName' => 'id',
                            'id' => true,
                            'nullable' => false,
                            'type' => 'bigint',
                            'options' => [
                                'unsigned' => true,
                            ],
                        ],
                        'type' => [
                            'fieldName' => 'type',
                            'type' => 'text',
                            'length' => 50,
                            'columnName' => 'type',
                        ],
                        'eventName' => [
                            'fieldName' => 'eventName',
                            'type' => 'string',
                            'length' => 191,
                            'columnName' => 'event_name',
                        ],
                        'actionName' => [
                            'fieldName' => 'actionName',
                            'type' => 'string',
                            'length' => 191,
                            'columnName' => 'action_name',
                        ],
                        'delta' => [
                            'fieldName' => 'delta',
                            'type' => 'integer',
                            'columnName' => 'delta',
                        ],
                        'dateAdded' => [
                            'fieldName' => 'dateAdded',
                            'type' => 'datetime',
                            'columnName' => 'date_added',
                        ],
                    ],
                ],
                'fieldNames' => [
                    [
                        'id' => 'id',
                        'type' => 'type',
                        'event_name' => 'eventName',
                        'action_name' => 'actionName',
                        'delta' => 'delta',
                        'date_added' => 'dateAdded',
                    ],
                ],
                'columnNames' => [
                    [
                        'id' => 'id',
                        'type' => 'type',
                        'eventName' => 'event_name',
                        'actionName' => 'action_name',
                        'delta' => 'delta',
                        'dateAdded' => 'date_added',
                    ],
                ],
                'table' => [
                    [
                        'name' => 'lead_points_change_log',
                        'indexes' => [
                            'point_date_added' => [
                                'columns' => [
                                    'date_added',
                                ],
                            ],
                        ],
                        'uniqueConstraints' => [],
                    ],
                ],
                'associationMappings' => [
                    [
                        'lead' => [
                            'fieldName' => 'lead',
                            'targetEntity' => 'Mautic\\LeadBundle\\Entity\\Lead',
                            'inversedBy' => 'pointsChangeLog',
                            'joinColumns' => [
                                [
                                    'name' => 'lead_id',
                                    'referencedColumnName' => 'id',
                                    'nullable' => false,
                                    'unique' => false,
                                    'onDelete' => 'CASCADE',
                                    'columnDefinition' => null,
                                ],
                            ],
                            'type' => 2,
                            'mappedBy' => null,
                            'isOwningSide' => true,
                            'sourceEntity' => 'Mautic\\LeadBundle\\Entity\\PointsChangeLog',
                            'fetch' => 2,
                            'cascade' => [],
                            'isCascadeRemove' => false,
                            'isCascadePersist' => false,
                            'isCascadeRefresh' => false,
                            'isCascadeMerge' => false,
                            'isCascadeDetach' => false,
                            'sourceToTargetKeyColumns' => [
                                'lead_id' => 'id',
                            ],
                            'joinColumnFieldNames' => [
                                'lead_id' => 'lead_id',
                            ],
                            'targetToSourceKeyColumns' => [
                                'id' => 'lead_id',
                            ],
                            'orphanRemoval' => false,
                        ],
                        'ipAddress' => [
                            'fieldName' => 'ipAddress',
                            'targetEntity' => 'Mautic\\CoreBundle\\Entity\\IpAddress',
                            'cascade' => [
                                'persist',
                                'merge',
                                'detach',
                            ],
                            'joinColumns' => [
                                [
                                    'name' => 'ip_id',
                                    'referencedColumnName' => 'id',
                                    'nullable' => false,
                                    'unique' => false,
                                    'onDelete' => null,
                                    'columnDefinition' => null,
                                ],
                            ],
                            'type' => 2,
                            'mappedBy' => null,
                            'inversedBy' => null,
                            'isOwningSide' => true,
                            'sourceEntity' => 'Mautic\\LeadBundle\\Entity\\PointsChangeLog',
                            'fetch' => 2,
                            'isCascadeRemove' => false,
                            'isCascadePersist' => true,
                            'isCascadeRefresh' => false,
                            'isCascadeMerge' => true,
                            'isCascadeDetach' => true,
                            'sourceToTargetKeyColumns' => [
                                'ip_id' => 'id',
                            ],
                            'joinColumnFieldNames' => [
                                'ip_id' => 'ip_id',
                            ],
                            'targetToSourceKeyColumns' => [
                                'id' => 'ip_id',
                            ],
                            'orphanRemoval' => false,
                        ],
                    ],
                ],
                'idGenerator' => [
                    $o[1],
                ],
                'changeTrackingPolicy' => [
                    2,
                ],
            ],
        ],
        $o[0],
        []
    );
},
52 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ClassMetadata')),
            clone ($p['Doctrine\\ORM\\Id\\IdentityGenerator'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Id\\IdentityGenerator')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'Mautic\\LeadBundle\\Entity\\LeadCategory',
                ],
                'namespace' => [
                    'Mautic\\LeadBundle\\Entity',
                ],
                'rootEntityName' => [
                    'Mautic\\LeadBundle\\Entity\\LeadCategory',
                ],
                'customRepositoryClassName' => [
                    'Mautic\\LeadBundle\\Entity\\LeadCategoryRepository',
                ],
                'identifier' => [
                    [
                        'id',
                    ],
                ],
                'generatorType' => [
                    4,
                ],
                'fieldMappings' => [
                    [
                        'id' => [
                            'fieldName' => 'id',
                            'type' => 'integer',
                            'id' => true,
                            'options' => [
                                'unsigned' => true,
                            ],
                            'columnName' => 'id',
                        ],
                        'dateAdded' => [
                            'fieldName' => 'dateAdded',
                            'type' => 'datetime',
                            'columnName' => 'date_added',
                        ],
                        'manuallyRemoved' => [
                            'fieldName' => 'manuallyRemoved',
                            'type' => 'boolean',
                            'columnName' => 'manually_removed',
                        ],
                        'manuallyAdded' => [
                            'fieldName' => 'manuallyAdded',
                            'type' => 'boolean',
                            'columnName' => 'manually_added',
                        ],
                    ],
                ],
                'fieldNames' => [
                    [
                        'id' => 'id',
                        'date_added' => 'dateAdded',
                        'manually_removed' => 'manuallyRemoved',
                        'manually_added' => 'manuallyAdded',
                    ],
                ],
                'columnNames' => [
                    [
                        'id' => 'id',
                        'dateAdded' => 'date_added',
                        'manuallyRemoved' => 'manually_removed',
                        'manuallyAdded' => 'manually_added',
                    ],
                ],
                'table' => [
                    [
                        'name' => 'lead_categories',
                        'indexes' => [],
                        'uniqueConstraints' => [],
                    ],
                ],
                'associationMappings' => [
                    [
                        'category' => [
                            'fieldName' => 'category',
                            'targetEntity' => 'Mautic\\CategoryBundle\\Entity\\Category',
                            'joinColumns' => [
                                [
                                    'name' => 'category_id',
                                    'referencedColumnName' => 'id',
                                    'nullable' => false,
                                    'unique' => false,
                                    'onDelete' => 'CASCADE',
                                    'columnDefinition' => null,
                                ],
                            ],
                            'type' => 2,
                            'mappedBy' => null,
                            'inversedBy' => null,
                            'isOwningSide' => true,
                            'sourceEntity' => 'Mautic\\LeadBundle\\Entity\\LeadCategory',
                            'fetch' => 2,
                            'cascade' => [],
                            'isCascadeRemove' => false,
                            'isCascadePersist' => false,
                            'isCascadeRefresh' => false,
                            'isCascadeMerge' => false,
                            'isCascadeDetach' => false,
                            'sourceToTargetKeyColumns' => [
                                'category_id' => 'id',
                            ],
                            'joinColumnFieldNames' => [
                                'category_id' => 'category_id',
                            ],
                            'targetToSourceKeyColumns' => [
                                'id' => 'category_id',
                            ],
                            'orphanRemoval' => false,
                        ],
                        'lead' => [
                            'fieldName' => 'lead',
                            'targetEntity' => 'Mautic\\LeadBundle\\Entity\\Lead',
                            'joinColumns' => [
                                [
                                    'name' => 'lead_id',
                                    'referencedColumnName' => 'id',
                                    'nullable' => false,
                                    'unique' => false,
                                    'onDelete' => 'CASCADE',
                                    'columnDefinition' => null,
                                ],
                            ],
                            'type' => 2,
                            'mappedBy' => null,
                            'inversedBy' => null,
                            'isOwningSide' => true,
                            'sourceEntity' => 'Mautic\\LeadBundle\\Entity\\LeadCategory',
                            'fetch' => 2,
                            'cascade' => [],
                            'isCascadeRemove' => false,
                            'isCascadePersist' => false,
                            'isCascadeRefresh' => false,
                            'isCascadeMerge' => false,
                            'isCascadeDetach' => false,
                            'sourceToTargetKeyColumns' => [
                                'lead_id' => 'id',
                            ],
                            'joinColumnFieldNames' => [
                                'lead_id' => 'lead_id',
                            ],
                            'targetToSourceKeyColumns' => [
                                'id' => 'lead_id',
                            ],
                            'orphanRemoval' => false,
                        ],
                    ],
                ],
                'idGenerator' => [
                    $o[1],
                ],
                'changeTrackingPolicy' => [
                    2,
                ],
            ],
        ],
        $o[0],
        []
    );
},
53 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ClassMetadata')),
            clone ($p['Doctrine\\ORM\\Id\\IdentityGenerator'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Id\\IdentityGenerator')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'Mautic\\LeadBundle\\Entity\\LeadField',
                ],
                'namespace' => [
                    'Mautic\\LeadBundle\\Entity',
                ],
                'rootEntityName' => [
                    'Mautic\\LeadBundle\\Entity\\LeadField',
                ],
                'customRepositoryClassName' => [
                    'Mautic\\LeadBundle\\Entity\\LeadFieldRepository',
                ],
                'identifier' => [
                    [
                        'id',
                    ],
                ],
                'generatorType' => [
                    4,
                ],
                'fieldMappings' => [
                    [
                        'isPublished' => [
                            'fieldName' => 'isPublished',
                            'type' => 'boolean',
                            'columnName' => 'is_published',
                            'declared' => 'Mautic\\CoreBundle\\Entity\\FormEntity',
                        ],
                        'dateAdded' => [
                            'fieldName' => 'dateAdded',
                            'type' => 'datetime',
                            'columnName' => 'date_added',
                            'nullable' => true,
                            'declared' => 'Mautic\\CoreBundle\\Entity\\FormEntity',
                        ],
                        'createdBy' => [
                            'fieldName' => 'createdBy',
                            'type' => 'integer',
                            'columnName' => 'created_by',
                            'nullable' => true,
                            'declared' => 'Mautic\\CoreBundle\\Entity\\FormEntity',
                        ],
                        'createdByUser' => [
                            'fieldName' => 'createdByUser',
                            'type' => 'string',
                            'length' => 191,
                            'columnName' => 'created_by_user',
                            'nullable' => true,
                            'declared' => 'Mautic\\CoreBundle\\Entity\\FormEntity',
                        ],
                        'dateModified' => [
                            'fieldName' => 'dateModified',
                            'type' => 'datetime',
                            'columnName' => 'date_modified',
                            'nullable' => true,
                            'declared' => 'Mautic\\CoreBundle\\Entity\\FormEntity',
                        ],
                        'modifiedBy' => [
                            'fieldName' => 'modifiedBy',
                            'type' => 'integer',
                            'columnName' => 'modified_by',
                            'nullable' => true,
                            'declared' => 'Mautic\\CoreBundle\\Entity\\FormEntity',
                        ],
                        'modifiedByUser' => [
                            'fieldName' => 'modifiedByUser',
                            'type' => 'string',
                            'length' => 191,
                            'columnName' => 'modified_by_user',
                            'nullable' => true,
                            'declared' => 'Mautic\\CoreBundle\\Entity\\FormEntity',
                        ],
                        'checkedOut' => [
                            'fieldName' => 'checkedOut',
                            'type' => 'datetime',
                            'columnName' => 'checked_out',
                            'nullable' => true,
                            'declared' => 'Mautic\\CoreBundle\\Entity\\FormEntity',
                        ],
                        'checkedOutBy' => [
                            'fieldName' => 'checkedOutBy',
                            'type' => 'integer',
                            'columnName' => 'checked_out_by',
                            'nullable' => true,
                            'declared' => 'Mautic\\CoreBundle\\Entity\\FormEntity',
                        ],
                        'checkedOutByUser' => [
                            'fieldName' => 'checkedOutByUser',
                            'type' => 'string',
                            'length' => 191,
                            'columnName' => 'checked_out_by_user',
                            'nullable' => true,
                            'declared' => 'Mautic\\CoreBundle\\Entity\\FormEntity',
                        ],
                        'id' => [
                            'fieldName' => 'id',
                            'type' => 'integer',
                            'id' => true,
                            'options' => [
                                'unsigned' => true,
                            ],
                            'columnName' => 'id',
                        ],
                        'label' => [
                            'length' => 191,
                            'fieldName' => 'label',
                            'type' => 'string',
                            'columnName' => 'label',
                        ],
                        'alias' => [
                            'length' => 191,
                            'fieldName' => 'alias',
                            'type' => 'string',
                            'columnName' => 'alias',
                        ],
                        'type' => [
                            'fieldName' => 'type',
                            'type' => 'string',
                            'length' => 50,
                            'columnName' => 'type',
                        ],
                        'group' => [
                            'fieldName' => 'group',
                            'type' => 'string',
                            'length' => 191,
                            'columnName' => 'field_group',
                            'nullable' => true,
                        ],
                        'defaultValue' => [
                            'fieldName' => 'defaultValue',
                            'type' => 'string',
                            'length' => 191,
                            'columnName' => 'default_value',
                            'nullable' => true,
                        ],
                        'isRequired' => [
                            'fieldName' => 'isRequired',
                            'type' => 'boolean',
                            'columnName' => 'is_required',
                        ],
                        'isFixed' => [
                            'fieldName' => 'isFixed',
                            'type' => 'boolean',
                            'columnName' => 'is_fixed',
                        ],
                        'isVisible' => [
                            'fieldName' => 'isVisible',
                            'type' => 'boolean',
                            'columnName' => 'is_visible',
                        ],
                        'isShortVisible' => [
                            'fieldName' => 'isShortVisible',
                            'type' => 'boolean',
                            'columnName' => 'is_short_visible',
                        ],
                        'isListable' => [
                            'fieldName' => 'isListable',
                            'type' => 'boolean',
                            'columnName' => 'is_listable',
                        ],
                        'isPubliclyUpdatable' => [
                            'fieldName' => 'isPubliclyUpdatable',
                            'type' => 'boolean',
                            'columnName' => 'is_publicly_updatable',
                        ],
                        'isUniqueIdentifer' => [
                            'fieldName' => 'isUniqueIdentifer',
                            'type' => 'boolean',
                            'nullable' => true,
                            'columnName' => 'is_unique_identifer',
                        ],
                        'order' => [
                            'fieldName' => 'order',
                            'type' => 'integer',
                            'columnName' => 'field_order',
                            'nullable' => true,
                        ],
                        'object' => [
                            'fieldName' => 'object',
                            'type' => 'string',
                            'length' => 191,
                            'nullable' => true,
                            'columnName' => 'object',
                        ],
                        'properties' => [
                            'fieldName' => 'properties',
                            'type' => 'array',
                            'nullable' => true,
                            'columnName' => 'properties',
                        ],
                        'columnIsNotCreated' => [
                            'fieldName' => 'columnIsNotCreated',
                            'type' => 'boolean',
                            'columnName' => 'column_is_not_created',
                            'options' => [
                                'default' => false,
                            ],
                        ],
                        'originalIsPublishedValue' => [
                            'fieldName' => 'originalIsPublishedValue',
                            'type' => 'boolean',
                            'columnName' => 'original_is_published_value',
                            'options' => [
                                'default' => false,
                            ],
                        ],
                    ],
                ],
                'fieldNames' => [
                    [
                        'is_published' => 'isPublished',
                        'date_added' => 'dateAdded',
                        'created_by' => 'createdBy',
                        'created_by_user' => 'createdByUser',
                        'date_modified' => 'dateModified',
                        'modified_by' => 'modifiedBy',
                        'modified_by_user' => 'modifiedByUser',
                        'checked_out' => 'checkedOut',
                        'checked_out_by' => 'checkedOutBy',
                        'checked_out_by_user' => 'checkedOutByUser',
                        'id' => 'id',
                        'label' => 'label',
                        'alias' => 'alias',
                        'type' => 'type',
                        'field_group' => 'group',
                        'default_value' => 'defaultValue',
                        'is_required' => 'isRequired',
                        'is_fixed' => 'isFixed',
                        'is_visible' => 'isVisible',
                        'is_short_visible' => 'isShortVisible',
                        'is_listable' => 'isListable',
                        'is_publicly_updatable' => 'isPubliclyUpdatable',
                        'is_unique_identifer' => 'isUniqueIdentifer',
                        'field_order' => 'order',
                        'object' => 'object',
                        'properties' => 'properties',
                        'column_is_not_created' => 'columnIsNotCreated',
                        'original_is_published_value' => 'originalIsPublishedValue',
                    ],
                ],
                'columnNames' => [
                    [
                        'isPublished' => 'is_published',
                        'dateAdded' => 'date_added',
                        'createdBy' => 'created_by',
                        'createdByUser' => 'created_by_user',
                        'dateModified' => 'date_modified',
                        'modifiedBy' => 'modified_by',
                        'modifiedByUser' => 'modified_by_user',
                        'checkedOut' => 'checked_out',
                        'checkedOutBy' => 'checked_out_by',
                        'checkedOutByUser' => 'checked_out_by_user',
                        'id' => 'id',
                        'label' => 'label',
                        'alias' => 'alias',
                        'type' => 'type',
                        'group' => 'field_group',
                        'defaultValue' => 'default_value',
                        'isRequired' => 'is_required',
                        'isFixed' => 'is_fixed',
                        'isVisible' => 'is_visible',
                        'isShortVisible' => 'is_short_visible',
                        'isListable' => 'is_listable',
                        'isPubliclyUpdatable' => 'is_publicly_updatable',
                        'isUniqueIdentifer' => 'is_unique_identifer',
                        'order' => 'field_order',
                        'object' => 'object',
                        'properties' => 'properties',
                        'columnIsNotCreated' => 'column_is_not_created',
                        'originalIsPublishedValue' => 'original_is_published_value',
                    ],
                ],
                'table' => [
                    [
                        'name' => 'lead_fields',
                        'indexes' => [
                            'search_by_object' => [
                                'columns' => [
                                    'object',
                                ],
                            ],
                        ],
                        'uniqueConstraints' => [],
                    ],
                ],
                'lifecycleCallbacks' => [
                    [
                        'postLoad' => [
                            'identifierWorkaround',
                        ],
                    ],
                ],
                'idGenerator' => [
                    $o[1],
                ],
                'changeTrackingPolicy' => [
                    2,
                ],
            ],
        ],
        $o[0],
        []
    );
},
54 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ClassMetadata')),
            clone ($p['Doctrine\\ORM\\Id\\AssignedGenerator'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Id\\AssignedGenerator')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'Mautic\\LeadBundle\\Entity\\CompanyLead',
                ],
                'namespace' => [
                    'Mautic\\LeadBundle\\Entity',
                ],
                'rootEntityName' => [
                    'Mautic\\LeadBundle\\Entity\\CompanyLead',
                ],
                'customRepositoryClassName' => [
                    'Mautic\\LeadBundle\\Entity\\CompanyLeadRepository',
                ],
                'identifier' => [
                    [
                        'company',
                        'lead',
                    ],
                ],
                'fieldMappings' => [
                    [
                        'dateAdded' => [
                            'fieldName' => 'dateAdded',
                            'type' => 'datetime',
                            'columnName' => 'date_added',
                        ],
                        'primary' => [
                            'fieldName' => 'primary',
                            'type' => 'boolean',
                            'columnName' => 'is_primary',
                            'nullable' => true,
                        ],
                    ],
                ],
                'fieldNames' => [
                    [
                        'date_added' => 'dateAdded',
                        'is_primary' => 'primary',
                    ],
                ],
                'columnNames' => [
                    [
                        'dateAdded' => 'date_added',
                        'primary' => 'is_primary',
                    ],
                ],
                'table' => [
                    [
                        'name' => 'companies_leads',
                        'indexes' => [],
                        'uniqueConstraints' => [],
                    ],
                ],
                'associationMappings' => [
                    [
                        'company' => [
                            'fieldName' => 'company',
                            'targetEntity' => 'Mautic\\LeadBundle\\Entity\\Company',
                            'id' => true,
                            'joinColumns' => [
                                [
                                    'name' => 'company_id',
                                    'referencedColumnName' => 'id',
                                    'nullable' => false,
                                    'unique' => false,
                                    'onDelete' => 'CASCADE',
                                    'columnDefinition' => null,
                                ],
                            ],
                            'type' => 2,
                            'mappedBy' => null,
                            'inversedBy' => null,
                            'isOwningSide' => true,
                            'sourceEntity' => 'Mautic\\LeadBundle\\Entity\\CompanyLead',
                            'fetch' => 2,
                            'cascade' => [],
                            'isCascadeRemove' => false,
                            'isCascadePersist' => false,
                            'isCascadeRefresh' => false,
                            'isCascadeMerge' => false,
                            'isCascadeDetach' => false,
                            'sourceToTargetKeyColumns' => [
                                'company_id' => 'id',
                            ],
                            'joinColumnFieldNames' => [
                                'company_id' => 'company_id',
                            ],
                            'targetToSourceKeyColumns' => [
                                'id' => 'company_id',
                            ],
                            'orphanRemoval' => false,
                        ],
                        'lead' => [
                            'fieldName' => 'lead',
                            'targetEntity' => 'Mautic\\LeadBundle\\Entity\\Lead',
                            'id' => true,
                            'joinColumns' => [
                                [
                                    'name' => 'lead_id',
                                    'referencedColumnName' => 'id',
                                    'nullable' => false,
                                    'unique' => false,
                                    'onDelete' => 'CASCADE',
                                    'columnDefinition' => null,
                                ],
                            ],
                            'type' => 2,
                            'mappedBy' => null,
                            'inversedBy' => null,
                            'isOwningSide' => true,
                            'sourceEntity' => 'Mautic\\LeadBundle\\Entity\\CompanyLead',
                            'fetch' => 2,
                            'cascade' => [],
                            'isCascadeRemove' => false,
                            'isCascadePersist' => false,
                            'isCascadeRefresh' => false,
                            'isCascadeMerge' => false,
                            'isCascadeDetach' => false,
                            'sourceToTargetKeyColumns' => [
                                'lead_id' => 'id',
                            ],
                            'joinColumnFieldNames' => [
                                'lead_id' => 'lead_id',
                            ],
                            'targetToSourceKeyColumns' => [
                                'id' => 'lead_id',
                            ],
                            'orphanRemoval' => false,
                        ],
                    ],
                ],
                'isIdentifierComposite' => [
                    true,
                ],
                'containsForeignIdentifier' => [
                    true,
                ],
                'idGenerator' => [
                    $o[1],
                ],
                'changeTrackingPolicy' => [
                    2,
                ],
            ],
        ],
        $o[0],
        []
    );
},
55 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ClassMetadata')),
            clone ($p['Doctrine\\ORM\\Id\\BigIntegerIdentityGenerator'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Id\\BigIntegerIdentityGenerator')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'Mautic\\LeadBundle\\Entity\\LeadEventLog',
                ],
                'namespace' => [
                    'Mautic\\LeadBundle\\Entity',
                ],
                'rootEntityName' => [
                    'Mautic\\LeadBundle\\Entity\\LeadEventLog',
                ],
                'customRepositoryClassName' => [
                    'Mautic\\LeadBundle\\Entity\\LeadEventLogRepository',
                ],
                'identifier' => [
                    [
                        'id',
                    ],
                ],
                'generatorType' => [
                    4,
                ],
                'fieldMappings' => [
                    [
                        'id' => [
                            'fieldName' => 'id',
                            'columnName' => 'id',
                            'id' => true,
                            'nullable' => false,
                            'type' => 'bigint',
                            'options' => [
                                'unsigned' => true,
                            ],
                        ],
                        'userId' => [
                            'fieldName' => 'userId',
                            'type' => 'integer',
                            'nullable' => true,
                            'columnName' => 'user_id',
                        ],
                        'userName' => [
                            'fieldName' => 'userName',
                            'type' => 'string',
                            'length' => 191,
                            'nullable' => true,
                            'columnName' => 'user_name',
                        ],
                        'bundle' => [
                            'fieldName' => 'bundle',
                            'type' => 'string',
                            'length' => 191,
                            'nullable' => true,
                            'columnName' => 'bundle',
                        ],
                        'object' => [
                            'fieldName' => 'object',
                            'type' => 'string',
                            'length' => 191,
                            'nullable' => true,
                            'columnName' => 'object',
                        ],
                        'action' => [
                            'fieldName' => 'action',
                            'type' => 'string',
                            'length' => 191,
                            'nullable' => true,
                            'columnName' => 'action',
                        ],
                        'objectId' => [
                            'fieldName' => 'objectId',
                            'type' => 'integer',
                            'nullable' => true,
                            'columnName' => 'object_id',
                        ],
                        'dateAdded' => [
                            'fieldName' => 'dateAdded',
                            'type' => 'datetime',
                            'columnName' => 'date_added',
                        ],
                        'properties' => [
                            'fieldName' => 'properties',
                            'type' => 'json_array',
                            'nullable' => true,
                            'columnName' => 'properties',
                        ],
                    ],
                ],
                'fieldNames' => [
                    [
                        'id' => 'id',
                        'user_id' => 'userId',
                        'user_name' => 'userName',
                        'bundle' => 'bundle',
                        'object' => 'object',
                        'action' => 'action',
                        'object_id' => 'objectId',
                        'date_added' => 'dateAdded',
                        'properties' => 'properties',
                    ],
                ],
                'columnNames' => [
                    [
                        'id' => 'id',
                        'userId' => 'user_id',
                        'userName' => 'user_name',
                        'bundle' => 'bundle',
                        'object' => 'object',
                        'action' => 'action',
                        'objectId' => 'object_id',
                        'dateAdded' => 'date_added',
                        'properties' => 'properties',
                    ],
                ],
                'table' => [
                    [
                        'name' => 'lead_event_log',
                        'indexes' => [
                            'lead_id_index' => [
                                'columns' => [
                                    'lead_id',
                                ],
                            ],
                            'lead_object_index' => [
                                'columns' => [
                                    'object',
                                    'object_id',
                                ],
                            ],
                            'lead_timeline_index' => [
                                'columns' => [
                                    'bundle',
                                    'object',
                                    'action',
                                    'object_id',
                                ],
                            ],
                            'IDX_SEARCH' => [
                                'columns' => [
                                    'bundle',
                                    'object',
                                    'action',
                                    'object_id',
                                    'date_added',
                                ],
                            ],
                            'lead_timeline_action_index' => [
                                'columns' => [
                                    'action',
                                ],
                            ],
                            'lead_date_added_index' => [
                                'columns' => [
                                    'date_added',
                                ],
                            ],
                        ],
                        'uniqueConstraints' => [],
                    ],
                ],
                'associationMappings' => [
                    [
                        'lead' => [
                            'fieldName' => 'lead',
                            'targetEntity' => 'Mautic\\LeadBundle\\Entity\\Lead',
                            'inversedBy' => 'eventLog',
                            'joinColumns' => [
                                [
                                    'name' => 'lead_id',
                                    'referencedColumnName' => 'id',
                                    'nullable' => true,
                                    'unique' => false,
                                    'onDelete' => 'CASCADE',
                                    'columnDefinition' => null,
                                ],
                            ],
                            'type' => 2,
                            'mappedBy' => null,
                            'isOwningSide' => true,
                            'sourceEntity' => 'Mautic\\LeadBundle\\Entity\\LeadEventLog',
                            'fetch' => 2,
                            'cascade' => [],
                            'isCascadeRemove' => false,
                            'isCascadePersist' => false,
                            'isCascadeRefresh' => false,
                            'isCascadeMerge' => false,
                            'isCascadeDetach' => false,
                            'sourceToTargetKeyColumns' => [
                                'lead_id' => 'id',
                            ],
                            'joinColumnFieldNames' => [
                                'lead_id' => 'lead_id',
                            ],
                            'targetToSourceKeyColumns' => [
                                'id' => 'lead_id',
                            ],
                            'orphanRemoval' => false,
                        ],
                    ],
                ],
                'idGenerator' => [
                    $o[1],
                ],
                'changeTrackingPolicy' => [
                    2,
                ],
            ],
        ],
        $o[0],
        []
    );
},
56 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ClassMetadata')),
            clone ($p['Doctrine\\ORM\\Id\\IdentityGenerator'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Id\\IdentityGenerator')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'Mautic\\NotificationBundle\\Entity\\PushID',
                ],
                'namespace' => [
                    'Mautic\\NotificationBundle\\Entity',
                ],
                'rootEntityName' => [
                    'Mautic\\NotificationBundle\\Entity\\PushID',
                ],
                'customRepositoryClassName' => [
                    'Mautic\\NotificationBundle\\Entity\\PushIDRepository',
                ],
                'identifier' => [
                    [
                        'id',
                    ],
                ],
                'generatorType' => [
                    4,
                ],
                'fieldMappings' => [
                    [
                        'id' => [
                            'fieldName' => 'id',
                            'type' => 'integer',
                            'id' => true,
                            'columnName' => 'id',
                        ],
                        'pushID' => [
                            'fieldName' => 'pushID',
                            'type' => 'string',
                            'length' => 191,
                            'columnName' => 'push_id',
                            'nullable' => false,
                        ],
                        'enabled' => [
                            'fieldName' => 'enabled',
                            'type' => 'boolean',
                            'columnName' => 'enabled',
                        ],
                        'mobile' => [
                            'fieldName' => 'mobile',
                            'type' => 'boolean',
                            'columnName' => 'mobile',
                        ],
                    ],
                ],
                'fieldNames' => [
                    [
                        'id' => 'id',
                        'push_id' => 'pushID',
                        'enabled' => 'enabled',
                        'mobile' => 'mobile',
                    ],
                ],
                'columnNames' => [
                    [
                        'id' => 'id',
                        'pushID' => 'push_id',
                        'enabled' => 'enabled',
                        'mobile' => 'mobile',
                    ],
                ],
                'table' => [
                    [
                        'name' => 'push_ids',
                        'indexes' => [],
                        'uniqueConstraints' => [],
                    ],
                ],
                'associationMappings' => [
                    [
                        'lead' => [
                            'fieldName' => 'lead',
                            'targetEntity' => 'Mautic\\LeadBundle\\Entity\\Lead',
                            'inversedBy' => 'pushIds',
                            'joinColumns' => [
                                [
                                    'name' => 'lead_id',
                                    'referencedColumnName' => 'id',
                                    'nullable' => true,
                                    'unique' => false,
                                    'onDelete' => 'SET NULL',
                                    'columnDefinition' => null,
                                ],
                            ],
                            'type' => 2,
                            'mappedBy' => null,
                            'isOwningSide' => true,
                            'sourceEntity' => 'Mautic\\NotificationBundle\\Entity\\PushID',
                            'fetch' => 2,
                            'cascade' => [],
                            'isCascadeRemove' => false,
                            'isCascadePersist' => false,
                            'isCascadeRefresh' => false,
                            'isCascadeMerge' => false,
                            'isCascadeDetach' => false,
                            'sourceToTargetKeyColumns' => [
                                'lead_id' => 'id',
                            ],
                            'joinColumnFieldNames' => [
                                'lead_id' => 'lead_id',
                            ],
                            'targetToSourceKeyColumns' => [
                                'id' => 'lead_id',
                            ],
                            'orphanRemoval' => false,
                        ],
                    ],
                ],
                'idGenerator' => [
                    $o[1],
                ],
                'changeTrackingPolicy' => [
                    2,
                ],
            ],
        ],
        $o[0],
        []
    );
},
57 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ClassMetadata')),
            clone ($p['Doctrine\\ORM\\Id\\IdentityGenerator'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Id\\IdentityGenerator')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'Mautic\\NotificationBundle\\Entity\\Notification',
                ],
                'namespace' => [
                    'Mautic\\NotificationBundle\\Entity',
                ],
                'rootEntityName' => [
                    'Mautic\\NotificationBundle\\Entity\\Notification',
                ],
                'customRepositoryClassName' => [
                    'Mautic\\NotificationBundle\\Entity\\NotificationRepository',
                ],
                'identifier' => [
                    [
                        'id',
                    ],
                ],
                'generatorType' => [
                    4,
                ],
                'fieldMappings' => [
                    [
                        'isPublished' => [
                            'fieldName' => 'isPublished',
                            'type' => 'boolean',
                            'columnName' => 'is_published',
                            'declared' => 'Mautic\\CoreBundle\\Entity\\FormEntity',
                        ],
                        'dateAdded' => [
                            'fieldName' => 'dateAdded',
                            'type' => 'datetime',
                            'columnName' => 'date_added',
                            'nullable' => true,
                            'declared' => 'Mautic\\CoreBundle\\Entity\\FormEntity',
                        ],
                        'createdBy' => [
                            'fieldName' => 'createdBy',
                            'type' => 'integer',
                            'columnName' => 'created_by',
                            'nullable' => true,
                            'declared' => 'Mautic\\CoreBundle\\Entity\\FormEntity',
                        ],
                        'createdByUser' => [
                            'fieldName' => 'createdByUser',
                            'type' => 'string',
                            'length' => 191,
                            'columnName' => 'created_by_user',
                            'nullable' => true,
                            'declared' => 'Mautic\\CoreBundle\\Entity\\FormEntity',
                        ],
                        'dateModified' => [
                            'fieldName' => 'dateModified',
                            'type' => 'datetime',
                            'columnName' => 'date_modified',
                            'nullable' => true,
                            'declared' => 'Mautic\\CoreBundle\\Entity\\FormEntity',
                        ],
                        'modifiedBy' => [
                            'fieldName' => 'modifiedBy',
                            'type' => 'integer',
                            'columnName' => 'modified_by',
                            'nullable' => true,
                            'declared' => 'Mautic\\CoreBundle\\Entity\\FormEntity',
                        ],
                        'modifiedByUser' => [
                            'fieldName' => 'modifiedByUser',
                            'type' => 'string',
                            'length' => 191,
                            'columnName' => 'modified_by_user',
                            'nullable' => true,
                            'declared' => 'Mautic\\CoreBundle\\Entity\\FormEntity',
                        ],
                        'checkedOut' => [
                            'fieldName' => 'checkedOut',
                            'type' => 'datetime',
                            'columnName' => 'checked_out',
                            'nullable' => true,
                            'declared' => 'Mautic\\CoreBundle\\Entity\\FormEntity',
                        ],
                        'checkedOutBy' => [
                            'fieldName' => 'checkedOutBy',
                            'type' => 'integer',
                            'columnName' => 'checked_out_by',
                            'nullable' => true,
                            'declared' => 'Mautic\\CoreBundle\\Entity\\FormEntity',
                        ],
                        'checkedOutByUser' => [
                            'fieldName' => 'checkedOutByUser',
                            'type' => 'string',
                            'length' => 191,
                            'columnName' => 'checked_out_by_user',
                            'nullable' => true,
                            'declared' => 'Mautic\\CoreBundle\\Entity\\FormEntity',
                        ],
                        'id' => [
                            'fieldName' => 'id',
                            'type' => 'integer',
                            'id' => true,
                            'options' => [
                                'unsigned' => true,
                            ],
                            'columnName' => 'id',
                        ],
                        'name' => [
                            'fieldName' => 'name',
                            'type' => 'string',
                            'length' => 191,
                            'columnName' => 'name',
                        ],
                        'description' => [
                            'fieldName' => 'description',
                            'type' => 'text',
                            'nullable' => true,
                            'columnName' => 'description',
                        ],
                        'language' => [
                            'fieldName' => 'language',
                            'type' => 'string',
                            'length' => 191,
                            'columnName' => 'lang',
                        ],
                        'url' => [
                            'fieldName' => 'url',
                            'type' => 'text',
                            'nullable' => true,
                            'columnName' => 'url',
                        ],
                        'heading' => [
                            'fieldName' => 'heading',
                            'type' => 'text',
                            'columnName' => 'heading',
                        ],
                        'message' => [
                            'fieldName' => 'message',
                            'type' => 'text',
                            'columnName' => 'message',
                        ],
                        'button' => [
                            'fieldName' => 'button',
                            'type' => 'text',
                            'nullable' => true,
                            'columnName' => 'button',
                        ],
                        'utmTags' => [
                            'fieldName' => 'utmTags',
                            'type' => 'array',
                            'columnName' => 'utm_tags',
                            'nullable' => true,
                        ],
                        'notificationType' => [
                            'fieldName' => 'notificationType',
                            'type' => 'text',
                            'columnName' => 'notification_type',
                            'nullable' => true,
                        ],
                        'publishUp' => [
                            'fieldName' => 'publishUp',
                            'type' => 'datetime',
                            'columnName' => 'publish_up',
                            'nullable' => true,
                        ],
                        'publishDown' => [
                            'fieldName' => 'publishDown',
                            'type' => 'datetime',
                            'columnName' => 'publish_down',
                            'nullable' => true,
                        ],
                        'readCount' => [
                            'fieldName' => 'readCount',
                            'type' => 'integer',
                            'columnName' => 'read_count',
                        ],
                        'sentCount' => [
                            'fieldName' => 'sentCount',
                            'type' => 'integer',
                            'columnName' => 'sent_count',
                        ],
                        'mobile' => [
                            'fieldName' => 'mobile',
                            'type' => 'boolean',
                            'columnName' => 'mobile',
                        ],
                        'mobileSettings' => [
                            'fieldName' => 'mobileSettings',
                            'type' => 'array',
                            'columnName' => 'mobileSettings',
                        ],
                    ],
                ],
                'fieldNames' => [
                    [
                        'is_published' => 'isPublished',
                        'date_added' => 'dateAdded',
                        'created_by' => 'createdBy',
                        'created_by_user' => 'createdByUser',
                        'date_modified' => 'dateModified',
                        'modified_by' => 'modifiedBy',
                        'modified_by_user' => 'modifiedByUser',
                        'checked_out' => 'checkedOut',
                        'checked_out_by' => 'checkedOutBy',
                        'checked_out_by_user' => 'checkedOutByUser',
                        'id' => 'id',
                        'name' => 'name',
                        'description' => 'description',
                        'lang' => 'language',
                        'url' => 'url',
                        'heading' => 'heading',
                        'message' => 'message',
                        'button' => 'button',
                        'utm_tags' => 'utmTags',
                        'notification_type' => 'notificationType',
                        'publish_up' => 'publishUp',
                        'publish_down' => 'publishDown',
                        'read_count' => 'readCount',
                        'sent_count' => 'sentCount',
                        'mobile' => 'mobile',
                        'mobileSettings' => 'mobileSettings',
                    ],
                ],
                'columnNames' => [
                    [
                        'isPublished' => 'is_published',
                        'dateAdded' => 'date_added',
                        'createdBy' => 'created_by',
                        'createdByUser' => 'created_by_user',
                        'dateModified' => 'date_modified',
                        'modifiedBy' => 'modified_by',
                        'modifiedByUser' => 'modified_by_user',
                        'checkedOut' => 'checked_out',
                        'checkedOutBy' => 'checked_out_by',
                        'checkedOutByUser' => 'checked_out_by_user',
                        'id' => 'id',
                        'name' => 'name',
                        'description' => 'description',
                        'language' => 'lang',
                        'url' => 'url',
                        'heading' => 'heading',
                        'message' => 'message',
                        'button' => 'button',
                        'utmTags' => 'utm_tags',
                        'notificationType' => 'notification_type',
                        'publishUp' => 'publish_up',
                        'publishDown' => 'publish_down',
                        'readCount' => 'read_count',
                        'sentCount' => 'sent_count',
                        'mobile' => 'mobile',
                        'mobileSettings' => 'mobileSettings',
                    ],
                ],
                'table' => [
                    [
                        'name' => 'push_notifications',
                        'indexes' => [],
                        'uniqueConstraints' => [],
                    ],
                ],
                'associationMappings' => [
                    [
                        'category' => [
                            'fieldName' => 'category',
                            'targetEntity' => 'Mautic\\CategoryBundle\\Entity\\Category',
                            'cascade' => [
                                'merge',
                                'detach',
                            ],
                            'joinColumns' => [
                                [
                                    'name' => 'category_id',
                                    'referencedColumnName' => 'id',
                                    'nullable' => true,
                                    'unique' => false,
                                    'onDelete' => 'SET NULL',
                                    'columnDefinition' => null,
                                ],
                            ],
                            'type' => 2,
                            'mappedBy' => null,
                            'inversedBy' => null,
                            'isOwningSide' => true,
                            'sourceEntity' => 'Mautic\\NotificationBundle\\Entity\\Notification',
                            'fetch' => 2,
                            'isCascadeRemove' => false,
                            'isCascadePersist' => false,
                            'isCascadeRefresh' => false,
                            'isCascadeMerge' => true,
                            'isCascadeDetach' => true,
                            'sourceToTargetKeyColumns' => [
                                'category_id' => 'id',
                            ],
                            'joinColumnFieldNames' => [
                                'category_id' => 'category_id',
                            ],
                            'targetToSourceKeyColumns' => [
                                'id' => 'category_id',
                            ],
                            'orphanRemoval' => false,
                        ],
                        'lists' => [
                            'fieldName' => 'lists',
                            'targetEntity' => 'Mautic\\LeadBundle\\Entity\\LeadList',
                            'indexBy' => 'id',
                            'fetch' => 4,
                            'joinTable' => [
                                'joinColumns' => [
                                    [
                                        'name' => 'notification_id',
                                        'referencedColumnName' => 'id',
                                        'nullable' => false,
                                        'unique' => false,
                                        'onDelete' => 'CASCADE',
                                        'columnDefinition' => null,
                                    ],
                                ],
                                'inverseJoinColumns' => [
                                    [
                                        'name' => 'leadlist_id',
                                        'referencedColumnName' => 'id',
                                        'nullable' => false,
                                        'unique' => false,
                                        'onDelete' => 'CASCADE',
                                        'columnDefinition' => null,
                                    ],
                                ],
                                'name' => 'push_notification_list_xref',
                            ],
                            'type' => 8,
                            'mappedBy' => null,
                            'inversedBy' => null,
                            'isOwningSide' => true,
                            'sourceEntity' => 'Mautic\\NotificationBundle\\Entity\\Notification',
                            'cascade' => [],
                            'isCascadeRemove' => false,
                            'isCascadePersist' => false,
                            'isCascadeRefresh' => false,
                            'isCascadeMerge' => false,
                            'isCascadeDetach' => false,
                            'joinTableColumns' => [
                                'notification_id',
                                'leadlist_id',
                            ],
                            'isOnDeleteCascade' => true,
                            'relationToSourceKeyColumns' => [
                                'notification_id' => 'id',
                            ],
                            'relationToTargetKeyColumns' => [
                                'leadlist_id' => 'id',
                            ],
                            'orphanRemoval' => false,
                        ],
                        'stats' => [
                            'fieldName' => 'stats',
                            'targetEntity' => 'Mautic\\NotificationBundle\\Entity\\Stat',
                            'indexBy' => 'id',
                            'mappedBy' => 'notification',
                            'cascade' => [
                                'persist',
                            ],
                            'fetch' => 4,
                            'type' => 4,
                            'inversedBy' => null,
                            'isOwningSide' => false,
                            'sourceEntity' => 'Mautic\\NotificationBundle\\Entity\\Notification',
                            'isCascadeRemove' => false,
                            'isCascadePersist' => true,
                            'isCascadeRefresh' => false,
                            'isCascadeMerge' => false,
                            'isCascadeDetach' => false,
                            'orphanRemoval' => false,
                        ],
                    ],
                ],
                'idGenerator' => [
                    $o[1],
                ],
                'changeTrackingPolicy' => [
                    2,
                ],
            ],
        ],
        $o[0],
        []
    );
},
58 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ClassMetadata')),
            clone ($p['Doctrine\\ORM\\Id\\BigIntegerIdentityGenerator'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Id\\BigIntegerIdentityGenerator')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'Mautic\\NotificationBundle\\Entity\\Stat',
                ],
                'namespace' => [
                    'Mautic\\NotificationBundle\\Entity',
                ],
                'rootEntityName' => [
                    'Mautic\\NotificationBundle\\Entity\\Stat',
                ],
                'customRepositoryClassName' => [
                    'Mautic\\NotificationBundle\\Entity\\StatRepository',
                ],
                'identifier' => [
                    [
                        'id',
                    ],
                ],
                'generatorType' => [
                    4,
                ],
                'fieldMappings' => [
                    [
                        'id' => [
                            'fieldName' => 'id',
                            'columnName' => 'id',
                            'id' => true,
                            'nullable' => false,
                            'type' => 'bigint',
                            'options' => [
                                'unsigned' => true,
                            ],
                        ],
                        'dateSent' => [
                            'fieldName' => 'dateSent',
                            'type' => 'datetime',
                            'columnName' => 'date_sent',
                        ],
                        'dateRead' => [
                            'fieldName' => 'dateRead',
                            'type' => 'datetime',
                            'columnName' => 'date_read',
                            'nullable' => true,
                        ],
                        'isClicked' => [
                            'fieldName' => 'isClicked',
                            'type' => 'boolean',
                            'columnName' => 'is_clicked',
                        ],
                        'dateClicked' => [
                            'fieldName' => 'dateClicked',
                            'type' => 'datetime',
                            'columnName' => 'date_clicked',
                            'nullable' => true,
                        ],
                        'trackingHash' => [
                            'fieldName' => 'trackingHash',
                            'type' => 'string',
                            'length' => 191,
                            'columnName' => 'tracking_hash',
                            'nullable' => true,
                        ],
                        'retryCount' => [
                            'fieldName' => 'retryCount',
                            'type' => 'integer',
                            'columnName' => 'retry_count',
                            'nullable' => true,
                        ],
                        'source' => [
                            'fieldName' => 'source',
                            'type' => 'string',
                            'length' => 191,
                            'nullable' => true,
                            'columnName' => 'source',
                        ],
                        'sourceId' => [
                            'fieldName' => 'sourceId',
                            'type' => 'integer',
                            'columnName' => 'source_id',
                            'nullable' => true,
                        ],
                        'tokens' => [
                            'fieldName' => 'tokens',
                            'type' => 'array',
                            'nullable' => true,
                            'columnName' => 'tokens',
                        ],
                        'clickCount' => [
                            'fieldName' => 'clickCount',
                            'type' => 'integer',
                            'nullable' => true,
                            'columnName' => 'click_count',
                        ],
                        'lastClicked' => [
                            'fieldName' => 'lastClicked',
                            'type' => 'datetime',
                            'nullable' => true,
                            'columnName' => 'last_clicked',
                        ],
                        'clickDetails' => [
                            'fieldName' => 'clickDetails',
                            'type' => 'array',
                            'nullable' => true,
                            'columnName' => 'click_details',
                        ],
                    ],
                ],
                'fieldNames' => [
                    [
                        'id' => 'id',
                        'date_sent' => 'dateSent',
                        'date_read' => 'dateRead',
                        'is_clicked' => 'isClicked',
                        'date_clicked' => 'dateClicked',
                        'tracking_hash' => 'trackingHash',
                        'retry_count' => 'retryCount',
                        'source' => 'source',
                        'source_id' => 'sourceId',
                        'tokens' => 'tokens',
                        'click_count' => 'clickCount',
                        'last_clicked' => 'lastClicked',
                        'click_details' => 'clickDetails',
                    ],
                ],
                'columnNames' => [
                    [
                        'id' => 'id',
                        'dateSent' => 'date_sent',
                        'dateRead' => 'date_read',
                        'isClicked' => 'is_clicked',
                        'dateClicked' => 'date_clicked',
                        'trackingHash' => 'tracking_hash',
                        'retryCount' => 'retry_count',
                        'source' => 'source',
                        'sourceId' => 'source_id',
                        'tokens' => 'tokens',
                        'clickCount' => 'click_count',
                        'lastClicked' => 'last_clicked',
                        'clickDetails' => 'click_details',
                    ],
                ],
                'table' => [
                    [
                        'name' => 'push_notification_stats',
                        'indexes' => [
                            'stat_notification_search' => [
                                'columns' => [
                                    'notification_id',
                                    'lead_id',
                                ],
                            ],
                            'stat_notification_clicked_search' => [
                                'columns' => [
                                    'is_clicked',
                                ],
                            ],
                            'stat_notification_hash_search' => [
                                'columns' => [
                                    'tracking_hash',
                                ],
                            ],
                            'stat_notification_source_search' => [
                                'columns' => [
                                    'source',
                                    'source_id',
                                ],
                            ],
                        ],
                        'uniqueConstraints' => [],
                    ],
                ],
                'associationMappings' => [
                    [
                        'notification' => [
                            'fieldName' => 'notification',
                            'targetEntity' => 'Mautic\\NotificationBundle\\Entity\\Notification',
                            'inversedBy' => 'stats',
                            'joinColumns' => [
                                [
                                    'name' => 'notification_id',
                                    'referencedColumnName' => 'id',
                                    'nullable' => true,
                                    'unique' => false,
                                    'onDelete' => 'SET NULL',
                                    'columnDefinition' => null,
                                ],
                            ],
                            'type' => 2,
                            'mappedBy' => null,
                            'isOwningSide' => true,
                            'sourceEntity' => 'Mautic\\NotificationBundle\\Entity\\Stat',
                            'fetch' => 2,
                            'cascade' => [],
                            'isCascadeRemove' => false,
                            'isCascadePersist' => false,
                            'isCascadeRefresh' => false,
                            'isCascadeMerge' => false,
                            'isCascadeDetach' => false,
                            'sourceToTargetKeyColumns' => [
                                'notification_id' => 'id',
                            ],
                            'joinColumnFieldNames' => [
                                'notification_id' => 'notification_id',
                            ],
                            'targetToSourceKeyColumns' => [
                                'id' => 'notification_id',
                            ],
                            'orphanRemoval' => false,
                        ],
                        'lead' => [
                            'fieldName' => 'lead',
                            'targetEntity' => 'Mautic\\LeadBundle\\Entity\\Lead',
                            'joinColumns' => [
                                [
                                    'name' => 'lead_id',
                                    'referencedColumnName' => 'id',
                                    'nullable' => true,
                                    'unique' => false,
                                    'onDelete' => 'SET NULL',
                                    'columnDefinition' => null,
                                ],
                            ],
                            'type' => 2,
                            'mappedBy' => null,
                            'inversedBy' => null,
                            'isOwningSide' => true,
                            'sourceEntity' => 'Mautic\\NotificationBundle\\Entity\\Stat',
                            'fetch' => 2,
                            'cascade' => [],
                            'isCascadeRemove' => false,
                            'isCascadePersist' => false,
                            'isCascadeRefresh' => false,
                            'isCascadeMerge' => false,
                            'isCascadeDetach' => false,
                            'sourceToTargetKeyColumns' => [
                                'lead_id' => 'id',
                            ],
                            'joinColumnFieldNames' => [
                                'lead_id' => 'lead_id',
                            ],
                            'targetToSourceKeyColumns' => [
                                'id' => 'lead_id',
                            ],
                            'orphanRemoval' => false,
                        ],
                        'list' => [
                            'fieldName' => 'list',
                            'targetEntity' => 'Mautic\\LeadBundle\\Entity\\LeadList',
                            'joinColumns' => [
                                [
                                    'name' => 'list_id',
                                    'referencedColumnName' => 'id',
                                    'nullable' => true,
                                    'unique' => false,
                                    'onDelete' => 'SET NULL',
                                    'columnDefinition' => null,
                                ],
                            ],
                            'type' => 2,
                            'mappedBy' => null,
                            'inversedBy' => null,
                            'isOwningSide' => true,
                            'sourceEntity' => 'Mautic\\NotificationBundle\\Entity\\Stat',
                            'fetch' => 2,
                            'cascade' => [],
                            'isCascadeRemove' => false,
                            'isCascadePersist' => false,
                            'isCascadeRefresh' => false,
                            'isCascadeMerge' => false,
                            'isCascadeDetach' => false,
                            'sourceToTargetKeyColumns' => [
                                'list_id' => 'id',
                            ],
                            'joinColumnFieldNames' => [
                                'list_id' => 'list_id',
                            ],
                            'targetToSourceKeyColumns' => [
                                'id' => 'list_id',
                            ],
                            'orphanRemoval' => false,
                        ],
                        'ipAddress' => [
                            'fieldName' => 'ipAddress',
                            'targetEntity' => 'Mautic\\CoreBundle\\Entity\\IpAddress',
                            'cascade' => [
                                'persist',
                                'merge',
                                'detach',
                            ],
                            'joinColumns' => [
                                [
                                    'name' => 'ip_id',
                                    'referencedColumnName' => 'id',
                                    'nullable' => true,
                                    'unique' => false,
                                    'onDelete' => null,
                                    'columnDefinition' => null,
                                ],
                            ],
                            'type' => 2,
                            'mappedBy' => null,
                            'inversedBy' => null,
                            'isOwningSide' => true,
                            'sourceEntity' => 'Mautic\\NotificationBundle\\Entity\\Stat',
                            'fetch' => 2,
                            'isCascadeRemove' => false,
                            'isCascadePersist' => true,
                            'isCascadeRefresh' => false,
                            'isCascadeMerge' => true,
                            'isCascadeDetach' => true,
                            'sourceToTargetKeyColumns' => [
                                'ip_id' => 'id',
                            ],
                            'joinColumnFieldNames' => [
                                'ip_id' => 'ip_id',
                            ],
                            'targetToSourceKeyColumns' => [
                                'id' => 'ip_id',
                            ],
                            'orphanRemoval' => false,
                        ],
                    ],
                ],
                'idGenerator' => [
                    $o[1],
                ],
                'changeTrackingPolicy' => [
                    2,
                ],
            ],
        ],
        $o[0],
        []
    );
},
59 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ClassMetadata')),
            clone ($p['Doctrine\\ORM\\Id\\AssignedGenerator'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Id\\AssignedGenerator')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'Mautic\\PageBundle\\Entity\\Trackable',
                ],
                'namespace' => [
                    'Mautic\\PageBundle\\Entity',
                ],
                'rootEntityName' => [
                    'Mautic\\PageBundle\\Entity\\Trackable',
                ],
                'customRepositoryClassName' => [
                    'Mautic\\PageBundle\\Entity\\TrackableRepository',
                ],
                'identifier' => [
                    [
                        'redirect',
                        'channelId',
                    ],
                ],
                'fieldMappings' => [
                    [
                        'channelId' => [
                            'fieldName' => 'channelId',
                            'type' => 'integer',
                            'columnName' => 'channel_id',
                            'id' => true,
                        ],
                        'channel' => [
                            'length' => 191,
                            'fieldName' => 'channel',
                            'type' => 'string',
                            'columnName' => 'channel',
                        ],
                        'hits' => [
                            'fieldName' => 'hits',
                            'type' => 'integer',
                            'columnName' => 'hits',
                        ],
                        'uniqueHits' => [
                            'fieldName' => 'uniqueHits',
                            'type' => 'integer',
                            'columnName' => 'unique_hits',
                        ],
                    ],
                ],
                'fieldNames' => [
                    [
                        'channel_id' => 'channelId',
                        'channel' => 'channel',
                        'hits' => 'hits',
                        'unique_hits' => 'uniqueHits',
                    ],
                ],
                'columnNames' => [
                    [
                        'channelId' => 'channel_id',
                        'channel' => 'channel',
                        'hits' => 'hits',
                        'uniqueHits' => 'unique_hits',
                    ],
                ],
                'table' => [
                    [
                        'name' => 'channel_url_trackables',
                        'indexes' => [
                            'channel_url_trackable_search' => [
                                'columns' => [
                                    'channel',
                                    'channel_id',
                                ],
                            ],
                        ],
                        'uniqueConstraints' => [],
                    ],
                ],
                'associationMappings' => [
                    [
                        'redirect' => [
                            'fieldName' => 'redirect',
                            'targetEntity' => 'Mautic\\PageBundle\\Entity\\Redirect',
                            'cascade' => [
                                'persist',
                            ],
                            'inversedBy' => 'trackables',
                            'id' => true,
                            'joinColumns' => [
                                [
                                    'name' => 'redirect_id',
                                    'referencedColumnName' => 'id',
                                    'nullable' => true,
                                    'unique' => false,
                                    'onDelete' => 'CASCADE',
                                    'columnDefinition' => null,
                                ],
                            ],
                            'type' => 2,
                            'mappedBy' => null,
                            'isOwningSide' => true,
                            'sourceEntity' => 'Mautic\\PageBundle\\Entity\\Trackable',
                            'fetch' => 2,
                            'isCascadeRemove' => false,
                            'isCascadePersist' => true,
                            'isCascadeRefresh' => false,
                            'isCascadeMerge' => false,
                            'isCascadeDetach' => false,
                            'sourceToTargetKeyColumns' => [
                                'redirect_id' => 'id',
                            ],
                            'joinColumnFieldNames' => [
                                'redirect_id' => 'redirect_id',
                            ],
                            'targetToSourceKeyColumns' => [
                                'id' => 'redirect_id',
                            ],
                            'orphanRemoval' => false,
                        ],
                    ],
                ],
                'isIdentifierComposite' => [
                    true,
                ],
                'containsForeignIdentifier' => [
                    true,
                ],
                'idGenerator' => [
                    $o[1],
                ],
                'changeTrackingPolicy' => [
                    2,
                ],
            ],
        ],
        $o[0],
        []
    );
},
60 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ClassMetadata')),
            clone ($p['Doctrine\\ORM\\Id\\BigIntegerIdentityGenerator'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Id\\BigIntegerIdentityGenerator')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'Mautic\\PageBundle\\Entity\\Hit',
                ],
                'namespace' => [
                    'Mautic\\PageBundle\\Entity',
                ],
                'rootEntityName' => [
                    'Mautic\\PageBundle\\Entity\\Hit',
                ],
                'customRepositoryClassName' => [
                    'Mautic\\PageBundle\\Entity\\HitRepository',
                ],
                'identifier' => [
                    [
                        'id',
                    ],
                ],
                'generatorType' => [
                    4,
                ],
                'fieldMappings' => [
                    [
                        'id' => [
                            'fieldName' => 'id',
                            'columnName' => 'id',
                            'id' => true,
                            'nullable' => false,
                            'type' => 'bigint',
                            'options' => [
                                'unsigned' => true,
                            ],
                        ],
                        'dateHit' => [
                            'fieldName' => 'dateHit',
                            'type' => 'datetime',
                            'columnName' => 'date_hit',
                        ],
                        'dateLeft' => [
                            'fieldName' => 'dateLeft',
                            'type' => 'datetime',
                            'columnName' => 'date_left',
                            'nullable' => true,
                        ],
                        'country' => [
                            'fieldName' => 'country',
                            'type' => 'string',
                            'length' => 191,
                            'nullable' => true,
                            'columnName' => 'country',
                        ],
                        'region' => [
                            'fieldName' => 'region',
                            'type' => 'string',
                            'length' => 191,
                            'nullable' => true,
                            'columnName' => 'region',
                        ],
                        'city' => [
                            'fieldName' => 'city',
                            'type' => 'string',
                            'length' => 191,
                            'nullable' => true,
                            'columnName' => 'city',
                        ],
                        'isp' => [
                            'fieldName' => 'isp',
                            'type' => 'string',
                            'length' => 191,
                            'nullable' => true,
                            'columnName' => 'isp',
                        ],
                        'organization' => [
                            'fieldName' => 'organization',
                            'type' => 'string',
                            'length' => 191,
                            'nullable' => true,
                            'columnName' => 'organization',
                        ],
                        'code' => [
                            'fieldName' => 'code',
                            'type' => 'integer',
                            'columnName' => 'code',
                        ],
                        'referer' => [
                            'fieldName' => 'referer',
                            'type' => 'text',
                            'nullable' => true,
                            'columnName' => 'referer',
                        ],
                        'url' => [
                            'fieldName' => 'url',
                            'type' => 'text',
                            'nullable' => true,
                            'columnName' => 'url',
                        ],
                        'urlTitle' => [
                            'fieldName' => 'urlTitle',
                            'type' => 'string',
                            'length' => 191,
                            'columnName' => 'url_title',
                            'nullable' => true,
                        ],
                        'userAgent' => [
                            'fieldName' => 'userAgent',
                            'type' => 'text',
                            'columnName' => 'user_agent',
                            'nullable' => true,
                        ],
                        'remoteHost' => [
                            'fieldName' => 'remoteHost',
                            'type' => 'string',
                            'length' => 191,
                            'columnName' => 'remote_host',
                            'nullable' => true,
                        ],
                        'pageLanguage' => [
                            'fieldName' => 'pageLanguage',
                            'type' => 'string',
                            'length' => 191,
                            'columnName' => 'page_language',
                            'nullable' => true,
                        ],
                        'browserLanguages' => [
                            'fieldName' => 'browserLanguages',
                            'type' => 'array',
                            'columnName' => 'browser_languages',
                            'nullable' => true,
                        ],
                        'trackingId' => [
                            'fieldName' => 'trackingId',
                            'type' => 'string',
                            'length' => 191,
                            'columnName' => 'tracking_id',
                        ],
                        'source' => [
                            'fieldName' => 'source',
                            'type' => 'string',
                            'length' => 191,
                            'nullable' => true,
                            'columnName' => 'source',
                        ],
                        'sourceId' => [
                            'fieldName' => 'sourceId',
                            'type' => 'integer',
                            'columnName' => 'source_id',
                            'nullable' => true,
                        ],
                        'query' => [
                            'fieldName' => 'query',
                            'type' => 'array',
                            'nullable' => true,
                            'columnName' => 'query',
                        ],
                    ],
                ],
                'fieldNames' => [
                    [
                        'id' => 'id',
                        'date_hit' => 'dateHit',
                        'date_left' => 'dateLeft',
                        'country' => 'country',
                        'region' => 'region',
                        'city' => 'city',
                        'isp' => 'isp',
                        'organization' => 'organization',
                        'code' => 'code',
                        'referer' => 'referer',
                        'url' => 'url',
                        'url_title' => 'urlTitle',
                        'user_agent' => 'userAgent',
                        'remote_host' => 'remoteHost',
                        'page_language' => 'pageLanguage',
                        'browser_languages' => 'browserLanguages',
                        'tracking_id' => 'trackingId',
                        'source' => 'source',
                        'source_id' => 'sourceId',
                        'query' => 'query',
                    ],
                ],
                'columnNames' => [
                    [
                        'id' => 'id',
                        'dateHit' => 'date_hit',
                        'dateLeft' => 'date_left',
                        'country' => 'country',
                        'region' => 'region',
                        'city' => 'city',
                        'isp' => 'isp',
                        'organization' => 'organization',
                        'code' => 'code',
                        'referer' => 'referer',
                        'url' => 'url',
                        'urlTitle' => 'url_title',
                        'userAgent' => 'user_agent',
                        'remoteHost' => 'remote_host',
                        'pageLanguage' => 'page_language',
                        'browserLanguages' => 'browser_languages',
                        'trackingId' => 'tracking_id',
                        'source' => 'source',
                        'sourceId' => 'source_id',
                        'query' => 'query',
                    ],
                ],
                'table' => [
                    [
                        'name' => 'page_hits',
                        'indexes' => [
                            'page_hit_tracking_search' => [
                                'columns' => [
                                    'tracking_id',
                                ],
                            ],
                            'page_hit_code_search' => [
                                'columns' => [
                                    'code',
                                ],
                            ],
                            'page_hit_source_search' => [
                                'columns' => [
                                    'source',
                                    'source_id',
                                ],
                            ],
                            'date_hit_left_index' => [
                                'columns' => [
                                    'date_hit',
                                    'date_left',
                                ],
                            ],
                            'page_hit_url' => [
                                'columns' => [
                                    'url',
                                ],
                                'options' => [
                                    'lengths' => [
                                        128,
                                    ],
                                ],
                            ],
                        ],
                        'uniqueConstraints' => [],
                    ],
                ],
                'associationMappings' => [
                    [
                        'page' => [
                            'fieldName' => 'page',
                            'targetEntity' => 'Mautic\\PageBundle\\Entity\\Page',
                            'joinColumns' => [
                                [
                                    'name' => 'page_id',
                                    'referencedColumnName' => 'id',
                                    'nullable' => true,
                                    'unique' => false,
                                    'onDelete' => 'SET NULL',
                                    'columnDefinition' => null,
                                ],
                            ],
                            'type' => 2,
                            'mappedBy' => null,
                            'inversedBy' => null,
                            'isOwningSide' => true,
                            'sourceEntity' => 'Mautic\\PageBundle\\Entity\\Hit',
                            'fetch' => 2,
                            'cascade' => [],
                            'isCascadeRemove' => false,
                            'isCascadePersist' => false,
                            'isCascadeRefresh' => false,
                            'isCascadeMerge' => false,
                            'isCascadeDetach' => false,
                            'sourceToTargetKeyColumns' => [
                                'page_id' => 'id',
                            ],
                            'joinColumnFieldNames' => [
                                'page_id' => 'page_id',
                            ],
                            'targetToSourceKeyColumns' => [
                                'id' => 'page_id',
                            ],
                            'orphanRemoval' => false,
                        ],
                        'redirect' => [
                            'fieldName' => 'redirect',
                            'targetEntity' => 'Mautic\\PageBundle\\Entity\\Redirect',
                            'joinColumns' => [
                                [
                                    'name' => 'redirect_id',
                                    'referencedColumnName' => 'id',
                                    'nullable' => true,
                                    'unique' => false,
                                    'onDelete' => 'SET NULL',
                                    'columnDefinition' => null,
                                ],
                            ],
                            'type' => 2,
                            'mappedBy' => null,
                            'inversedBy' => null,
                            'isOwningSide' => true,
                            'sourceEntity' => 'Mautic\\PageBundle\\Entity\\Hit',
                            'fetch' => 2,
                            'cascade' => [],
                            'isCascadeRemove' => false,
                            'isCascadePersist' => false,
                            'isCascadeRefresh' => false,
                            'isCascadeMerge' => false,
                            'isCascadeDetach' => false,
                            'sourceToTargetKeyColumns' => [
                                'redirect_id' => 'id',
                            ],
                            'joinColumnFieldNames' => [
                                'redirect_id' => 'redirect_id',
                            ],
                            'targetToSourceKeyColumns' => [
                                'id' => 'redirect_id',
                            ],
                            'orphanRemoval' => false,
                        ],
                        'email' => [
                            'fieldName' => 'email',
                            'targetEntity' => 'Mautic\\EmailBundle\\Entity\\Email',
                            'joinColumns' => [
                                [
                                    'name' => 'email_id',
                                    'referencedColumnName' => 'id',
                                    'nullable' => true,
                                    'unique' => false,
                                    'onDelete' => 'SET NULL',
                                    'columnDefinition' => null,
                                ],
                            ],
                            'type' => 2,
                            'mappedBy' => null,
                            'inversedBy' => null,
                            'isOwningSide' => true,
                            'sourceEntity' => 'Mautic\\PageBundle\\Entity\\Hit',
                            'fetch' => 2,
                            'cascade' => [],
                            'isCascadeRemove' => false,
                            'isCascadePersist' => false,
                            'isCascadeRefresh' => false,
                            'isCascadeMerge' => false,
                            'isCascadeDetach' => false,
                            'sourceToTargetKeyColumns' => [
                                'email_id' => 'id',
                            ],
                            'joinColumnFieldNames' => [
                                'email_id' => 'email_id',
                            ],
                            'targetToSourceKeyColumns' => [
                                'id' => 'email_id',
                            ],
                            'orphanRemoval' => false,
                        ],
                        'lead' => [
                            'fieldName' => 'lead',
                            'targetEntity' => 'Mautic\\LeadBundle\\Entity\\Lead',
                            'joinColumns' => [
                                [
                                    'name' => 'lead_id',
                                    'referencedColumnName' => 'id',
                                    'nullable' => true,
                                    'unique' => false,
                                    'onDelete' => 'SET NULL',
                                    'columnDefinition' => null,
                                ],
                            ],
                            'type' => 2,
                            'mappedBy' => null,
                            'inversedBy' => null,
                            'isOwningSide' => true,
                            'sourceEntity' => 'Mautic\\PageBundle\\Entity\\Hit',
                            'fetch' => 2,
                            'cascade' => [],
                            'isCascadeRemove' => false,
                            'isCascadePersist' => false,
                            'isCascadeRefresh' => false,
                            'isCascadeMerge' => false,
                            'isCascadeDetach' => false,
                            'sourceToTargetKeyColumns' => [
                                'lead_id' => 'id',
                            ],
                            'joinColumnFieldNames' => [
                                'lead_id' => 'lead_id',
                            ],
                            'targetToSourceKeyColumns' => [
                                'id' => 'lead_id',
                            ],
                            'orphanRemoval' => false,
                        ],
                        'ipAddress' => [
                            'fieldName' => 'ipAddress',
                            'targetEntity' => 'Mautic\\CoreBundle\\Entity\\IpAddress',
                            'cascade' => [
                                'persist',
                                'merge',
                                'detach',
                            ],
                            'joinColumns' => [
                                [
                                    'name' => 'ip_id',
                                    'referencedColumnName' => 'id',
                                    'nullable' => false,
                                    'unique' => false,
                                    'onDelete' => null,
                                    'columnDefinition' => null,
                                ],
                            ],
                            'type' => 2,
                            'mappedBy' => null,
                            'inversedBy' => null,
                            'isOwningSide' => true,
                            'sourceEntity' => 'Mautic\\PageBundle\\Entity\\Hit',
                            'fetch' => 2,
                            'isCascadeRemove' => false,
                            'isCascadePersist' => true,
                            'isCascadeRefresh' => false,
                            'isCascadeMerge' => true,
                            'isCascadeDetach' => true,
                            'sourceToTargetKeyColumns' => [
                                'ip_id' => 'id',
                            ],
                            'joinColumnFieldNames' => [
                                'ip_id' => 'ip_id',
                            ],
                            'targetToSourceKeyColumns' => [
                                'id' => 'ip_id',
                            ],
                            'orphanRemoval' => false,
                        ],
                        'device' => [
                            'fieldName' => 'device',
                            'targetEntity' => 'Mautic\\LeadBundle\\Entity\\LeadDevice',
                            'cascade' => [
                                'persist',
                            ],
                            'joinColumns' => [
                                [
                                    'name' => 'device_id',
                                    'referencedColumnName' => 'id',
                                    'nullable' => true,
                                    'unique' => false,
                                    'onDelete' => 'SET NULL',
                                    'columnDefinition' => null,
                                ],
                            ],
                            'type' => 2,
                            'mappedBy' => null,
                            'inversedBy' => null,
                            'isOwningSide' => true,
                            'sourceEntity' => 'Mautic\\PageBundle\\Entity\\Hit',
                            'fetch' => 2,
                            'isCascadeRemove' => false,
                            'isCascadePersist' => true,
                            'isCascadeRefresh' => false,
                            'isCascadeMerge' => false,
                            'isCascadeDetach' => false,
                            'sourceToTargetKeyColumns' => [
                                'device_id' => 'id',
                            ],
                            'joinColumnFieldNames' => [
                                'device_id' => 'device_id',
                            ],
                            'targetToSourceKeyColumns' => [
                                'id' => 'device_id',
                            ],
                            'orphanRemoval' => false,
                        ],
                    ],
                ],
                'idGenerator' => [
                    $o[1],
                ],
                'changeTrackingPolicy' => [
                    2,
                ],
            ],
        ],
        $o[0],
        []
    );
},
61 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ClassMetadata')),
            clone ($p['Doctrine\\ORM\\Id\\IdentityGenerator'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Id\\IdentityGenerator')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'Mautic\\PageBundle\\Entity\\Page',
                ],
                'namespace' => [
                    'Mautic\\PageBundle\\Entity',
                ],
                'rootEntityName' => [
                    'Mautic\\PageBundle\\Entity\\Page',
                ],
                'customRepositoryClassName' => [
                    'Mautic\\PageBundle\\Entity\\PageRepository',
                ],
                'identifier' => [
                    [
                        'id',
                    ],
                ],
                'generatorType' => [
                    4,
                ],
                'fieldMappings' => [
                    [
                        'isPublished' => [
                            'fieldName' => 'isPublished',
                            'type' => 'boolean',
                            'columnName' => 'is_published',
                            'declared' => 'Mautic\\CoreBundle\\Entity\\FormEntity',
                        ],
                        'dateAdded' => [
                            'fieldName' => 'dateAdded',
                            'type' => 'datetime',
                            'columnName' => 'date_added',
                            'nullable' => true,
                            'declared' => 'Mautic\\CoreBundle\\Entity\\FormEntity',
                        ],
                        'createdBy' => [
                            'fieldName' => 'createdBy',
                            'type' => 'integer',
                            'columnName' => 'created_by',
                            'nullable' => true,
                            'declared' => 'Mautic\\CoreBundle\\Entity\\FormEntity',
                        ],
                        'createdByUser' => [
                            'fieldName' => 'createdByUser',
                            'type' => 'string',
                            'length' => 191,
                            'columnName' => 'created_by_user',
                            'nullable' => true,
                            'declared' => 'Mautic\\CoreBundle\\Entity\\FormEntity',
                        ],
                        'dateModified' => [
                            'fieldName' => 'dateModified',
                            'type' => 'datetime',
                            'columnName' => 'date_modified',
                            'nullable' => true,
                            'declared' => 'Mautic\\CoreBundle\\Entity\\FormEntity',
                        ],
                        'modifiedBy' => [
                            'fieldName' => 'modifiedBy',
                            'type' => 'integer',
                            'columnName' => 'modified_by',
                            'nullable' => true,
                            'declared' => 'Mautic\\CoreBundle\\Entity\\FormEntity',
                        ],
                        'modifiedByUser' => [
                            'fieldName' => 'modifiedByUser',
                            'type' => 'string',
                            'length' => 191,
                            'columnName' => 'modified_by_user',
                            'nullable' => true,
                            'declared' => 'Mautic\\CoreBundle\\Entity\\FormEntity',
                        ],
                        'checkedOut' => [
                            'fieldName' => 'checkedOut',
                            'type' => 'datetime',
                            'columnName' => 'checked_out',
                            'nullable' => true,
                            'declared' => 'Mautic\\CoreBundle\\Entity\\FormEntity',
                        ],
                        'checkedOutBy' => [
                            'fieldName' => 'checkedOutBy',
                            'type' => 'integer',
                            'columnName' => 'checked_out_by',
                            'nullable' => true,
                            'declared' => 'Mautic\\CoreBundle\\Entity\\FormEntity',
                        ],
                        'checkedOutByUser' => [
                            'fieldName' => 'checkedOutByUser',
                            'type' => 'string',
                            'length' => 191,
                            'columnName' => 'checked_out_by_user',
                            'nullable' => true,
                            'declared' => 'Mautic\\CoreBundle\\Entity\\FormEntity',
                        ],
                        'id' => [
                            'fieldName' => 'id',
                            'type' => 'integer',
                            'id' => true,
                            'options' => [
                                'unsigned' => true,
                            ],
                            'columnName' => 'id',
                        ],
                        'title' => [
                            'length' => 191,
                            'fieldName' => 'title',
                            'type' => 'string',
                            'columnName' => 'title',
                        ],
                        'alias' => [
                            'length' => 191,
                            'fieldName' => 'alias',
                            'type' => 'string',
                            'columnName' => 'alias',
                        ],
                        'template' => [
                            'fieldName' => 'template',
                            'type' => 'string',
                            'length' => 191,
                            'nullable' => true,
                            'columnName' => 'template',
                        ],
                        'customHtml' => [
                            'fieldName' => 'customHtml',
                            'type' => 'text',
                            'columnName' => 'custom_html',
                            'nullable' => true,
                        ],
                        'content' => [
                            'fieldName' => 'content',
                            'type' => 'array',
                            'nullable' => true,
                            'columnName' => 'content',
                        ],
                        'publishUp' => [
                            'fieldName' => 'publishUp',
                            'type' => 'datetime',
                            'columnName' => 'publish_up',
                            'nullable' => true,
                        ],
                        'publishDown' => [
                            'fieldName' => 'publishDown',
                            'type' => 'datetime',
                            'columnName' => 'publish_down',
                            'nullable' => true,
                        ],
                        'hits' => [
                            'fieldName' => 'hits',
                            'type' => 'integer',
                            'columnName' => 'hits',
                        ],
                        'uniqueHits' => [
                            'fieldName' => 'uniqueHits',
                            'type' => 'integer',
                            'columnName' => 'unique_hits',
                        ],
                        'variantHits' => [
                            'fieldName' => 'variantHits',
                            'type' => 'integer',
                            'columnName' => 'variant_hits',
                        ],
                        'revision' => [
                            'fieldName' => 'revision',
                            'type' => 'integer',
                            'columnName' => 'revision',
                        ],
                        'metaDescription' => [
                            'fieldName' => 'metaDescription',
                            'type' => 'string',
                            'length' => 191,
                            'columnName' => 'meta_description',
                            'nullable' => true,
                        ],
                        'headScript' => [
                            'fieldName' => 'headScript',
                            'type' => 'text',
                            'columnName' => 'head_script',
                            'nullable' => true,
                        ],
                        'footerScript' => [
                            'fieldName' => 'footerScript',
                            'type' => 'text',
                            'columnName' => 'footer_script',
                            'nullable' => true,
                        ],
                        'redirectType' => [
                            'fieldName' => 'redirectType',
                            'type' => 'string',
                            'length' => 100,
                            'columnName' => 'redirect_type',
                            'nullable' => true,
                        ],
                        'redirectUrl' => [
                            'fieldName' => 'redirectUrl',
                            'type' => 'string',
                            'length' => 2048,
                            'columnName' => 'redirect_url',
                            'nullable' => true,
                        ],
                        'isPreferenceCenter' => [
                            'fieldName' => 'isPreferenceCenter',
                            'type' => 'boolean',
                            'columnName' => 'is_preference_center',
                            'nullable' => true,
                        ],
                        'noIndex' => [
                            'fieldName' => 'noIndex',
                            'type' => 'boolean',
                            'columnName' => 'no_index',
                            'nullable' => true,
                        ],
                        'language' => [
                            'fieldName' => 'language',
                            'type' => 'string',
                            'length' => 191,
                            'columnName' => 'lang',
                        ],
                        'variantSettings' => [
                            'fieldName' => 'variantSettings',
                            'type' => 'array',
                            'columnName' => 'variant_settings',
                            'nullable' => true,
                        ],
                        'variantStartDate' => [
                            'fieldName' => 'variantStartDate',
                            'type' => 'datetime',
                            'columnName' => 'variant_start_date',
                            'nullable' => true,
                        ],
                    ],
                ],
                'fieldNames' => [
                    [
                        'is_published' => 'isPublished',
                        'date_added' => 'dateAdded',
                        'created_by' => 'createdBy',
                        'created_by_user' => 'createdByUser',
                        'date_modified' => 'dateModified',
                        'modified_by' => 'modifiedBy',
                        'modified_by_user' => 'modifiedByUser',
                        'checked_out' => 'checkedOut',
                        'checked_out_by' => 'checkedOutBy',
                        'checked_out_by_user' => 'checkedOutByUser',
                        'id' => 'id',
                        'title' => 'title',
                        'alias' => 'alias',
                        'template' => 'template',
                        'custom_html' => 'customHtml',
                        'content' => 'content',
                        'publish_up' => 'publishUp',
                        'publish_down' => 'publishDown',
                        'hits' => 'hits',
                        'unique_hits' => 'uniqueHits',
                        'variant_hits' => 'variantHits',
                        'revision' => 'revision',
                        'meta_description' => 'metaDescription',
                        'head_script' => 'headScript',
                        'footer_script' => 'footerScript',
                        'redirect_type' => 'redirectType',
                        'redirect_url' => 'redirectUrl',
                        'is_preference_center' => 'isPreferenceCenter',
                        'no_index' => 'noIndex',
                        'lang' => 'language',
                        'variant_settings' => 'variantSettings',
                        'variant_start_date' => 'variantStartDate',
                    ],
                ],
                'columnNames' => [
                    [
                        'isPublished' => 'is_published',
                        'dateAdded' => 'date_added',
                        'createdBy' => 'created_by',
                        'createdByUser' => 'created_by_user',
                        'dateModified' => 'date_modified',
                        'modifiedBy' => 'modified_by',
                        'modifiedByUser' => 'modified_by_user',
                        'checkedOut' => 'checked_out',
                        'checkedOutBy' => 'checked_out_by',
                        'checkedOutByUser' => 'checked_out_by_user',
                        'id' => 'id',
                        'title' => 'title',
                        'alias' => 'alias',
                        'template' => 'template',
                        'customHtml' => 'custom_html',
                        'content' => 'content',
                        'publishUp' => 'publish_up',
                        'publishDown' => 'publish_down',
                        'hits' => 'hits',
                        'uniqueHits' => 'unique_hits',
                        'variantHits' => 'variant_hits',
                        'revision' => 'revision',
                        'metaDescription' => 'meta_description',
                        'headScript' => 'head_script',
                        'footerScript' => 'footer_script',
                        'redirectType' => 'redirect_type',
                        'redirectUrl' => 'redirect_url',
                        'isPreferenceCenter' => 'is_preference_center',
                        'noIndex' => 'no_index',
                        'language' => 'lang',
                        'variantSettings' => 'variant_settings',
                        'variantStartDate' => 'variant_start_date',
                    ],
                ],
                'table' => [
                    [
                        'name' => 'pages',
                        'indexes' => [
                            'page_alias_search' => [
                                'columns' => [
                                    'alias',
                                ],
                            ],
                        ],
                        'uniqueConstraints' => [],
                    ],
                ],
                'associationMappings' => [
                    [
                        'category' => [
                            'fieldName' => 'category',
                            'targetEntity' => 'Mautic\\CategoryBundle\\Entity\\Category',
                            'cascade' => [
                                'merge',
                                'detach',
                            ],
                            'joinColumns' => [
                                [
                                    'name' => 'category_id',
                                    'referencedColumnName' => 'id',
                                    'nullable' => true,
                                    'unique' => false,
                                    'onDelete' => 'SET NULL',
                                    'columnDefinition' => null,
                                ],
                            ],
                            'type' => 2,
                            'mappedBy' => null,
                            'inversedBy' => null,
                            'isOwningSide' => true,
                            'sourceEntity' => 'Mautic\\PageBundle\\Entity\\Page',
                            'fetch' => 2,
                            'isCascadeRemove' => false,
                            'isCascadePersist' => false,
                            'isCascadeRefresh' => false,
                            'isCascadeMerge' => true,
                            'isCascadeDetach' => true,
                            'sourceToTargetKeyColumns' => [
                                'category_id' => 'id',
                            ],
                            'joinColumnFieldNames' => [
                                'category_id' => 'category_id',
                            ],
                            'targetToSourceKeyColumns' => [
                                'id' => 'category_id',
                            ],
                            'orphanRemoval' => false,
                        ],
                        'translationChildren' => [
                            'fieldName' => 'translationChildren',
                            'targetEntity' => 'Mautic\\PageBundle\\Entity\\Page',
                            'indexBy' => 'id',
                            'orderBy' => [
                                'isPublished' => 'DESC',
                            ],
                            'mappedBy' => 'translationParent',
                            'type' => 4,
                            'inversedBy' => null,
                            'isOwningSide' => false,
                            'sourceEntity' => 'Mautic\\PageBundle\\Entity\\Page',
                            'fetch' => 2,
                            'cascade' => [],
                            'isCascadeRemove' => false,
                            'isCascadePersist' => false,
                            'isCascadeRefresh' => false,
                            'isCascadeMerge' => false,
                            'isCascadeDetach' => false,
                            'orphanRemoval' => false,
                        ],
                        'translationParent' => [
                            'fieldName' => 'translationParent',
                            'targetEntity' => 'Mautic\\PageBundle\\Entity\\Page',
                            'inversedBy' => 'translationChildren',
                            'joinColumns' => [
                                [
                                    'name' => 'translation_parent_id',
                                    'referencedColumnName' => 'id',
                                    'nullable' => true,
                                    'unique' => false,
                                    'onDelete' => 'CASCADE',
                                    'columnDefinition' => null,
                                ],
                            ],
                            'type' => 2,
                            'mappedBy' => null,
                            'isOwningSide' => true,
                            'sourceEntity' => 'Mautic\\PageBundle\\Entity\\Page',
                            'fetch' => 2,
                            'cascade' => [],
                            'isCascadeRemove' => false,
                            'isCascadePersist' => false,
                            'isCascadeRefresh' => false,
                            'isCascadeMerge' => false,
                            'isCascadeDetach' => false,
                            'sourceToTargetKeyColumns' => [
                                'translation_parent_id' => 'id',
                            ],
                            'joinColumnFieldNames' => [
                                'translation_parent_id' => 'translation_parent_id',
                            ],
                            'targetToSourceKeyColumns' => [
                                'id' => 'translation_parent_id',
                            ],
                            'orphanRemoval' => false,
                        ],
                        'variantParent' => [
                            'fieldName' => 'variantParent',
                            'targetEntity' => 'Mautic\\PageBundle\\Entity\\Page',
                            'inversedBy' => 'variantChildren',
                            'joinColumns' => [
                                [
                                    'name' => 'variant_parent_id',
                                    'referencedColumnName' => 'id',
                                    'nullable' => true,
                                    'unique' => false,
                                    'onDelete' => 'CASCADE',
                                    'columnDefinition' => null,
                                ],
                            ],
                            'type' => 2,
                            'mappedBy' => null,
                            'isOwningSide' => true,
                            'sourceEntity' => 'Mautic\\PageBundle\\Entity\\Page',
                            'fetch' => 2,
                            'cascade' => [],
                            'isCascadeRemove' => false,
                            'isCascadePersist' => false,
                            'isCascadeRefresh' => false,
                            'isCascadeMerge' => false,
                            'isCascadeDetach' => false,
                            'sourceToTargetKeyColumns' => [
                                'variant_parent_id' => 'id',
                            ],
                            'joinColumnFieldNames' => [
                                'variant_parent_id' => 'variant_parent_id',
                            ],
                            'targetToSourceKeyColumns' => [
                                'id' => 'variant_parent_id',
                            ],
                            'orphanRemoval' => false,
                        ],
                        'variantChildren' => [
                            'fieldName' => 'variantChildren',
                            'targetEntity' => 'Mautic\\PageBundle\\Entity\\Page',
                            'indexBy' => 'id',
                            'orderBy' => [
                                'isPublished' => 'DESC',
                            ],
                            'mappedBy' => 'variantParent',
                            'type' => 4,
                            'inversedBy' => null,
                            'isOwningSide' => false,
                            'sourceEntity' => 'Mautic\\PageBundle\\Entity\\Page',
                            'fetch' => 2,
                            'cascade' => [],
                            'isCascadeRemove' => false,
                            'isCascadePersist' => false,
                            'isCascadeRefresh' => false,
                            'isCascadeMerge' => false,
                            'isCascadeDetach' => false,
                            'orphanRemoval' => false,
                        ],
                    ],
                ],
                'idGenerator' => [
                    $o[1],
                ],
                'changeTrackingPolicy' => [
                    2,
                ],
            ],
        ],
        $o[0],
        []
    );
},
62 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ClassMetadata')),
            clone ($p['Doctrine\\ORM\\Id\\BigIntegerIdentityGenerator'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Id\\BigIntegerIdentityGenerator')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'Mautic\\PageBundle\\Entity\\Redirect',
                ],
                'namespace' => [
                    'Mautic\\PageBundle\\Entity',
                ],
                'rootEntityName' => [
                    'Mautic\\PageBundle\\Entity\\Redirect',
                ],
                'customRepositoryClassName' => [
                    'Mautic\\PageBundle\\Entity\\RedirectRepository',
                ],
                'identifier' => [
                    [
                        'id',
                    ],
                ],
                'generatorType' => [
                    4,
                ],
                'fieldMappings' => [
                    [
                        'isPublished' => [
                            'fieldName' => 'isPublished',
                            'type' => 'boolean',
                            'columnName' => 'is_published',
                            'declared' => 'Mautic\\CoreBundle\\Entity\\FormEntity',
                        ],
                        'dateAdded' => [
                            'fieldName' => 'dateAdded',
                            'type' => 'datetime',
                            'columnName' => 'date_added',
                            'nullable' => true,
                            'declared' => 'Mautic\\CoreBundle\\Entity\\FormEntity',
                        ],
                        'createdBy' => [
                            'fieldName' => 'createdBy',
                            'type' => 'integer',
                            'columnName' => 'created_by',
                            'nullable' => true,
                            'declared' => 'Mautic\\CoreBundle\\Entity\\FormEntity',
                        ],
                        'createdByUser' => [
                            'fieldName' => 'createdByUser',
                            'type' => 'string',
                            'length' => 191,
                            'columnName' => 'created_by_user',
                            'nullable' => true,
                            'declared' => 'Mautic\\CoreBundle\\Entity\\FormEntity',
                        ],
                        'dateModified' => [
                            'fieldName' => 'dateModified',
                            'type' => 'datetime',
                            'columnName' => 'date_modified',
                            'nullable' => true,
                            'declared' => 'Mautic\\CoreBundle\\Entity\\FormEntity',
                        ],
                        'modifiedBy' => [
                            'fieldName' => 'modifiedBy',
                            'type' => 'integer',
                            'columnName' => 'modified_by',
                            'nullable' => true,
                            'declared' => 'Mautic\\CoreBundle\\Entity\\FormEntity',
                        ],
                        'modifiedByUser' => [
                            'fieldName' => 'modifiedByUser',
                            'type' => 'string',
                            'length' => 191,
                            'columnName' => 'modified_by_user',
                            'nullable' => true,
                            'declared' => 'Mautic\\CoreBundle\\Entity\\FormEntity',
                        ],
                        'checkedOut' => [
                            'fieldName' => 'checkedOut',
                            'type' => 'datetime',
                            'columnName' => 'checked_out',
                            'nullable' => true,
                            'declared' => 'Mautic\\CoreBundle\\Entity\\FormEntity',
                        ],
                        'checkedOutBy' => [
                            'fieldName' => 'checkedOutBy',
                            'type' => 'integer',
                            'columnName' => 'checked_out_by',
                            'nullable' => true,
                            'declared' => 'Mautic\\CoreBundle\\Entity\\FormEntity',
                        ],
                        'checkedOutByUser' => [
                            'fieldName' => 'checkedOutByUser',
                            'type' => 'string',
                            'length' => 191,
                            'columnName' => 'checked_out_by_user',
                            'nullable' => true,
                            'declared' => 'Mautic\\CoreBundle\\Entity\\FormEntity',
                        ],
                        'id' => [
                            'fieldName' => 'id',
                            'columnName' => 'id',
                            'id' => true,
                            'nullable' => false,
                            'type' => 'bigint',
                            'options' => [
                                'unsigned' => true,
                            ],
                        ],
                        'redirectId' => [
                            'fieldName' => 'redirectId',
                            'type' => 'string',
                            'length' => 25,
                            'columnName' => 'redirect_id',
                        ],
                        'url' => [
                            'fieldName' => 'url',
                            'type' => 'text',
                            'columnName' => 'url',
                        ],
                        'hits' => [
                            'fieldName' => 'hits',
                            'type' => 'integer',
                            'columnName' => 'hits',
                        ],
                        'uniqueHits' => [
                            'fieldName' => 'uniqueHits',
                            'type' => 'integer',
                            'columnName' => 'unique_hits',
                        ],
                    ],
                ],
                'fieldNames' => [
                    [
                        'is_published' => 'isPublished',
                        'date_added' => 'dateAdded',
                        'created_by' => 'createdBy',
                        'created_by_user' => 'createdByUser',
                        'date_modified' => 'dateModified',
                        'modified_by' => 'modifiedBy',
                        'modified_by_user' => 'modifiedByUser',
                        'checked_out' => 'checkedOut',
                        'checked_out_by' => 'checkedOutBy',
                        'checked_out_by_user' => 'checkedOutByUser',
                        'id' => 'id',
                        'redirect_id' => 'redirectId',
                        'url' => 'url',
                        'hits' => 'hits',
                        'unique_hits' => 'uniqueHits',
                    ],
                ],
                'columnNames' => [
                    [
                        'isPublished' => 'is_published',
                        'dateAdded' => 'date_added',
                        'createdBy' => 'created_by',
                        'createdByUser' => 'created_by_user',
                        'dateModified' => 'date_modified',
                        'modifiedBy' => 'modified_by',
                        'modifiedByUser' => 'modified_by_user',
                        'checkedOut' => 'checked_out',
                        'checkedOutBy' => 'checked_out_by',
                        'checkedOutByUser' => 'checked_out_by_user',
                        'id' => 'id',
                        'redirectId' => 'redirect_id',
                        'url' => 'url',
                        'hits' => 'hits',
                        'uniqueHits' => 'unique_hits',
                    ],
                ],
                'table' => [
                    [
                        'name' => 'page_redirects',
                        'indexes' => [],
                        'uniqueConstraints' => [],
                    ],
                ],
                'associationMappings' => [
                    [
                        'trackables' => [
                            'fieldName' => 'trackables',
                            'targetEntity' => 'Mautic\\PageBundle\\Entity\\Trackable',
                            'mappedBy' => 'redirect',
                            'fetch' => 4,
                            'type' => 4,
                            'inversedBy' => null,
                            'isOwningSide' => false,
                            'sourceEntity' => 'Mautic\\PageBundle\\Entity\\Redirect',
                            'cascade' => [],
                            'isCascadeRemove' => false,
                            'isCascadePersist' => false,
                            'isCascadeRefresh' => false,
                            'isCascadeMerge' => false,
                            'isCascadeDetach' => false,
                            'orphanRemoval' => false,
                        ],
                    ],
                ],
                'idGenerator' => [
                    $o[1],
                ],
                'changeTrackingPolicy' => [
                    2,
                ],
            ],
        ],
        $o[0],
        []
    );
},
63 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ClassMetadata')),
            clone ($p['Doctrine\\ORM\\Id\\IdentityGenerator'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Id\\IdentityGenerator')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'Mautic\\PageBundle\\Entity\\VideoHit',
                ],
                'namespace' => [
                    'Mautic\\PageBundle\\Entity',
                ],
                'rootEntityName' => [
                    'Mautic\\PageBundle\\Entity\\VideoHit',
                ],
                'customRepositoryClassName' => [
                    'Mautic\\PageBundle\\Entity\\VideoHitRepository',
                ],
                'identifier' => [
                    [
                        'id',
                    ],
                ],
                'generatorType' => [
                    4,
                ],
                'fieldMappings' => [
                    [
                        'id' => [
                            'fieldName' => 'id',
                            'type' => 'integer',
                            'id' => true,
                            'options' => [
                                'unsigned' => true,
                            ],
                            'columnName' => 'id',
                        ],
                        'dateHit' => [
                            'fieldName' => 'dateHit',
                            'type' => 'datetime',
                            'columnName' => 'date_hit',
                        ],
                        'dateLeft' => [
                            'fieldName' => 'dateLeft',
                            'type' => 'datetime',
                            'columnName' => 'date_left',
                            'nullable' => true,
                        ],
                        'country' => [
                            'fieldName' => 'country',
                            'type' => 'string',
                            'length' => 191,
                            'nullable' => true,
                            'columnName' => 'country',
                        ],
                        'region' => [
                            'fieldName' => 'region',
                            'type' => 'string',
                            'length' => 191,
                            'nullable' => true,
                            'columnName' => 'region',
                        ],
                        'city' => [
                            'fieldName' => 'city',
                            'type' => 'string',
                            'length' => 191,
                            'nullable' => true,
                            'columnName' => 'city',
                        ],
                        'isp' => [
                            'fieldName' => 'isp',
                            'type' => 'string',
                            'length' => 191,
                            'nullable' => true,
                            'columnName' => 'isp',
                        ],
                        'organization' => [
                            'fieldName' => 'organization',
                            'type' => 'string',
                            'length' => 191,
                            'nullable' => true,
                            'columnName' => 'organization',
                        ],
                        'code' => [
                            'fieldName' => 'code',
                            'type' => 'integer',
                            'columnName' => 'code',
                        ],
                        'referer' => [
                            'fieldName' => 'referer',
                            'type' => 'text',
                            'nullable' => true,
                            'columnName' => 'referer',
                        ],
                        'url' => [
                            'fieldName' => 'url',
                            'type' => 'text',
                            'nullable' => true,
                            'columnName' => 'url',
                        ],
                        'userAgent' => [
                            'fieldName' => 'userAgent',
                            'type' => 'text',
                            'columnName' => 'user_agent',
                            'nullable' => true,
                        ],
                        'remoteHost' => [
                            'fieldName' => 'remoteHost',
                            'type' => 'string',
                            'length' => 191,
                            'columnName' => 'remote_host',
                            'nullable' => true,
                        ],
                        'guid' => [
                            'fieldName' => 'guid',
                            'type' => 'string',
                            'length' => 191,
                            'columnName' => 'guid',
                        ],
                        'pageLanguage' => [
                            'fieldName' => 'pageLanguage',
                            'type' => 'string',
                            'length' => 191,
                            'columnName' => 'page_language',
                            'nullable' => true,
                        ],
                        'browserLanguages' => [
                            'fieldName' => 'browserLanguages',
                            'type' => 'array',
                            'columnName' => 'browser_languages',
                            'nullable' => true,
                        ],
                        'channel' => [
                            'fieldName' => 'channel',
                            'type' => 'string',
                            'length' => 191,
                            'nullable' => true,
                            'columnName' => 'channel',
                        ],
                        'channelId' => [
                            'fieldName' => 'channelId',
                            'type' => 'integer',
                            'columnName' => 'channel_id',
                            'nullable' => true,
                        ],
                        'timeWatched' => [
                            'fieldName' => 'timeWatched',
                            'type' => 'integer',
                            'columnName' => 'time_watched',
                            'nullable' => true,
                        ],
                        'duration' => [
                            'fieldName' => 'duration',
                            'type' => 'integer',
                            'columnName' => 'duration',
                            'nullable' => true,
                        ],
                        'query' => [
                            'fieldName' => 'query',
                            'type' => 'array',
                            'nullable' => true,
                            'columnName' => 'query',
                        ],
                    ],
                ],
                'fieldNames' => [
                    [
                        'id' => 'id',
                        'date_hit' => 'dateHit',
                        'date_left' => 'dateLeft',
                        'country' => 'country',
                        'region' => 'region',
                        'city' => 'city',
                        'isp' => 'isp',
                        'organization' => 'organization',
                        'code' => 'code',
                        'referer' => 'referer',
                        'url' => 'url',
                        'user_agent' => 'userAgent',
                        'remote_host' => 'remoteHost',
                        'guid' => 'guid',
                        'page_language' => 'pageLanguage',
                        'browser_languages' => 'browserLanguages',
                        'channel' => 'channel',
                        'channel_id' => 'channelId',
                        'time_watched' => 'timeWatched',
                        'duration' => 'duration',
                        'query' => 'query',
                    ],
                ],
                'columnNames' => [
                    [
                        'id' => 'id',
                        'dateHit' => 'date_hit',
                        'dateLeft' => 'date_left',
                        'country' => 'country',
                        'region' => 'region',
                        'city' => 'city',
                        'isp' => 'isp',
                        'organization' => 'organization',
                        'code' => 'code',
                        'referer' => 'referer',
                        'url' => 'url',
                        'userAgent' => 'user_agent',
                        'remoteHost' => 'remote_host',
                        'guid' => 'guid',
                        'pageLanguage' => 'page_language',
                        'browserLanguages' => 'browser_languages',
                        'channel' => 'channel',
                        'channelId' => 'channel_id',
                        'timeWatched' => 'time_watched',
                        'duration' => 'duration',
                        'query' => 'query',
                    ],
                ],
                'table' => [
                    [
                        'name' => 'video_hits',
                        'indexes' => [
                            'video_date_hit' => [
                                'columns' => [
                                    'date_hit',
                                ],
                            ],
                            'video_channel_search' => [
                                'columns' => [
                                    'channel',
                                    'channel_id',
                                ],
                            ],
                            'video_guid_lead_search' => [
                                'columns' => [
                                    'guid',
                                    'lead_id',
                                ],
                            ],
                        ],
                        'uniqueConstraints' => [],
                    ],
                ],
                'associationMappings' => [
                    [
                        'lead' => [
                            'fieldName' => 'lead',
                            'targetEntity' => 'Mautic\\LeadBundle\\Entity\\Lead',
                            'joinColumns' => [
                                [
                                    'name' => 'lead_id',
                                    'referencedColumnName' => 'id',
                                    'nullable' => true,
                                    'unique' => false,
                                    'onDelete' => 'SET NULL',
                                    'columnDefinition' => null,
                                ],
                            ],
                            'type' => 2,
                            'mappedBy' => null,
                            'inversedBy' => null,
                            'isOwningSide' => true,
                            'sourceEntity' => 'Mautic\\PageBundle\\Entity\\VideoHit',
                            'fetch' => 2,
                            'cascade' => [],
                            'isCascadeRemove' => false,
                            'isCascadePersist' => false,
                            'isCascadeRefresh' => false,
                            'isCascadeMerge' => false,
                            'isCascadeDetach' => false,
                            'sourceToTargetKeyColumns' => [
                                'lead_id' => 'id',
                            ],
                            'joinColumnFieldNames' => [
                                'lead_id' => 'lead_id',
                            ],
                            'targetToSourceKeyColumns' => [
                                'id' => 'lead_id',
                            ],
                            'orphanRemoval' => false,
                        ],
                        'ipAddress' => [
                            'fieldName' => 'ipAddress',
                            'targetEntity' => 'Mautic\\CoreBundle\\Entity\\IpAddress',
                            'cascade' => [
                                'persist',
                                'merge',
                                'detach',
                            ],
                            'joinColumns' => [
                                [
                                    'name' => 'ip_id',
                                    'referencedColumnName' => 'id',
                                    'nullable' => false,
                                    'unique' => false,
                                    'onDelete' => null,
                                    'columnDefinition' => null,
                                ],
                            ],
                            'type' => 2,
                            'mappedBy' => null,
                            'inversedBy' => null,
                            'isOwningSide' => true,
                            'sourceEntity' => 'Mautic\\PageBundle\\Entity\\VideoHit',
                            'fetch' => 2,
                            'isCascadeRemove' => false,
                            'isCascadePersist' => true,
                            'isCascadeRefresh' => false,
                            'isCascadeMerge' => true,
                            'isCascadeDetach' => true,
                            'sourceToTargetKeyColumns' => [
                                'ip_id' => 'id',
                            ],
                            'joinColumnFieldNames' => [
                                'ip_id' => 'ip_id',
                            ],
                            'targetToSourceKeyColumns' => [
                                'id' => 'ip_id',
                            ],
                            'orphanRemoval' => false,
                        ],
                    ],
                ],
                'idGenerator' => [
                    $o[1],
                ],
                'changeTrackingPolicy' => [
                    2,
                ],
            ],
        ],
        $o[0],
        []
    );
},
64 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ClassMetadata')),
            clone ($p['Doctrine\\ORM\\Id\\IdentityGenerator'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Id\\IdentityGenerator')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'Mautic\\PluginBundle\\Entity\\IntegrationEntity',
                ],
                'namespace' => [
                    'Mautic\\PluginBundle\\Entity',
                ],
                'rootEntityName' => [
                    'Mautic\\PluginBundle\\Entity\\IntegrationEntity',
                ],
                'customRepositoryClassName' => [
                    'Mautic\\PluginBundle\\Entity\\IntegrationEntityRepository',
                ],
                'identifier' => [
                    [
                        'id',
                    ],
                ],
                'generatorType' => [
                    4,
                ],
                'fieldMappings' => [
                    [
                        'id' => [
                            'fieldName' => 'id',
                            'type' => 'integer',
                            'id' => true,
                            'options' => [
                                'unsigned' => true,
                            ],
                            'columnName' => 'id',
                        ],
                        'dateAdded' => [
                            'fieldName' => 'dateAdded',
                            'type' => 'datetime',
                            'columnName' => 'date_added',
                        ],
                        'integration' => [
                            'fieldName' => 'integration',
                            'type' => 'string',
                            'length' => 191,
                            'nullable' => true,
                            'columnName' => 'integration',
                        ],
                        'integrationEntity' => [
                            'fieldName' => 'integrationEntity',
                            'type' => 'string',
                            'length' => 191,
                            'columnName' => 'integration_entity',
                            'nullable' => true,
                        ],
                        'integrationEntityId' => [
                            'fieldName' => 'integrationEntityId',
                            'type' => 'string',
                            'length' => 191,
                            'columnName' => 'integration_entity_id',
                            'nullable' => true,
                        ],
                        'internalEntity' => [
                            'fieldName' => 'internalEntity',
                            'type' => 'string',
                            'length' => 191,
                            'columnName' => 'internal_entity',
                            'nullable' => true,
                        ],
                        'internalEntityId' => [
                            'fieldName' => 'internalEntityId',
                            'type' => 'integer',
                            'columnName' => 'internal_entity_id',
                            'nullable' => true,
                        ],
                        'lastSyncDate' => [
                            'fieldName' => 'lastSyncDate',
                            'type' => 'datetime',
                            'columnName' => 'last_sync_date',
                            'nullable' => true,
                        ],
                        'internal' => [
                            'fieldName' => 'internal',
                            'type' => 'array',
                            'nullable' => true,
                            'columnName' => 'internal',
                        ],
                    ],
                ],
                'fieldNames' => [
                    [
                        'id' => 'id',
                        'date_added' => 'dateAdded',
                        'integration' => 'integration',
                        'integration_entity' => 'integrationEntity',
                        'integration_entity_id' => 'integrationEntityId',
                        'internal_entity' => 'internalEntity',
                        'internal_entity_id' => 'internalEntityId',
                        'last_sync_date' => 'lastSyncDate',
                        'internal' => 'internal',
                    ],
                ],
                'columnNames' => [
                    [
                        'id' => 'id',
                        'dateAdded' => 'date_added',
                        'integration' => 'integration',
                        'integrationEntity' => 'integration_entity',
                        'integrationEntityId' => 'integration_entity_id',
                        'internalEntity' => 'internal_entity',
                        'internalEntityId' => 'internal_entity_id',
                        'lastSyncDate' => 'last_sync_date',
                        'internal' => 'internal',
                    ],
                ],
                'table' => [
                    [
                        'name' => 'integration_entity',
                        'indexes' => [
                            'integration_external_entity' => [
                                'columns' => [
                                    'integration',
                                    'integration_entity',
                                    'integration_entity_id',
                                ],
                            ],
                            'integration_internal_entity' => [
                                'columns' => [
                                    'integration',
                                    'internal_entity',
                                    'internal_entity_id',
                                ],
                            ],
                            'integration_entity_match' => [
                                'columns' => [
                                    'integration',
                                    'internal_entity',
                                    'integration_entity',
                                ],
                            ],
                            'integration_last_sync_date' => [
                                'columns' => [
                                    'integration',
                                    'last_sync_date',
                                ],
                            ],
                            'internal_integration_entity' => [
                                'columns' => [
                                    'internal_entity_id',
                                    'integration_entity_id',
                                    'internal_entity',
                                    'integration_entity',
                                ],
                            ],
                        ],
                        'uniqueConstraints' => [],
                    ],
                ],
                'idGenerator' => [
                    $o[1],
                ],
                'changeTrackingPolicy' => [
                    2,
                ],
            ],
        ],
        $o[0],
        []
    );
},
65 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ClassMetadata')),
            clone ($p['Doctrine\\ORM\\Id\\IdentityGenerator'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Id\\IdentityGenerator')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'Mautic\\PluginBundle\\Entity\\Plugin',
                ],
                'namespace' => [
                    'Mautic\\PluginBundle\\Entity',
                ],
                'rootEntityName' => [
                    'Mautic\\PluginBundle\\Entity\\Plugin',
                ],
                'customRepositoryClassName' => [
                    'Mautic\\PluginBundle\\Entity\\PluginRepository',
                ],
                'identifier' => [
                    [
                        'id',
                    ],
                ],
                'generatorType' => [
                    4,
                ],
                'fieldMappings' => [
                    [
                        'id' => [
                            'fieldName' => 'id',
                            'type' => 'integer',
                            'id' => true,
                            'options' => [
                                'unsigned' => true,
                            ],
                            'columnName' => 'id',
                        ],
                        'name' => [
                            'fieldName' => 'name',
                            'type' => 'string',
                            'length' => 191,
                            'columnName' => 'name',
                        ],
                        'description' => [
                            'fieldName' => 'description',
                            'type' => 'text',
                            'nullable' => true,
                            'columnName' => 'description',
                        ],
                        'isMissing' => [
                            'fieldName' => 'isMissing',
                            'type' => 'boolean',
                            'columnName' => 'is_missing',
                        ],
                        'bundle' => [
                            'fieldName' => 'bundle',
                            'type' => 'string',
                            'length' => 50,
                            'columnName' => 'bundle',
                        ],
                        'version' => [
                            'fieldName' => 'version',
                            'type' => 'string',
                            'length' => 191,
                            'nullable' => true,
                            'columnName' => 'version',
                        ],
                        'author' => [
                            'fieldName' => 'author',
                            'type' => 'string',
                            'length' => 191,
                            'nullable' => true,
                            'columnName' => 'author',
                        ],
                    ],
                ],
                'fieldNames' => [
                    [
                        'id' => 'id',
                        'name' => 'name',
                        'description' => 'description',
                        'is_missing' => 'isMissing',
                        'bundle' => 'bundle',
                        'version' => 'version',
                        'author' => 'author',
                    ],
                ],
                'columnNames' => [
                    [
                        'id' => 'id',
                        'name' => 'name',
                        'description' => 'description',
                        'isMissing' => 'is_missing',
                        'bundle' => 'bundle',
                        'version' => 'version',
                        'author' => 'author',
                    ],
                ],
                'table' => [
                    [
                        'name' => 'plugins',
                        'uniqueConstraints' => [
                            'unique_bundle' => [
                                'columns' => [
                                    'bundle',
                                ],
                            ],
                        ],
                        'indexes' => [],
                    ],
                ],
                'associationMappings' => [
                    [
                        'integrations' => [
                            'fieldName' => 'integrations',
                            'targetEntity' => 'Mautic\\PluginBundle\\Entity\\Integration',
                            'indexBy' => 'id',
                            'mappedBy' => 'plugin',
                            'fetch' => 4,
                            'type' => 4,
                            'inversedBy' => null,
                            'isOwningSide' => false,
                            'sourceEntity' => 'Mautic\\PluginBundle\\Entity\\Plugin',
                            'cascade' => [],
                            'isCascadeRemove' => false,
                            'isCascadePersist' => false,
                            'isCascadeRefresh' => false,
                            'isCascadeMerge' => false,
                            'isCascadeDetach' => false,
                            'orphanRemoval' => false,
                        ],
                    ],
                ],
                'idGenerator' => [
                    $o[1],
                ],
                'changeTrackingPolicy' => [
                    2,
                ],
            ],
        ],
        $o[0],
        []
    );
},
66 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ClassMetadata')),
            clone ($p['Doctrine\\ORM\\Id\\IdentityGenerator'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Id\\IdentityGenerator')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'Mautic\\PluginBundle\\Entity\\Integration',
                ],
                'namespace' => [
                    'Mautic\\PluginBundle\\Entity',
                ],
                'rootEntityName' => [
                    'Mautic\\PluginBundle\\Entity\\Integration',
                ],
                'customRepositoryClassName' => [
                    'Mautic\\PluginBundle\\Entity\\IntegrationRepository',
                ],
                'identifier' => [
                    [
                        'id',
                    ],
                ],
                'generatorType' => [
                    4,
                ],
                'fieldMappings' => [
                    [
                        'id' => [
                            'fieldName' => 'id',
                            'type' => 'integer',
                            'id' => true,
                            'columnName' => 'id',
                        ],
                        'name' => [
                            'length' => 191,
                            'fieldName' => 'name',
                            'type' => 'string',
                            'columnName' => 'name',
                        ],
                        'isPublished' => [
                            'fieldName' => 'isPublished',
                            'type' => 'boolean',
                            'columnName' => 'is_published',
                        ],
                        'supportedFeatures' => [
                            'fieldName' => 'supportedFeatures',
                            'type' => 'array',
                            'columnName' => 'supported_features',
                            'nullable' => true,
                        ],
                        'apiKeys' => [
                            'fieldName' => 'apiKeys',
                            'type' => 'array',
                            'columnName' => 'api_keys',
                        ],
                        'featureSettings' => [
                            'fieldName' => 'featureSettings',
                            'type' => 'array',
                            'columnName' => 'feature_settings',
                            'nullable' => true,
                        ],
                    ],
                ],
                'fieldNames' => [
                    [
                        'id' => 'id',
                        'name' => 'name',
                        'is_published' => 'isPublished',
                        'supported_features' => 'supportedFeatures',
                        'api_keys' => 'apiKeys',
                        'feature_settings' => 'featureSettings',
                    ],
                ],
                'columnNames' => [
                    [
                        'id' => 'id',
                        'name' => 'name',
                        'isPublished' => 'is_published',
                        'supportedFeatures' => 'supported_features',
                        'apiKeys' => 'api_keys',
                        'featureSettings' => 'feature_settings',
                    ],
                ],
                'table' => [
                    [
                        'name' => 'plugin_integration_settings',
                        'indexes' => [],
                        'uniqueConstraints' => [],
                    ],
                ],
                'associationMappings' => [
                    [
                        'plugin' => [
                            'fieldName' => 'plugin',
                            'targetEntity' => 'Mautic\\PluginBundle\\Entity\\Plugin',
                            'inversedBy' => 'integrations',
                            'joinColumns' => [
                                [
                                    'name' => 'plugin_id',
                                    'referencedColumnName' => 'id',
                                    'nullable' => true,
                                    'unique' => false,
                                    'onDelete' => 'CASCADE',
                                    'columnDefinition' => null,
                                ],
                            ],
                            'type' => 2,
                            'mappedBy' => null,
                            'isOwningSide' => true,
                            'sourceEntity' => 'Mautic\\PluginBundle\\Entity\\Integration',
                            'fetch' => 2,
                            'cascade' => [],
                            'isCascadeRemove' => false,
                            'isCascadePersist' => false,
                            'isCascadeRefresh' => false,
                            'isCascadeMerge' => false,
                            'isCascadeDetach' => false,
                            'sourceToTargetKeyColumns' => [
                                'plugin_id' => 'id',
                            ],
                            'joinColumnFieldNames' => [
                                'plugin_id' => 'plugin_id',
                            ],
                            'targetToSourceKeyColumns' => [
                                'id' => 'plugin_id',
                            ],
                            'orphanRemoval' => false,
                        ],
                    ],
                ],
                'idGenerator' => [
                    $o[1],
                ],
                'changeTrackingPolicy' => [
                    2,
                ],
            ],
        ],
        $o[0],
        []
    );
},
67 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ClassMetadata')),
            clone ($p['Doctrine\\ORM\\Id\\AssignedGenerator'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Id\\AssignedGenerator')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'Mautic\\PointBundle\\Entity\\LeadTriggerLog',
                ],
                'namespace' => [
                    'Mautic\\PointBundle\\Entity',
                ],
                'rootEntityName' => [
                    'Mautic\\PointBundle\\Entity\\LeadTriggerLog',
                ],
                'customRepositoryClassName' => [
                    'Mautic\\PointBundle\\Entity\\LeadTriggerLogRepository',
                ],
                'identifier' => [
                    [
                        'event',
                        'lead',
                    ],
                ],
                'fieldMappings' => [
                    [
                        'dateFired' => [
                            'fieldName' => 'dateFired',
                            'type' => 'datetime',
                            'columnName' => 'date_fired',
                        ],
                    ],
                ],
                'fieldNames' => [
                    [
                        'date_fired' => 'dateFired',
                    ],
                ],
                'columnNames' => [
                    [
                        'dateFired' => 'date_fired',
                    ],
                ],
                'table' => [
                    [
                        'name' => 'point_lead_event_log',
                        'indexes' => [],
                        'uniqueConstraints' => [],
                    ],
                ],
                'associationMappings' => [
                    [
                        'event' => [
                            'fieldName' => 'event',
                            'targetEntity' => 'Mautic\\PointBundle\\Entity\\TriggerEvent',
                            'id' => true,
                            'inversedBy' => 'log',
                            'joinColumns' => [
                                [
                                    'name' => 'event_id',
                                    'referencedColumnName' => 'id',
                                    'nullable' => false,
                                    'unique' => false,
                                    'onDelete' => 'CASCADE',
                                    'columnDefinition' => null,
                                ],
                            ],
                            'type' => 2,
                            'mappedBy' => null,
                            'isOwningSide' => true,
                            'sourceEntity' => 'Mautic\\PointBundle\\Entity\\LeadTriggerLog',
                            'fetch' => 2,
                            'cascade' => [],
                            'isCascadeRemove' => false,
                            'isCascadePersist' => false,
                            'isCascadeRefresh' => false,
                            'isCascadeMerge' => false,
                            'isCascadeDetach' => false,
                            'sourceToTargetKeyColumns' => [
                                'event_id' => 'id',
                            ],
                            'joinColumnFieldNames' => [
                                'event_id' => 'event_id',
                            ],
                            'targetToSourceKeyColumns' => [
                                'id' => 'event_id',
                            ],
                            'orphanRemoval' => false,
                        ],
                        'lead' => [
                            'fieldName' => 'lead',
                            'targetEntity' => 'Mautic\\LeadBundle\\Entity\\Lead',
                            'id' => true,
                            'joinColumns' => [
                                [
                                    'name' => 'lead_id',
                                    'referencedColumnName' => 'id',
                                    'nullable' => false,
                                    'unique' => false,
                                    'onDelete' => 'CASCADE',
                                    'columnDefinition' => null,
                                ],
                            ],
                            'type' => 2,
                            'mappedBy' => null,
                            'inversedBy' => null,
                            'isOwningSide' => true,
                            'sourceEntity' => 'Mautic\\PointBundle\\Entity\\LeadTriggerLog',
                            'fetch' => 2,
                            'cascade' => [],
                            'isCascadeRemove' => false,
                            'isCascadePersist' => false,
                            'isCascadeRefresh' => false,
                            'isCascadeMerge' => false,
                            'isCascadeDetach' => false,
                            'sourceToTargetKeyColumns' => [
                                'lead_id' => 'id',
                            ],
                            'joinColumnFieldNames' => [
                                'lead_id' => 'lead_id',
                            ],
                            'targetToSourceKeyColumns' => [
                                'id' => 'lead_id',
                            ],
                            'orphanRemoval' => false,
                        ],
                        'ipAddress' => [
                            'fieldName' => 'ipAddress',
                            'targetEntity' => 'Mautic\\CoreBundle\\Entity\\IpAddress',
                            'cascade' => [
                                'persist',
                                'merge',
                                'detach',
                            ],
                            'joinColumns' => [
                                [
                                    'name' => 'ip_id',
                                    'referencedColumnName' => 'id',
                                    'nullable' => true,
                                    'unique' => false,
                                    'onDelete' => null,
                                    'columnDefinition' => null,
                                ],
                            ],
                            'type' => 2,
                            'mappedBy' => null,
                            'inversedBy' => null,
                            'isOwningSide' => true,
                            'sourceEntity' => 'Mautic\\PointBundle\\Entity\\LeadTriggerLog',
                            'fetch' => 2,
                            'isCascadeRemove' => false,
                            'isCascadePersist' => true,
                            'isCascadeRefresh' => false,
                            'isCascadeMerge' => true,
                            'isCascadeDetach' => true,
                            'sourceToTargetKeyColumns' => [
                                'ip_id' => 'id',
                            ],
                            'joinColumnFieldNames' => [
                                'ip_id' => 'ip_id',
                            ],
                            'targetToSourceKeyColumns' => [
                                'id' => 'ip_id',
                            ],
                            'orphanRemoval' => false,
                        ],
                    ],
                ],
                'isIdentifierComposite' => [
                    true,
                ],
                'containsForeignIdentifier' => [
                    true,
                ],
                'idGenerator' => [
                    $o[1],
                ],
                'changeTrackingPolicy' => [
                    2,
                ],
            ],
        ],
        $o[0],
        []
    );
},
68 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ClassMetadata')),
            clone ($p['Doctrine\\ORM\\Id\\AssignedGenerator'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Id\\AssignedGenerator')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'Mautic\\PointBundle\\Entity\\LeadPointLog',
                ],
                'namespace' => [
                    'Mautic\\PointBundle\\Entity',
                ],
                'rootEntityName' => [
                    'Mautic\\PointBundle\\Entity\\LeadPointLog',
                ],
                'customRepositoryClassName' => [
                    'Mautic\\PointBundle\\Entity\\LeadPointLogRepository',
                ],
                'identifier' => [
                    [
                        'point',
                        'lead',
                    ],
                ],
                'fieldMappings' => [
                    [
                        'dateFired' => [
                            'fieldName' => 'dateFired',
                            'type' => 'datetime',
                            'columnName' => 'date_fired',
                        ],
                    ],
                ],
                'fieldNames' => [
                    [
                        'date_fired' => 'dateFired',
                    ],
                ],
                'columnNames' => [
                    [
                        'dateFired' => 'date_fired',
                    ],
                ],
                'table' => [
                    [
                        'name' => 'point_lead_action_log',
                        'indexes' => [],
                        'uniqueConstraints' => [],
                    ],
                ],
                'associationMappings' => [
                    [
                        'point' => [
                            'fieldName' => 'point',
                            'targetEntity' => 'Mautic\\PointBundle\\Entity\\Point',
                            'id' => true,
                            'inversedBy' => 'log',
                            'joinColumns' => [
                                [
                                    'name' => 'point_id',
                                    'referencedColumnName' => 'id',
                                    'nullable' => true,
                                    'unique' => false,
                                    'onDelete' => 'CASCADE',
                                    'columnDefinition' => null,
                                ],
                            ],
                            'type' => 2,
                            'mappedBy' => null,
                            'isOwningSide' => true,
                            'sourceEntity' => 'Mautic\\PointBundle\\Entity\\LeadPointLog',
                            'fetch' => 2,
                            'cascade' => [],
                            'isCascadeRemove' => false,
                            'isCascadePersist' => false,
                            'isCascadeRefresh' => false,
                            'isCascadeMerge' => false,
                            'isCascadeDetach' => false,
                            'sourceToTargetKeyColumns' => [
                                'point_id' => 'id',
                            ],
                            'joinColumnFieldNames' => [
                                'point_id' => 'point_id',
                            ],
                            'targetToSourceKeyColumns' => [
                                'id' => 'point_id',
                            ],
                            'orphanRemoval' => false,
                        ],
                        'lead' => [
                            'fieldName' => 'lead',
                            'targetEntity' => 'Mautic\\LeadBundle\\Entity\\Lead',
                            'id' => true,
                            'joinColumns' => [
                                [
                                    'name' => 'lead_id',
                                    'referencedColumnName' => 'id',
                                    'nullable' => false,
                                    'unique' => false,
                                    'onDelete' => 'CASCADE',
                                    'columnDefinition' => null,
                                ],
                            ],
                            'type' => 2,
                            'mappedBy' => null,
                            'inversedBy' => null,
                            'isOwningSide' => true,
                            'sourceEntity' => 'Mautic\\PointBundle\\Entity\\LeadPointLog',
                            'fetch' => 2,
                            'cascade' => [],
                            'isCascadeRemove' => false,
                            'isCascadePersist' => false,
                            'isCascadeRefresh' => false,
                            'isCascadeMerge' => false,
                            'isCascadeDetach' => false,
                            'sourceToTargetKeyColumns' => [
                                'lead_id' => 'id',
                            ],
                            'joinColumnFieldNames' => [
                                'lead_id' => 'lead_id',
                            ],
                            'targetToSourceKeyColumns' => [
                                'id' => 'lead_id',
                            ],
                            'orphanRemoval' => false,
                        ],
                        'ipAddress' => [
                            'fieldName' => 'ipAddress',
                            'targetEntity' => 'Mautic\\CoreBundle\\Entity\\IpAddress',
                            'cascade' => [
                                'persist',
                                'merge',
                                'detach',
                            ],
                            'joinColumns' => [
                                [
                                    'name' => 'ip_id',
                                    'referencedColumnName' => 'id',
                                    'nullable' => true,
                                    'unique' => false,
                                    'onDelete' => null,
                                    'columnDefinition' => null,
                                ],
                            ],
                            'type' => 2,
                            'mappedBy' => null,
                            'inversedBy' => null,
                            'isOwningSide' => true,
                            'sourceEntity' => 'Mautic\\PointBundle\\Entity\\LeadPointLog',
                            'fetch' => 2,
                            'isCascadeRemove' => false,
                            'isCascadePersist' => true,
                            'isCascadeRefresh' => false,
                            'isCascadeMerge' => true,
                            'isCascadeDetach' => true,
                            'sourceToTargetKeyColumns' => [
                                'ip_id' => 'id',
                            ],
                            'joinColumnFieldNames' => [
                                'ip_id' => 'ip_id',
                            ],
                            'targetToSourceKeyColumns' => [
                                'id' => 'ip_id',
                            ],
                            'orphanRemoval' => false,
                        ],
                    ],
                ],
                'isIdentifierComposite' => [
                    true,
                ],
                'containsForeignIdentifier' => [
                    true,
                ],
                'idGenerator' => [
                    $o[1],
                ],
                'changeTrackingPolicy' => [
                    2,
                ],
            ],
        ],
        $o[0],
        []
    );
},
69 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ClassMetadata')),
            clone ($p['Doctrine\\ORM\\Id\\IdentityGenerator'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Id\\IdentityGenerator')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'Mautic\\PointBundle\\Entity\\TriggerEvent',
                ],
                'namespace' => [
                    'Mautic\\PointBundle\\Entity',
                ],
                'rootEntityName' => [
                    'Mautic\\PointBundle\\Entity\\TriggerEvent',
                ],
                'customRepositoryClassName' => [
                    'Mautic\\PointBundle\\Entity\\TriggerEventRepository',
                ],
                'identifier' => [
                    [
                        'id',
                    ],
                ],
                'generatorType' => [
                    4,
                ],
                'fieldMappings' => [
                    [
                        'id' => [
                            'fieldName' => 'id',
                            'type' => 'integer',
                            'id' => true,
                            'options' => [
                                'unsigned' => true,
                            ],
                            'columnName' => 'id',
                        ],
                        'name' => [
                            'fieldName' => 'name',
                            'type' => 'string',
                            'length' => 191,
                            'columnName' => 'name',
                        ],
                        'description' => [
                            'fieldName' => 'description',
                            'type' => 'text',
                            'nullable' => true,
                            'columnName' => 'description',
                        ],
                        'type' => [
                            'fieldName' => 'type',
                            'type' => 'string',
                            'length' => 50,
                            'columnName' => 'type',
                        ],
                        'order' => [
                            'fieldName' => 'order',
                            'type' => 'integer',
                            'columnName' => 'action_order',
                        ],
                        'properties' => [
                            'fieldName' => 'properties',
                            'type' => 'array',
                            'columnName' => 'properties',
                        ],
                    ],
                ],
                'fieldNames' => [
                    [
                        'id' => 'id',
                        'name' => 'name',
                        'description' => 'description',
                        'type' => 'type',
                        'action_order' => 'order',
                        'properties' => 'properties',
                    ],
                ],
                'columnNames' => [
                    [
                        'id' => 'id',
                        'name' => 'name',
                        'description' => 'description',
                        'type' => 'type',
                        'order' => 'action_order',
                        'properties' => 'properties',
                    ],
                ],
                'table' => [
                    [
                        'name' => 'point_trigger_events',
                        'indexes' => [
                            'trigger_type_search' => [
                                'columns' => [
                                    'type',
                                ],
                            ],
                        ],
                        'uniqueConstraints' => [],
                    ],
                ],
                'associationMappings' => [
                    [
                        'trigger' => [
                            'fieldName' => 'trigger',
                            'targetEntity' => 'Mautic\\PointBundle\\Entity\\Trigger',
                            'inversedBy' => 'events',
                            'joinColumns' => [
                                [
                                    'name' => 'trigger_id',
                                    'referencedColumnName' => 'id',
                                    'nullable' => false,
                                    'unique' => false,
                                    'onDelete' => 'CASCADE',
                                    'columnDefinition' => null,
                                ],
                            ],
                            'type' => 2,
                            'mappedBy' => null,
                            'isOwningSide' => true,
                            'sourceEntity' => 'Mautic\\PointBundle\\Entity\\TriggerEvent',
                            'fetch' => 2,
                            'cascade' => [],
                            'isCascadeRemove' => false,
                            'isCascadePersist' => false,
                            'isCascadeRefresh' => false,
                            'isCascadeMerge' => false,
                            'isCascadeDetach' => false,
                            'sourceToTargetKeyColumns' => [
                                'trigger_id' => 'id',
                            ],
                            'joinColumnFieldNames' => [
                                'trigger_id' => 'trigger_id',
                            ],
                            'targetToSourceKeyColumns' => [
                                'id' => 'trigger_id',
                            ],
                            'orphanRemoval' => false,
                        ],
                        'log' => [
                            'fieldName' => 'log',
                            'targetEntity' => 'Mautic\\PointBundle\\Entity\\LeadTriggerLog',
                            'mappedBy' => 'event',
                            'cascade' => [
                                'persist',
                                'remove',
                            ],
                            'fetch' => 4,
                            'type' => 4,
                            'inversedBy' => null,
                            'isOwningSide' => false,
                            'sourceEntity' => 'Mautic\\PointBundle\\Entity\\TriggerEvent',
                            'isCascadeRemove' => true,
                            'isCascadePersist' => true,
                            'isCascadeRefresh' => false,
                            'isCascadeMerge' => false,
                            'isCascadeDetach' => false,
                            'orphanRemoval' => false,
                        ],
                    ],
                ],
                'idGenerator' => [
                    $o[1],
                ],
                'changeTrackingPolicy' => [
                    2,
                ],
            ],
        ],
        $o[0],
        []
    );
},
70 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ClassMetadata')),
            clone ($p['Doctrine\\ORM\\Id\\IdentityGenerator'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Id\\IdentityGenerator')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'Mautic\\PointBundle\\Entity\\Trigger',
                ],
                'namespace' => [
                    'Mautic\\PointBundle\\Entity',
                ],
                'rootEntityName' => [
                    'Mautic\\PointBundle\\Entity\\Trigger',
                ],
                'customRepositoryClassName' => [
                    'Mautic\\PointBundle\\Entity\\TriggerRepository',
                ],
                'identifier' => [
                    [
                        'id',
                    ],
                ],
                'generatorType' => [
                    4,
                ],
                'fieldMappings' => [
                    [
                        'isPublished' => [
                            'fieldName' => 'isPublished',
                            'type' => 'boolean',
                            'columnName' => 'is_published',
                            'declared' => 'Mautic\\CoreBundle\\Entity\\FormEntity',
                        ],
                        'dateAdded' => [
                            'fieldName' => 'dateAdded',
                            'type' => 'datetime',
                            'columnName' => 'date_added',
                            'nullable' => true,
                            'declared' => 'Mautic\\CoreBundle\\Entity\\FormEntity',
                        ],
                        'createdBy' => [
                            'fieldName' => 'createdBy',
                            'type' => 'integer',
                            'columnName' => 'created_by',
                            'nullable' => true,
                            'declared' => 'Mautic\\CoreBundle\\Entity\\FormEntity',
                        ],
                        'createdByUser' => [
                            'fieldName' => 'createdByUser',
                            'type' => 'string',
                            'length' => 191,
                            'columnName' => 'created_by_user',
                            'nullable' => true,
                            'declared' => 'Mautic\\CoreBundle\\Entity\\FormEntity',
                        ],
                        'dateModified' => [
                            'fieldName' => 'dateModified',
                            'type' => 'datetime',
                            'columnName' => 'date_modified',
                            'nullable' => true,
                            'declared' => 'Mautic\\CoreBundle\\Entity\\FormEntity',
                        ],
                        'modifiedBy' => [
                            'fieldName' => 'modifiedBy',
                            'type' => 'integer',
                            'columnName' => 'modified_by',
                            'nullable' => true,
                            'declared' => 'Mautic\\CoreBundle\\Entity\\FormEntity',
                        ],
                        'modifiedByUser' => [
                            'fieldName' => 'modifiedByUser',
                            'type' => 'string',
                            'length' => 191,
                            'columnName' => 'modified_by_user',
                            'nullable' => true,
                            'declared' => 'Mautic\\CoreBundle\\Entity\\FormEntity',
                        ],
                        'checkedOut' => [
                            'fieldName' => 'checkedOut',
                            'type' => 'datetime',
                            'columnName' => 'checked_out',
                            'nullable' => true,
                            'declared' => 'Mautic\\CoreBundle\\Entity\\FormEntity',
                        ],
                        'checkedOutBy' => [
                            'fieldName' => 'checkedOutBy',
                            'type' => 'integer',
                            'columnName' => 'checked_out_by',
                            'nullable' => true,
                            'declared' => 'Mautic\\CoreBundle\\Entity\\FormEntity',
                        ],
                        'checkedOutByUser' => [
                            'fieldName' => 'checkedOutByUser',
                            'type' => 'string',
                            'length' => 191,
                            'columnName' => 'checked_out_by_user',
                            'nullable' => true,
                            'declared' => 'Mautic\\CoreBundle\\Entity\\FormEntity',
                        ],
                        'id' => [
                            'fieldName' => 'id',
                            'type' => 'integer',
                            'id' => true,
                            'options' => [
                                'unsigned' => true,
                            ],
                            'columnName' => 'id',
                        ],
                        'name' => [
                            'fieldName' => 'name',
                            'type' => 'string',
                            'length' => 191,
                            'columnName' => 'name',
                        ],
                        'description' => [
                            'fieldName' => 'description',
                            'type' => 'text',
                            'nullable' => true,
                            'columnName' => 'description',
                        ],
                        'publishUp' => [
                            'fieldName' => 'publishUp',
                            'type' => 'datetime',
                            'columnName' => 'publish_up',
                            'nullable' => true,
                        ],
                        'publishDown' => [
                            'fieldName' => 'publishDown',
                            'type' => 'datetime',
                            'columnName' => 'publish_down',
                            'nullable' => true,
                        ],
                        'points' => [
                            'fieldName' => 'points',
                            'type' => 'integer',
                            'columnName' => 'points',
                        ],
                        'color' => [
                            'fieldName' => 'color',
                            'type' => 'string',
                            'length' => 7,
                            'columnName' => 'color',
                        ],
                        'triggerExistingLeads' => [
                            'fieldName' => 'triggerExistingLeads',
                            'type' => 'boolean',
                            'columnName' => 'trigger_existing_leads',
                        ],
                    ],
                ],
                'fieldNames' => [
                    [
                        'is_published' => 'isPublished',
                        'date_added' => 'dateAdded',
                        'created_by' => 'createdBy',
                        'created_by_user' => 'createdByUser',
                        'date_modified' => 'dateModified',
                        'modified_by' => 'modifiedBy',
                        'modified_by_user' => 'modifiedByUser',
                        'checked_out' => 'checkedOut',
                        'checked_out_by' => 'checkedOutBy',
                        'checked_out_by_user' => 'checkedOutByUser',
                        'id' => 'id',
                        'name' => 'name',
                        'description' => 'description',
                        'publish_up' => 'publishUp',
                        'publish_down' => 'publishDown',
                        'points' => 'points',
                        'color' => 'color',
                        'trigger_existing_leads' => 'triggerExistingLeads',
                    ],
                ],
                'columnNames' => [
                    [
                        'isPublished' => 'is_published',
                        'dateAdded' => 'date_added',
                        'createdBy' => 'created_by',
                        'createdByUser' => 'created_by_user',
                        'dateModified' => 'date_modified',
                        'modifiedBy' => 'modified_by',
                        'modifiedByUser' => 'modified_by_user',
                        'checkedOut' => 'checked_out',
                        'checkedOutBy' => 'checked_out_by',
                        'checkedOutByUser' => 'checked_out_by_user',
                        'id' => 'id',
                        'name' => 'name',
                        'description' => 'description',
                        'publishUp' => 'publish_up',
                        'publishDown' => 'publish_down',
                        'points' => 'points',
                        'color' => 'color',
                        'triggerExistingLeads' => 'trigger_existing_leads',
                    ],
                ],
                'table' => [
                    [
                        'name' => 'point_triggers',
                        'indexes' => [],
                        'uniqueConstraints' => [],
                    ],
                ],
                'associationMappings' => [
                    [
                        'category' => [
                            'fieldName' => 'category',
                            'targetEntity' => 'Mautic\\CategoryBundle\\Entity\\Category',
                            'cascade' => [
                                'merge',
                                'detach',
                            ],
                            'joinColumns' => [
                                [
                                    'name' => 'category_id',
                                    'referencedColumnName' => 'id',
                                    'nullable' => true,
                                    'unique' => false,
                                    'onDelete' => 'SET NULL',
                                    'columnDefinition' => null,
                                ],
                            ],
                            'type' => 2,
                            'mappedBy' => null,
                            'inversedBy' => null,
                            'isOwningSide' => true,
                            'sourceEntity' => 'Mautic\\PointBundle\\Entity\\Trigger',
                            'fetch' => 2,
                            'isCascadeRemove' => false,
                            'isCascadePersist' => false,
                            'isCascadeRefresh' => false,
                            'isCascadeMerge' => true,
                            'isCascadeDetach' => true,
                            'sourceToTargetKeyColumns' => [
                                'category_id' => 'id',
                            ],
                            'joinColumnFieldNames' => [
                                'category_id' => 'category_id',
                            ],
                            'targetToSourceKeyColumns' => [
                                'id' => 'category_id',
                            ],
                            'orphanRemoval' => false,
                        ],
                        'events' => [
                            'fieldName' => 'events',
                            'targetEntity' => 'Mautic\\PointBundle\\Entity\\TriggerEvent',
                            'indexBy' => 'id',
                            'orderBy' => [
                                'order' => 'ASC',
                            ],
                            'mappedBy' => 'trigger',
                            'cascade' => [
                                'remove',
                                'persist',
                                'refresh',
                                'merge',
                                'detach',
                            ],
                            'fetch' => 4,
                            'type' => 4,
                            'inversedBy' => null,
                            'isOwningSide' => false,
                            'sourceEntity' => 'Mautic\\PointBundle\\Entity\\Trigger',
                            'isCascadeRemove' => true,
                            'isCascadePersist' => true,
                            'isCascadeRefresh' => true,
                            'isCascadeMerge' => true,
                            'isCascadeDetach' => true,
                            'orphanRemoval' => false,
                        ],
                    ],
                ],
                'idGenerator' => [
                    $o[1],
                ],
                'changeTrackingPolicy' => [
                    2,
                ],
            ],
        ],
        $o[0],
        []
    );
},
71 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ClassMetadata')),
            clone ($p['Doctrine\\ORM\\Id\\IdentityGenerator'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Id\\IdentityGenerator')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'Mautic\\PointBundle\\Entity\\Point',
                ],
                'namespace' => [
                    'Mautic\\PointBundle\\Entity',
                ],
                'rootEntityName' => [
                    'Mautic\\PointBundle\\Entity\\Point',
                ],
                'customRepositoryClassName' => [
                    'Mautic\\PointBundle\\Entity\\PointRepository',
                ],
                'identifier' => [
                    [
                        'id',
                    ],
                ],
                'generatorType' => [
                    4,
                ],
                'fieldMappings' => [
                    [
                        'isPublished' => [
                            'fieldName' => 'isPublished',
                            'type' => 'boolean',
                            'columnName' => 'is_published',
                            'declared' => 'Mautic\\CoreBundle\\Entity\\FormEntity',
                        ],
                        'dateAdded' => [
                            'fieldName' => 'dateAdded',
                            'type' => 'datetime',
                            'columnName' => 'date_added',
                            'nullable' => true,
                            'declared' => 'Mautic\\CoreBundle\\Entity\\FormEntity',
                        ],
                        'createdBy' => [
                            'fieldName' => 'createdBy',
                            'type' => 'integer',
                            'columnName' => 'created_by',
                            'nullable' => true,
                            'declared' => 'Mautic\\CoreBundle\\Entity\\FormEntity',
                        ],
                        'createdByUser' => [
                            'fieldName' => 'createdByUser',
                            'type' => 'string',
                            'length' => 191,
                            'columnName' => 'created_by_user',
                            'nullable' => true,
                            'declared' => 'Mautic\\CoreBundle\\Entity\\FormEntity',
                        ],
                        'dateModified' => [
                            'fieldName' => 'dateModified',
                            'type' => 'datetime',
                            'columnName' => 'date_modified',
                            'nullable' => true,
                            'declared' => 'Mautic\\CoreBundle\\Entity\\FormEntity',
                        ],
                        'modifiedBy' => [
                            'fieldName' => 'modifiedBy',
                            'type' => 'integer',
                            'columnName' => 'modified_by',
                            'nullable' => true,
                            'declared' => 'Mautic\\CoreBundle\\Entity\\FormEntity',
                        ],
                        'modifiedByUser' => [
                            'fieldName' => 'modifiedByUser',
                            'type' => 'string',
                            'length' => 191,
                            'columnName' => 'modified_by_user',
                            'nullable' => true,
                            'declared' => 'Mautic\\CoreBundle\\Entity\\FormEntity',
                        ],
                        'checkedOut' => [
                            'fieldName' => 'checkedOut',
                            'type' => 'datetime',
                            'columnName' => 'checked_out',
                            'nullable' => true,
                            'declared' => 'Mautic\\CoreBundle\\Entity\\FormEntity',
                        ],
                        'checkedOutBy' => [
                            'fieldName' => 'checkedOutBy',
                            'type' => 'integer',
                            'columnName' => 'checked_out_by',
                            'nullable' => true,
                            'declared' => 'Mautic\\CoreBundle\\Entity\\FormEntity',
                        ],
                        'checkedOutByUser' => [
                            'fieldName' => 'checkedOutByUser',
                            'type' => 'string',
                            'length' => 191,
                            'columnName' => 'checked_out_by_user',
                            'nullable' => true,
                            'declared' => 'Mautic\\CoreBundle\\Entity\\FormEntity',
                        ],
                        'id' => [
                            'fieldName' => 'id',
                            'type' => 'integer',
                            'id' => true,
                            'options' => [
                                'unsigned' => true,
                            ],
                            'columnName' => 'id',
                        ],
                        'name' => [
                            'fieldName' => 'name',
                            'type' => 'string',
                            'length' => 191,
                            'columnName' => 'name',
                        ],
                        'description' => [
                            'fieldName' => 'description',
                            'type' => 'text',
                            'nullable' => true,
                            'columnName' => 'description',
                        ],
                        'type' => [
                            'fieldName' => 'type',
                            'type' => 'string',
                            'length' => 50,
                            'columnName' => 'type',
                        ],
                        'publishUp' => [
                            'fieldName' => 'publishUp',
                            'type' => 'datetime',
                            'columnName' => 'publish_up',
                            'nullable' => true,
                        ],
                        'publishDown' => [
                            'fieldName' => 'publishDown',
                            'type' => 'datetime',
                            'columnName' => 'publish_down',
                            'nullable' => true,
                        ],
                        'repeatable' => [
                            'fieldName' => 'repeatable',
                            'type' => 'boolean',
                            'columnName' => 'repeatable',
                        ],
                        'delta' => [
                            'fieldName' => 'delta',
                            'type' => 'integer',
                            'columnName' => 'delta',
                        ],
                        'properties' => [
                            'fieldName' => 'properties',
                            'type' => 'array',
                            'columnName' => 'properties',
                        ],
                    ],
                ],
                'fieldNames' => [
                    [
                        'is_published' => 'isPublished',
                        'date_added' => 'dateAdded',
                        'created_by' => 'createdBy',
                        'created_by_user' => 'createdByUser',
                        'date_modified' => 'dateModified',
                        'modified_by' => 'modifiedBy',
                        'modified_by_user' => 'modifiedByUser',
                        'checked_out' => 'checkedOut',
                        'checked_out_by' => 'checkedOutBy',
                        'checked_out_by_user' => 'checkedOutByUser',
                        'id' => 'id',
                        'name' => 'name',
                        'description' => 'description',
                        'type' => 'type',
                        'publish_up' => 'publishUp',
                        'publish_down' => 'publishDown',
                        'repeatable' => 'repeatable',
                        'delta' => 'delta',
                        'properties' => 'properties',
                    ],
                ],
                'columnNames' => [
                    [
                        'isPublished' => 'is_published',
                        'dateAdded' => 'date_added',
                        'createdBy' => 'created_by',
                        'createdByUser' => 'created_by_user',
                        'dateModified' => 'date_modified',
                        'modifiedBy' => 'modified_by',
                        'modifiedByUser' => 'modified_by_user',
                        'checkedOut' => 'checked_out',
                        'checkedOutBy' => 'checked_out_by',
                        'checkedOutByUser' => 'checked_out_by_user',
                        'id' => 'id',
                        'name' => 'name',
                        'description' => 'description',
                        'type' => 'type',
                        'publishUp' => 'publish_up',
                        'publishDown' => 'publish_down',
                        'repeatable' => 'repeatable',
                        'delta' => 'delta',
                        'properties' => 'properties',
                    ],
                ],
                'table' => [
                    [
                        'name' => 'points',
                        'indexes' => [
                            'point_type_search' => [
                                'columns' => [
                                    'type',
                                ],
                            ],
                        ],
                        'uniqueConstraints' => [],
                    ],
                ],
                'associationMappings' => [
                    [
                        'log' => [
                            'fieldName' => 'log',
                            'targetEntity' => 'Mautic\\PointBundle\\Entity\\LeadPointLog',
                            'mappedBy' => 'point',
                            'cascade' => [
                                'persist',
                                'remove',
                            ],
                            'fetch' => 4,
                            'type' => 4,
                            'inversedBy' => null,
                            'isOwningSide' => false,
                            'sourceEntity' => 'Mautic\\PointBundle\\Entity\\Point',
                            'isCascadeRemove' => true,
                            'isCascadePersist' => true,
                            'isCascadeRefresh' => false,
                            'isCascadeMerge' => false,
                            'isCascadeDetach' => false,
                            'orphanRemoval' => false,
                        ],
                        'category' => [
                            'fieldName' => 'category',
                            'targetEntity' => 'Mautic\\CategoryBundle\\Entity\\Category',
                            'cascade' => [
                                'merge',
                                'detach',
                            ],
                            'joinColumns' => [
                                [
                                    'name' => 'category_id',
                                    'referencedColumnName' => 'id',
                                    'nullable' => true,
                                    'unique' => false,
                                    'onDelete' => 'SET NULL',
                                    'columnDefinition' => null,
                                ],
                            ],
                            'type' => 2,
                            'mappedBy' => null,
                            'inversedBy' => null,
                            'isOwningSide' => true,
                            'sourceEntity' => 'Mautic\\PointBundle\\Entity\\Point',
                            'fetch' => 2,
                            'isCascadeRemove' => false,
                            'isCascadePersist' => false,
                            'isCascadeRefresh' => false,
                            'isCascadeMerge' => true,
                            'isCascadeDetach' => true,
                            'sourceToTargetKeyColumns' => [
                                'category_id' => 'id',
                            ],
                            'joinColumnFieldNames' => [
                                'category_id' => 'category_id',
                            ],
                            'targetToSourceKeyColumns' => [
                                'id' => 'category_id',
                            ],
                            'orphanRemoval' => false,
                        ],
                    ],
                ],
                'idGenerator' => [
                    $o[1],
                ],
                'changeTrackingPolicy' => [
                    2,
                ],
            ],
        ],
        $o[0],
        []
    );
},
72 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ClassMetadata')),
            clone ($p['Doctrine\\ORM\\Id\\IdentityGenerator'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Id\\IdentityGenerator')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'Mautic\\ReportBundle\\Entity\\Scheduler',
                ],
                'namespace' => [
                    'Mautic\\ReportBundle\\Entity',
                ],
                'rootEntityName' => [
                    'Mautic\\ReportBundle\\Entity\\Scheduler',
                ],
                'customRepositoryClassName' => [
                    'Mautic\\ReportBundle\\Entity\\SchedulerRepository',
                ],
                'identifier' => [
                    [
                        'id',
                    ],
                ],
                'generatorType' => [
                    4,
                ],
                'fieldMappings' => [
                    [
                        'id' => [
                            'fieldName' => 'id',
                            'type' => 'integer',
                            'id' => true,
                            'options' => [
                                'unsigned' => true,
                            ],
                            'columnName' => 'id',
                        ],
                        'scheduleDate' => [
                            'fieldName' => 'scheduleDate',
                            'type' => 'datetime',
                            'columnName' => 'schedule_date',
                            'nullable' => false,
                        ],
                    ],
                ],
                'fieldNames' => [
                    [
                        'id' => 'id',
                        'schedule_date' => 'scheduleDate',
                    ],
                ],
                'columnNames' => [
                    [
                        'id' => 'id',
                        'scheduleDate' => 'schedule_date',
                    ],
                ],
                'table' => [
                    [
                        'name' => 'reports_schedulers',
                        'indexes' => [],
                        'uniqueConstraints' => [],
                    ],
                ],
                'associationMappings' => [
                    [
                        'report' => [
                            'fieldName' => 'report',
                            'targetEntity' => 'Mautic\\ReportBundle\\Entity\\Report',
                            'joinColumns' => [
                                [
                                    'name' => 'report_id',
                                    'referencedColumnName' => 'id',
                                    'nullable' => false,
                                    'unique' => false,
                                    'onDelete' => 'CASCADE',
                                    'columnDefinition' => null,
                                ],
                            ],
                            'type' => 2,
                            'mappedBy' => null,
                            'inversedBy' => null,
                            'isOwningSide' => true,
                            'sourceEntity' => 'Mautic\\ReportBundle\\Entity\\Scheduler',
                            'fetch' => 2,
                            'cascade' => [],
                            'isCascadeRemove' => false,
                            'isCascadePersist' => false,
                            'isCascadeRefresh' => false,
                            'isCascadeMerge' => false,
                            'isCascadeDetach' => false,
                            'sourceToTargetKeyColumns' => [
                                'report_id' => 'id',
                            ],
                            'joinColumnFieldNames' => [
                                'report_id' => 'report_id',
                            ],
                            'targetToSourceKeyColumns' => [
                                'id' => 'report_id',
                            ],
                            'orphanRemoval' => false,
                        ],
                    ],
                ],
                'idGenerator' => [
                    $o[1],
                ],
                'changeTrackingPolicy' => [
                    2,
                ],
            ],
        ],
        $o[0],
        []
    );
},
73 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ClassMetadata')),
            clone ($p['Doctrine\\ORM\\Id\\IdentityGenerator'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Id\\IdentityGenerator')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'Mautic\\ReportBundle\\Entity\\Report',
                ],
                'namespace' => [
                    'Mautic\\ReportBundle\\Entity',
                ],
                'rootEntityName' => [
                    'Mautic\\ReportBundle\\Entity\\Report',
                ],
                'customRepositoryClassName' => [
                    'Mautic\\ReportBundle\\Entity\\ReportRepository',
                ],
                'identifier' => [
                    [
                        'id',
                    ],
                ],
                'generatorType' => [
                    4,
                ],
                'fieldMappings' => [
                    [
                        'isPublished' => [
                            'fieldName' => 'isPublished',
                            'type' => 'boolean',
                            'columnName' => 'is_published',
                            'declared' => 'Mautic\\CoreBundle\\Entity\\FormEntity',
                        ],
                        'dateAdded' => [
                            'fieldName' => 'dateAdded',
                            'type' => 'datetime',
                            'columnName' => 'date_added',
                            'nullable' => true,
                            'declared' => 'Mautic\\CoreBundle\\Entity\\FormEntity',
                        ],
                        'createdBy' => [
                            'fieldName' => 'createdBy',
                            'type' => 'integer',
                            'columnName' => 'created_by',
                            'nullable' => true,
                            'declared' => 'Mautic\\CoreBundle\\Entity\\FormEntity',
                        ],
                        'createdByUser' => [
                            'fieldName' => 'createdByUser',
                            'type' => 'string',
                            'length' => 191,
                            'columnName' => 'created_by_user',
                            'nullable' => true,
                            'declared' => 'Mautic\\CoreBundle\\Entity\\FormEntity',
                        ],
                        'dateModified' => [
                            'fieldName' => 'dateModified',
                            'type' => 'datetime',
                            'columnName' => 'date_modified',
                            'nullable' => true,
                            'declared' => 'Mautic\\CoreBundle\\Entity\\FormEntity',
                        ],
                        'modifiedBy' => [
                            'fieldName' => 'modifiedBy',
                            'type' => 'integer',
                            'columnName' => 'modified_by',
                            'nullable' => true,
                            'declared' => 'Mautic\\CoreBundle\\Entity\\FormEntity',
                        ],
                        'modifiedByUser' => [
                            'fieldName' => 'modifiedByUser',
                            'type' => 'string',
                            'length' => 191,
                            'columnName' => 'modified_by_user',
                            'nullable' => true,
                            'declared' => 'Mautic\\CoreBundle\\Entity\\FormEntity',
                        ],
                        'checkedOut' => [
                            'fieldName' => 'checkedOut',
                            'type' => 'datetime',
                            'columnName' => 'checked_out',
                            'nullable' => true,
                            'declared' => 'Mautic\\CoreBundle\\Entity\\FormEntity',
                        ],
                        'checkedOutBy' => [
                            'fieldName' => 'checkedOutBy',
                            'type' => 'integer',
                            'columnName' => 'checked_out_by',
                            'nullable' => true,
                            'declared' => 'Mautic\\CoreBundle\\Entity\\FormEntity',
                        ],
                        'checkedOutByUser' => [
                            'fieldName' => 'checkedOutByUser',
                            'type' => 'string',
                            'length' => 191,
                            'columnName' => 'checked_out_by_user',
                            'nullable' => true,
                            'declared' => 'Mautic\\CoreBundle\\Entity\\FormEntity',
                        ],
                        'id' => [
                            'fieldName' => 'id',
                            'type' => 'integer',
                            'id' => true,
                            'options' => [
                                'unsigned' => true,
                            ],
                            'columnName' => 'id',
                        ],
                        'name' => [
                            'fieldName' => 'name',
                            'type' => 'string',
                            'length' => 191,
                            'columnName' => 'name',
                        ],
                        'description' => [
                            'fieldName' => 'description',
                            'type' => 'text',
                            'nullable' => true,
                            'columnName' => 'description',
                        ],
                        'system' => [
                            'columnName' => 'system',
                            'fieldName' => 'system',
                            'type' => 'boolean',
                            'quoted' => true,
                        ],
                        'source' => [
                            'length' => 191,
                            'fieldName' => 'source',
                            'type' => 'string',
                            'columnName' => 'source',
                        ],
                        'columns' => [
                            'fieldName' => 'columns',
                            'type' => 'array',
                            'nullable' => true,
                            'columnName' => 'columns',
                        ],
                        'filters' => [
                            'fieldName' => 'filters',
                            'type' => 'array',
                            'nullable' => true,
                            'columnName' => 'filters',
                        ],
                        'tableOrder' => [
                            'fieldName' => 'tableOrder',
                            'type' => 'array',
                            'columnName' => 'table_order',
                            'nullable' => true,
                        ],
                        'graphs' => [
                            'fieldName' => 'graphs',
                            'type' => 'array',
                            'nullable' => true,
                            'columnName' => 'graphs',
                        ],
                        'groupBy' => [
                            'fieldName' => 'groupBy',
                            'type' => 'array',
                            'columnName' => 'group_by',
                            'nullable' => true,
                        ],
                        'aggregators' => [
                            'fieldName' => 'aggregators',
                            'type' => 'array',
                            'columnName' => 'aggregators',
                            'nullable' => true,
                        ],
                        'settings' => [
                            'fieldName' => 'settings',
                            'type' => 'json_array',
                            'columnName' => 'settings',
                            'nullable' => true,
                        ],
                        'isScheduled' => [
                            'fieldName' => 'isScheduled',
                            'type' => 'boolean',
                            'columnName' => 'is_scheduled',
                        ],
                        'scheduleUnit' => [
                            'fieldName' => 'scheduleUnit',
                            'type' => 'string',
                            'length' => 191,
                            'nullable' => true,
                            'columnName' => 'schedule_unit',
                        ],
                        'toAddress' => [
                            'fieldName' => 'toAddress',
                            'type' => 'string',
                            'length' => 191,
                            'nullable' => true,
                            'columnName' => 'to_address',
                        ],
                        'scheduleDay' => [
                            'fieldName' => 'scheduleDay',
                            'type' => 'string',
                            'length' => 191,
                            'nullable' => true,
                            'columnName' => 'schedule_day',
                        ],
                        'scheduleMonthFrequency' => [
                            'fieldName' => 'scheduleMonthFrequency',
                            'type' => 'string',
                            'length' => 191,
                            'nullable' => true,
                            'columnName' => 'schedule_month_frequency',
                        ],
                    ],
                ],
                'fieldNames' => [
                    [
                        'is_published' => 'isPublished',
                        'date_added' => 'dateAdded',
                        'created_by' => 'createdBy',
                        'created_by_user' => 'createdByUser',
                        'date_modified' => 'dateModified',
                        'modified_by' => 'modifiedBy',
                        'modified_by_user' => 'modifiedByUser',
                        'checked_out' => 'checkedOut',
                        'checked_out_by' => 'checkedOutBy',
                        'checked_out_by_user' => 'checkedOutByUser',
                        'id' => 'id',
                        'name' => 'name',
                        'description' => 'description',
                        'system' => 'system',
                        'source' => 'source',
                        'columns' => 'columns',
                        'filters' => 'filters',
                        'table_order' => 'tableOrder',
                        'graphs' => 'graphs',
                        'group_by' => 'groupBy',
                        'aggregators' => 'aggregators',
                        'settings' => 'settings',
                        'is_scheduled' => 'isScheduled',
                        'schedule_unit' => 'scheduleUnit',
                        'to_address' => 'toAddress',
                        'schedule_day' => 'scheduleDay',
                        'schedule_month_frequency' => 'scheduleMonthFrequency',
                    ],
                ],
                'columnNames' => [
                    [
                        'isPublished' => 'is_published',
                        'dateAdded' => 'date_added',
                        'createdBy' => 'created_by',
                        'createdByUser' => 'created_by_user',
                        'dateModified' => 'date_modified',
                        'modifiedBy' => 'modified_by',
                        'modifiedByUser' => 'modified_by_user',
                        'checkedOut' => 'checked_out',
                        'checkedOutBy' => 'checked_out_by',
                        'checkedOutByUser' => 'checked_out_by_user',
                        'id' => 'id',
                        'name' => 'name',
                        'description' => 'description',
                        'system' => 'system',
                        'source' => 'source',
                        'columns' => 'columns',
                        'filters' => 'filters',
                        'tableOrder' => 'table_order',
                        'graphs' => 'graphs',
                        'groupBy' => 'group_by',
                        'aggregators' => 'aggregators',
                        'settings' => 'settings',
                        'isScheduled' => 'is_scheduled',
                        'scheduleUnit' => 'schedule_unit',
                        'toAddress' => 'to_address',
                        'scheduleDay' => 'schedule_day',
                        'scheduleMonthFrequency' => 'schedule_month_frequency',
                    ],
                ],
                'table' => [
                    [
                        'name' => 'reports',
                        'indexes' => [],
                        'uniqueConstraints' => [],
                    ],
                ],
                'idGenerator' => [
                    $o[1],
                ],
                'changeTrackingPolicy' => [
                    2,
                ],
            ],
        ],
        $o[0],
        []
    );
},
74 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ClassMetadata')),
            clone ($p['Doctrine\\ORM\\Id\\IdentityGenerator'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Id\\IdentityGenerator')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'Mautic\\SmsBundle\\Entity\\Sms',
                ],
                'namespace' => [
                    'Mautic\\SmsBundle\\Entity',
                ],
                'rootEntityName' => [
                    'Mautic\\SmsBundle\\Entity\\Sms',
                ],
                'customRepositoryClassName' => [
                    'Mautic\\SmsBundle\\Entity\\SmsRepository',
                ],
                'identifier' => [
                    [
                        'id',
                    ],
                ],
                'generatorType' => [
                    4,
                ],
                'fieldMappings' => [
                    [
                        'isPublished' => [
                            'fieldName' => 'isPublished',
                            'type' => 'boolean',
                            'columnName' => 'is_published',
                            'declared' => 'Mautic\\CoreBundle\\Entity\\FormEntity',
                        ],
                        'dateAdded' => [
                            'fieldName' => 'dateAdded',
                            'type' => 'datetime',
                            'columnName' => 'date_added',
                            'nullable' => true,
                            'declared' => 'Mautic\\CoreBundle\\Entity\\FormEntity',
                        ],
                        'createdBy' => [
                            'fieldName' => 'createdBy',
                            'type' => 'integer',
                            'columnName' => 'created_by',
                            'nullable' => true,
                            'declared' => 'Mautic\\CoreBundle\\Entity\\FormEntity',
                        ],
                        'createdByUser' => [
                            'fieldName' => 'createdByUser',
                            'type' => 'string',
                            'length' => 191,
                            'columnName' => 'created_by_user',
                            'nullable' => true,
                            'declared' => 'Mautic\\CoreBundle\\Entity\\FormEntity',
                        ],
                        'dateModified' => [
                            'fieldName' => 'dateModified',
                            'type' => 'datetime',
                            'columnName' => 'date_modified',
                            'nullable' => true,
                            'declared' => 'Mautic\\CoreBundle\\Entity\\FormEntity',
                        ],
                        'modifiedBy' => [
                            'fieldName' => 'modifiedBy',
                            'type' => 'integer',
                            'columnName' => 'modified_by',
                            'nullable' => true,
                            'declared' => 'Mautic\\CoreBundle\\Entity\\FormEntity',
                        ],
                        'modifiedByUser' => [
                            'fieldName' => 'modifiedByUser',
                            'type' => 'string',
                            'length' => 191,
                            'columnName' => 'modified_by_user',
                            'nullable' => true,
                            'declared' => 'Mautic\\CoreBundle\\Entity\\FormEntity',
                        ],
                        'checkedOut' => [
                            'fieldName' => 'checkedOut',
                            'type' => 'datetime',
                            'columnName' => 'checked_out',
                            'nullable' => true,
                            'declared' => 'Mautic\\CoreBundle\\Entity\\FormEntity',
                        ],
                        'checkedOutBy' => [
                            'fieldName' => 'checkedOutBy',
                            'type' => 'integer',
                            'columnName' => 'checked_out_by',
                            'nullable' => true,
                            'declared' => 'Mautic\\CoreBundle\\Entity\\FormEntity',
                        ],
                        'checkedOutByUser' => [
                            'fieldName' => 'checkedOutByUser',
                            'type' => 'string',
                            'length' => 191,
                            'columnName' => 'checked_out_by_user',
                            'nullable' => true,
                            'declared' => 'Mautic\\CoreBundle\\Entity\\FormEntity',
                        ],
                        'id' => [
                            'fieldName' => 'id',
                            'type' => 'integer',
                            'id' => true,
                            'options' => [
                                'unsigned' => true,
                            ],
                            'columnName' => 'id',
                        ],
                        'name' => [
                            'fieldName' => 'name',
                            'type' => 'string',
                            'length' => 191,
                            'columnName' => 'name',
                        ],
                        'description' => [
                            'fieldName' => 'description',
                            'type' => 'text',
                            'nullable' => true,
                            'columnName' => 'description',
                        ],
                        'language' => [
                            'fieldName' => 'language',
                            'type' => 'string',
                            'length' => 191,
                            'columnName' => 'lang',
                        ],
                        'message' => [
                            'fieldName' => 'message',
                            'type' => 'text',
                            'columnName' => 'message',
                        ],
                        'smsType' => [
                            'fieldName' => 'smsType',
                            'type' => 'text',
                            'columnName' => 'sms_type',
                            'nullable' => true,
                        ],
                        'publishUp' => [
                            'fieldName' => 'publishUp',
                            'type' => 'datetime',
                            'columnName' => 'publish_up',
                            'nullable' => true,
                        ],
                        'publishDown' => [
                            'fieldName' => 'publishDown',
                            'type' => 'datetime',
                            'columnName' => 'publish_down',
                            'nullable' => true,
                        ],
                        'sentCount' => [
                            'fieldName' => 'sentCount',
                            'type' => 'integer',
                            'columnName' => 'sent_count',
                        ],
                    ],
                ],
                'fieldNames' => [
                    [
                        'is_published' => 'isPublished',
                        'date_added' => 'dateAdded',
                        'created_by' => 'createdBy',
                        'created_by_user' => 'createdByUser',
                        'date_modified' => 'dateModified',
                        'modified_by' => 'modifiedBy',
                        'modified_by_user' => 'modifiedByUser',
                        'checked_out' => 'checkedOut',
                        'checked_out_by' => 'checkedOutBy',
                        'checked_out_by_user' => 'checkedOutByUser',
                        'id' => 'id',
                        'name' => 'name',
                        'description' => 'description',
                        'lang' => 'language',
                        'message' => 'message',
                        'sms_type' => 'smsType',
                        'publish_up' => 'publishUp',
                        'publish_down' => 'publishDown',
                        'sent_count' => 'sentCount',
                    ],
                ],
                'columnNames' => [
                    [
                        'isPublished' => 'is_published',
                        'dateAdded' => 'date_added',
                        'createdBy' => 'created_by',
                        'createdByUser' => 'created_by_user',
                        'dateModified' => 'date_modified',
                        'modifiedBy' => 'modified_by',
                        'modifiedByUser' => 'modified_by_user',
                        'checkedOut' => 'checked_out',
                        'checkedOutBy' => 'checked_out_by',
                        'checkedOutByUser' => 'checked_out_by_user',
                        'id' => 'id',
                        'name' => 'name',
                        'description' => 'description',
                        'language' => 'lang',
                        'message' => 'message',
                        'smsType' => 'sms_type',
                        'publishUp' => 'publish_up',
                        'publishDown' => 'publish_down',
                        'sentCount' => 'sent_count',
                    ],
                ],
                'table' => [
                    [
                        'name' => 'sms_messages',
                        'indexes' => [],
                        'uniqueConstraints' => [],
                    ],
                ],
                'associationMappings' => [
                    [
                        'category' => [
                            'fieldName' => 'category',
                            'targetEntity' => 'Mautic\\CategoryBundle\\Entity\\Category',
                            'cascade' => [
                                'merge',
                                'detach',
                            ],
                            'joinColumns' => [
                                [
                                    'name' => 'category_id',
                                    'referencedColumnName' => 'id',
                                    'nullable' => true,
                                    'unique' => false,
                                    'onDelete' => 'SET NULL',
                                    'columnDefinition' => null,
                                ],
                            ],
                            'type' => 2,
                            'mappedBy' => null,
                            'inversedBy' => null,
                            'isOwningSide' => true,
                            'sourceEntity' => 'Mautic\\SmsBundle\\Entity\\Sms',
                            'fetch' => 2,
                            'isCascadeRemove' => false,
                            'isCascadePersist' => false,
                            'isCascadeRefresh' => false,
                            'isCascadeMerge' => true,
                            'isCascadeDetach' => true,
                            'sourceToTargetKeyColumns' => [
                                'category_id' => 'id',
                            ],
                            'joinColumnFieldNames' => [
                                'category_id' => 'category_id',
                            ],
                            'targetToSourceKeyColumns' => [
                                'id' => 'category_id',
                            ],
                            'orphanRemoval' => false,
                        ],
                        'lists' => [
                            'fieldName' => 'lists',
                            'targetEntity' => 'Mautic\\LeadBundle\\Entity\\LeadList',
                            'indexBy' => 'id',
                            'fetch' => 4,
                            'joinTable' => [
                                'joinColumns' => [
                                    [
                                        'name' => 'sms_id',
                                        'referencedColumnName' => 'id',
                                        'nullable' => false,
                                        'unique' => false,
                                        'onDelete' => 'CASCADE',
                                        'columnDefinition' => null,
                                    ],
                                ],
                                'inverseJoinColumns' => [
                                    [
                                        'name' => 'leadlist_id',
                                        'referencedColumnName' => 'id',
                                        'nullable' => false,
                                        'unique' => false,
                                        'onDelete' => 'CASCADE',
                                        'columnDefinition' => null,
                                    ],
                                ],
                                'name' => 'sms_message_list_xref',
                            ],
                            'type' => 8,
                            'mappedBy' => null,
                            'inversedBy' => null,
                            'isOwningSide' => true,
                            'sourceEntity' => 'Mautic\\SmsBundle\\Entity\\Sms',
                            'cascade' => [],
                            'isCascadeRemove' => false,
                            'isCascadePersist' => false,
                            'isCascadeRefresh' => false,
                            'isCascadeMerge' => false,
                            'isCascadeDetach' => false,
                            'joinTableColumns' => [
                                'sms_id',
                                'leadlist_id',
                            ],
                            'isOnDeleteCascade' => true,
                            'relationToSourceKeyColumns' => [
                                'sms_id' => 'id',
                            ],
                            'relationToTargetKeyColumns' => [
                                'leadlist_id' => 'id',
                            ],
                            'orphanRemoval' => false,
                        ],
                        'stats' => [
                            'fieldName' => 'stats',
                            'targetEntity' => 'Mautic\\SmsBundle\\Entity\\Stat',
                            'indexBy' => 'id',
                            'mappedBy' => 'sms',
                            'cascade' => [
                                'persist',
                            ],
                            'fetch' => 4,
                            'type' => 4,
                            'inversedBy' => null,
                            'isOwningSide' => false,
                            'sourceEntity' => 'Mautic\\SmsBundle\\Entity\\Sms',
                            'isCascadeRemove' => false,
                            'isCascadePersist' => true,
                            'isCascadeRefresh' => false,
                            'isCascadeMerge' => false,
                            'isCascadeDetach' => false,
                            'orphanRemoval' => false,
                        ],
                    ],
                ],
                'idGenerator' => [
                    $o[1],
                ],
                'changeTrackingPolicy' => [
                    2,
                ],
            ],
        ],
        $o[0],
        []
    );
},
75 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ClassMetadata')),
            clone ($p['Doctrine\\ORM\\Id\\BigIntegerIdentityGenerator'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Id\\BigIntegerIdentityGenerator')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'Mautic\\SmsBundle\\Entity\\Stat',
                ],
                'namespace' => [
                    'Mautic\\SmsBundle\\Entity',
                ],
                'rootEntityName' => [
                    'Mautic\\SmsBundle\\Entity\\Stat',
                ],
                'customRepositoryClassName' => [
                    'Mautic\\SmsBundle\\Entity\\StatRepository',
                ],
                'identifier' => [
                    [
                        'id',
                    ],
                ],
                'generatorType' => [
                    4,
                ],
                'fieldMappings' => [
                    [
                        'id' => [
                            'fieldName' => 'id',
                            'columnName' => 'id',
                            'id' => true,
                            'nullable' => false,
                            'type' => 'bigint',
                            'options' => [
                                'unsigned' => true,
                            ],
                        ],
                        'dateSent' => [
                            'fieldName' => 'dateSent',
                            'type' => 'datetime',
                            'columnName' => 'date_sent',
                        ],
                        'isFailed' => [
                            'fieldName' => 'isFailed',
                            'type' => 'boolean',
                            'columnName' => 'is_failed',
                            'nullable' => true,
                        ],
                        'trackingHash' => [
                            'fieldName' => 'trackingHash',
                            'type' => 'string',
                            'length' => 191,
                            'columnName' => 'tracking_hash',
                            'nullable' => true,
                        ],
                        'source' => [
                            'fieldName' => 'source',
                            'type' => 'string',
                            'length' => 191,
                            'nullable' => true,
                            'columnName' => 'source',
                        ],
                        'sourceId' => [
                            'fieldName' => 'sourceId',
                            'type' => 'integer',
                            'columnName' => 'source_id',
                            'nullable' => true,
                        ],
                        'tokens' => [
                            'fieldName' => 'tokens',
                            'type' => 'array',
                            'nullable' => true,
                            'columnName' => 'tokens',
                        ],
                        'details' => [
                            'fieldName' => 'details',
                            'type' => 'json_array',
                            'columnName' => 'details',
                        ],
                    ],
                ],
                'fieldNames' => [
                    [
                        'id' => 'id',
                        'date_sent' => 'dateSent',
                        'is_failed' => 'isFailed',
                        'tracking_hash' => 'trackingHash',
                        'source' => 'source',
                        'source_id' => 'sourceId',
                        'tokens' => 'tokens',
                        'details' => 'details',
                    ],
                ],
                'columnNames' => [
                    [
                        'id' => 'id',
                        'dateSent' => 'date_sent',
                        'isFailed' => 'is_failed',
                        'trackingHash' => 'tracking_hash',
                        'source' => 'source',
                        'sourceId' => 'source_id',
                        'tokens' => 'tokens',
                        'details' => 'details',
                    ],
                ],
                'table' => [
                    [
                        'name' => 'sms_message_stats',
                        'indexes' => [
                            'stat_sms_search' => [
                                'columns' => [
                                    'sms_id',
                                    'lead_id',
                                ],
                            ],
                            'stat_sms_hash_search' => [
                                'columns' => [
                                    'tracking_hash',
                                ],
                            ],
                            'stat_sms_source_search' => [
                                'columns' => [
                                    'source',
                                    'source_id',
                                ],
                            ],
                            'stat_sms_failed_search' => [
                                'columns' => [
                                    'is_failed',
                                ],
                            ],
                        ],
                        'uniqueConstraints' => [],
                    ],
                ],
                'associationMappings' => [
                    [
                        'sms' => [
                            'fieldName' => 'sms',
                            'targetEntity' => 'Mautic\\SmsBundle\\Entity\\Sms',
                            'inversedBy' => 'stats',
                            'joinColumns' => [
                                [
                                    'name' => 'sms_id',
                                    'referencedColumnName' => 'id',
                                    'nullable' => true,
                                    'unique' => false,
                                    'onDelete' => 'SET NULL',
                                    'columnDefinition' => null,
                                ],
                            ],
                            'type' => 2,
                            'mappedBy' => null,
                            'isOwningSide' => true,
                            'sourceEntity' => 'Mautic\\SmsBundle\\Entity\\Stat',
                            'fetch' => 2,
                            'cascade' => [],
                            'isCascadeRemove' => false,
                            'isCascadePersist' => false,
                            'isCascadeRefresh' => false,
                            'isCascadeMerge' => false,
                            'isCascadeDetach' => false,
                            'sourceToTargetKeyColumns' => [
                                'sms_id' => 'id',
                            ],
                            'joinColumnFieldNames' => [
                                'sms_id' => 'sms_id',
                            ],
                            'targetToSourceKeyColumns' => [
                                'id' => 'sms_id',
                            ],
                            'orphanRemoval' => false,
                        ],
                        'lead' => [
                            'fieldName' => 'lead',
                            'targetEntity' => 'Mautic\\LeadBundle\\Entity\\Lead',
                            'joinColumns' => [
                                [
                                    'name' => 'lead_id',
                                    'referencedColumnName' => 'id',
                                    'nullable' => true,
                                    'unique' => false,
                                    'onDelete' => 'SET NULL',
                                    'columnDefinition' => null,
                                ],
                            ],
                            'type' => 2,
                            'mappedBy' => null,
                            'inversedBy' => null,
                            'isOwningSide' => true,
                            'sourceEntity' => 'Mautic\\SmsBundle\\Entity\\Stat',
                            'fetch' => 2,
                            'cascade' => [],
                            'isCascadeRemove' => false,
                            'isCascadePersist' => false,
                            'isCascadeRefresh' => false,
                            'isCascadeMerge' => false,
                            'isCascadeDetach' => false,
                            'sourceToTargetKeyColumns' => [
                                'lead_id' => 'id',
                            ],
                            'joinColumnFieldNames' => [
                                'lead_id' => 'lead_id',
                            ],
                            'targetToSourceKeyColumns' => [
                                'id' => 'lead_id',
                            ],
                            'orphanRemoval' => false,
                        ],
                        'list' => [
                            'fieldName' => 'list',
                            'targetEntity' => 'Mautic\\LeadBundle\\Entity\\LeadList',
                            'joinColumns' => [
                                [
                                    'name' => 'list_id',
                                    'referencedColumnName' => 'id',
                                    'nullable' => true,
                                    'unique' => false,
                                    'onDelete' => 'SET NULL',
                                    'columnDefinition' => null,
                                ],
                            ],
                            'type' => 2,
                            'mappedBy' => null,
                            'inversedBy' => null,
                            'isOwningSide' => true,
                            'sourceEntity' => 'Mautic\\SmsBundle\\Entity\\Stat',
                            'fetch' => 2,
                            'cascade' => [],
                            'isCascadeRemove' => false,
                            'isCascadePersist' => false,
                            'isCascadeRefresh' => false,
                            'isCascadeMerge' => false,
                            'isCascadeDetach' => false,
                            'sourceToTargetKeyColumns' => [
                                'list_id' => 'id',
                            ],
                            'joinColumnFieldNames' => [
                                'list_id' => 'list_id',
                            ],
                            'targetToSourceKeyColumns' => [
                                'id' => 'list_id',
                            ],
                            'orphanRemoval' => false,
                        ],
                        'ipAddress' => [
                            'fieldName' => 'ipAddress',
                            'targetEntity' => 'Mautic\\CoreBundle\\Entity\\IpAddress',
                            'cascade' => [
                                'persist',
                                'merge',
                                'detach',
                            ],
                            'joinColumns' => [
                                [
                                    'name' => 'ip_id',
                                    'referencedColumnName' => 'id',
                                    'nullable' => true,
                                    'unique' => false,
                                    'onDelete' => null,
                                    'columnDefinition' => null,
                                ],
                            ],
                            'type' => 2,
                            'mappedBy' => null,
                            'inversedBy' => null,
                            'isOwningSide' => true,
                            'sourceEntity' => 'Mautic\\SmsBundle\\Entity\\Stat',
                            'fetch' => 2,
                            'isCascadeRemove' => false,
                            'isCascadePersist' => true,
                            'isCascadeRefresh' => false,
                            'isCascadeMerge' => true,
                            'isCascadeDetach' => true,
                            'sourceToTargetKeyColumns' => [
                                'ip_id' => 'id',
                            ],
                            'joinColumnFieldNames' => [
                                'ip_id' => 'ip_id',
                            ],
                            'targetToSourceKeyColumns' => [
                                'id' => 'ip_id',
                            ],
                            'orphanRemoval' => false,
                        ],
                    ],
                ],
                'idGenerator' => [
                    $o[1],
                ],
                'changeTrackingPolicy' => [
                    2,
                ],
            ],
        ],
        $o[0],
        []
    );
},
76 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ClassMetadata')),
            clone ($p['Doctrine\\ORM\\Id\\AssignedGenerator'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Id\\AssignedGenerator')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'Mautic\\StageBundle\\Entity\\LeadStageLog',
                ],
                'namespace' => [
                    'Mautic\\StageBundle\\Entity',
                ],
                'rootEntityName' => [
                    'Mautic\\StageBundle\\Entity\\LeadStageLog',
                ],
                'customRepositoryClassName' => [
                    'Mautic\\StageBundle\\Entity\\LeadStageLogRepository',
                ],
                'identifier' => [
                    [
                        'stage',
                        'lead',
                    ],
                ],
                'fieldMappings' => [
                    [
                        'dateFired' => [
                            'fieldName' => 'dateFired',
                            'type' => 'datetime',
                            'columnName' => 'date_fired',
                        ],
                    ],
                ],
                'fieldNames' => [
                    [
                        'date_fired' => 'dateFired',
                    ],
                ],
                'columnNames' => [
                    [
                        'dateFired' => 'date_fired',
                    ],
                ],
                'table' => [
                    [
                        'name' => 'stage_lead_action_log',
                        'indexes' => [],
                        'uniqueConstraints' => [],
                    ],
                ],
                'associationMappings' => [
                    [
                        'stage' => [
                            'fieldName' => 'stage',
                            'targetEntity' => 'Mautic\\StageBundle\\Entity\\Stage',
                            'id' => true,
                            'inversedBy' => 'log',
                            'joinColumns' => [
                                [
                                    'name' => 'stage_id',
                                    'referencedColumnName' => 'id',
                                    'nullable' => true,
                                    'unique' => false,
                                    'onDelete' => 'CASCADE',
                                    'columnDefinition' => null,
                                ],
                            ],
                            'type' => 2,
                            'mappedBy' => null,
                            'isOwningSide' => true,
                            'sourceEntity' => 'Mautic\\StageBundle\\Entity\\LeadStageLog',
                            'fetch' => 2,
                            'cascade' => [],
                            'isCascadeRemove' => false,
                            'isCascadePersist' => false,
                            'isCascadeRefresh' => false,
                            'isCascadeMerge' => false,
                            'isCascadeDetach' => false,
                            'sourceToTargetKeyColumns' => [
                                'stage_id' => 'id',
                            ],
                            'joinColumnFieldNames' => [
                                'stage_id' => 'stage_id',
                            ],
                            'targetToSourceKeyColumns' => [
                                'id' => 'stage_id',
                            ],
                            'orphanRemoval' => false,
                        ],
                        'lead' => [
                            'fieldName' => 'lead',
                            'targetEntity' => 'Mautic\\LeadBundle\\Entity\\Lead',
                            'id' => true,
                            'joinColumns' => [
                                [
                                    'name' => 'lead_id',
                                    'referencedColumnName' => 'id',
                                    'nullable' => false,
                                    'unique' => false,
                                    'onDelete' => 'CASCADE',
                                    'columnDefinition' => null,
                                ],
                            ],
                            'type' => 2,
                            'mappedBy' => null,
                            'inversedBy' => null,
                            'isOwningSide' => true,
                            'sourceEntity' => 'Mautic\\StageBundle\\Entity\\LeadStageLog',
                            'fetch' => 2,
                            'cascade' => [],
                            'isCascadeRemove' => false,
                            'isCascadePersist' => false,
                            'isCascadeRefresh' => false,
                            'isCascadeMerge' => false,
                            'isCascadeDetach' => false,
                            'sourceToTargetKeyColumns' => [
                                'lead_id' => 'id',
                            ],
                            'joinColumnFieldNames' => [
                                'lead_id' => 'lead_id',
                            ],
                            'targetToSourceKeyColumns' => [
                                'id' => 'lead_id',
                            ],
                            'orphanRemoval' => false,
                        ],
                        'ipAddress' => [
                            'fieldName' => 'ipAddress',
                            'targetEntity' => 'Mautic\\CoreBundle\\Entity\\IpAddress',
                            'cascade' => [
                                'persist',
                                'merge',
                                'detach',
                            ],
                            'joinColumns' => [
                                [
                                    'name' => 'ip_id',
                                    'referencedColumnName' => 'id',
                                    'nullable' => true,
                                    'unique' => false,
                                    'onDelete' => null,
                                    'columnDefinition' => null,
                                ],
                            ],
                            'type' => 2,
                            'mappedBy' => null,
                            'inversedBy' => null,
                            'isOwningSide' => true,
                            'sourceEntity' => 'Mautic\\StageBundle\\Entity\\LeadStageLog',
                            'fetch' => 2,
                            'isCascadeRemove' => false,
                            'isCascadePersist' => true,
                            'isCascadeRefresh' => false,
                            'isCascadeMerge' => true,
                            'isCascadeDetach' => true,
                            'sourceToTargetKeyColumns' => [
                                'ip_id' => 'id',
                            ],
                            'joinColumnFieldNames' => [
                                'ip_id' => 'ip_id',
                            ],
                            'targetToSourceKeyColumns' => [
                                'id' => 'ip_id',
                            ],
                            'orphanRemoval' => false,
                        ],
                    ],
                ],
                'isIdentifierComposite' => [
                    true,
                ],
                'containsForeignIdentifier' => [
                    true,
                ],
                'idGenerator' => [
                    $o[1],
                ],
                'changeTrackingPolicy' => [
                    2,
                ],
            ],
        ],
        $o[0],
        []
    );
},
77 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ClassMetadata')),
            clone ($p['Doctrine\\ORM\\Id\\IdentityGenerator'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Id\\IdentityGenerator')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'Mautic\\StageBundle\\Entity\\Stage',
                ],
                'namespace' => [
                    'Mautic\\StageBundle\\Entity',
                ],
                'rootEntityName' => [
                    'Mautic\\StageBundle\\Entity\\Stage',
                ],
                'customRepositoryClassName' => [
                    'Mautic\\StageBundle\\Entity\\StageRepository',
                ],
                'identifier' => [
                    [
                        'id',
                    ],
                ],
                'generatorType' => [
                    4,
                ],
                'fieldMappings' => [
                    [
                        'isPublished' => [
                            'fieldName' => 'isPublished',
                            'type' => 'boolean',
                            'columnName' => 'is_published',
                            'declared' => 'Mautic\\CoreBundle\\Entity\\FormEntity',
                        ],
                        'dateAdded' => [
                            'fieldName' => 'dateAdded',
                            'type' => 'datetime',
                            'columnName' => 'date_added',
                            'nullable' => true,
                            'declared' => 'Mautic\\CoreBundle\\Entity\\FormEntity',
                        ],
                        'createdBy' => [
                            'fieldName' => 'createdBy',
                            'type' => 'integer',
                            'columnName' => 'created_by',
                            'nullable' => true,
                            'declared' => 'Mautic\\CoreBundle\\Entity\\FormEntity',
                        ],
                        'createdByUser' => [
                            'fieldName' => 'createdByUser',
                            'type' => 'string',
                            'length' => 191,
                            'columnName' => 'created_by_user',
                            'nullable' => true,
                            'declared' => 'Mautic\\CoreBundle\\Entity\\FormEntity',
                        ],
                        'dateModified' => [
                            'fieldName' => 'dateModified',
                            'type' => 'datetime',
                            'columnName' => 'date_modified',
                            'nullable' => true,
                            'declared' => 'Mautic\\CoreBundle\\Entity\\FormEntity',
                        ],
                        'modifiedBy' => [
                            'fieldName' => 'modifiedBy',
                            'type' => 'integer',
                            'columnName' => 'modified_by',
                            'nullable' => true,
                            'declared' => 'Mautic\\CoreBundle\\Entity\\FormEntity',
                        ],
                        'modifiedByUser' => [
                            'fieldName' => 'modifiedByUser',
                            'type' => 'string',
                            'length' => 191,
                            'columnName' => 'modified_by_user',
                            'nullable' => true,
                            'declared' => 'Mautic\\CoreBundle\\Entity\\FormEntity',
                        ],
                        'checkedOut' => [
                            'fieldName' => 'checkedOut',
                            'type' => 'datetime',
                            'columnName' => 'checked_out',
                            'nullable' => true,
                            'declared' => 'Mautic\\CoreBundle\\Entity\\FormEntity',
                        ],
                        'checkedOutBy' => [
                            'fieldName' => 'checkedOutBy',
                            'type' => 'integer',
                            'columnName' => 'checked_out_by',
                            'nullable' => true,
                            'declared' => 'Mautic\\CoreBundle\\Entity\\FormEntity',
                        ],
                        'checkedOutByUser' => [
                            'fieldName' => 'checkedOutByUser',
                            'type' => 'string',
                            'length' => 191,
                            'columnName' => 'checked_out_by_user',
                            'nullable' => true,
                            'declared' => 'Mautic\\CoreBundle\\Entity\\FormEntity',
                        ],
                        'id' => [
                            'fieldName' => 'id',
                            'type' => 'integer',
                            'id' => true,
                            'options' => [
                                'unsigned' => true,
                            ],
                            'columnName' => 'id',
                        ],
                        'name' => [
                            'fieldName' => 'name',
                            'type' => 'string',
                            'length' => 191,
                            'columnName' => 'name',
                        ],
                        'description' => [
                            'fieldName' => 'description',
                            'type' => 'text',
                            'nullable' => true,
                            'columnName' => 'description',
                        ],
                        'weight' => [
                            'fieldName' => 'weight',
                            'type' => 'integer',
                            'columnName' => 'weight',
                        ],
                        'publishUp' => [
                            'fieldName' => 'publishUp',
                            'type' => 'datetime',
                            'columnName' => 'publish_up',
                            'nullable' => true,
                        ],
                        'publishDown' => [
                            'fieldName' => 'publishDown',
                            'type' => 'datetime',
                            'columnName' => 'publish_down',
                            'nullable' => true,
                        ],
                    ],
                ],
                'fieldNames' => [
                    [
                        'is_published' => 'isPublished',
                        'date_added' => 'dateAdded',
                        'created_by' => 'createdBy',
                        'created_by_user' => 'createdByUser',
                        'date_modified' => 'dateModified',
                        'modified_by' => 'modifiedBy',
                        'modified_by_user' => 'modifiedByUser',
                        'checked_out' => 'checkedOut',
                        'checked_out_by' => 'checkedOutBy',
                        'checked_out_by_user' => 'checkedOutByUser',
                        'id' => 'id',
                        'name' => 'name',
                        'description' => 'description',
                        'weight' => 'weight',
                        'publish_up' => 'publishUp',
                        'publish_down' => 'publishDown',
                    ],
                ],
                'columnNames' => [
                    [
                        'isPublished' => 'is_published',
                        'dateAdded' => 'date_added',
                        'createdBy' => 'created_by',
                        'createdByUser' => 'created_by_user',
                        'dateModified' => 'date_modified',
                        'modifiedBy' => 'modified_by',
                        'modifiedByUser' => 'modified_by_user',
                        'checkedOut' => 'checked_out',
                        'checkedOutBy' => 'checked_out_by',
                        'checkedOutByUser' => 'checked_out_by_user',
                        'id' => 'id',
                        'name' => 'name',
                        'description' => 'description',
                        'weight' => 'weight',
                        'publishUp' => 'publish_up',
                        'publishDown' => 'publish_down',
                    ],
                ],
                'table' => [
                    [
                        'name' => 'stages',
                        'indexes' => [],
                        'uniqueConstraints' => [],
                    ],
                ],
                'associationMappings' => [
                    [
                        'log' => [
                            'fieldName' => 'log',
                            'targetEntity' => 'Mautic\\StageBundle\\Entity\\LeadStageLog',
                            'mappedBy' => 'stage',
                            'cascade' => [
                                'persist',
                                'remove',
                            ],
                            'fetch' => 4,
                            'type' => 4,
                            'inversedBy' => null,
                            'isOwningSide' => false,
                            'sourceEntity' => 'Mautic\\StageBundle\\Entity\\Stage',
                            'isCascadeRemove' => true,
                            'isCascadePersist' => true,
                            'isCascadeRefresh' => false,
                            'isCascadeMerge' => false,
                            'isCascadeDetach' => false,
                            'orphanRemoval' => false,
                        ],
                        'category' => [
                            'fieldName' => 'category',
                            'targetEntity' => 'Mautic\\CategoryBundle\\Entity\\Category',
                            'cascade' => [
                                'merge',
                                'detach',
                            ],
                            'joinColumns' => [
                                [
                                    'name' => 'category_id',
                                    'referencedColumnName' => 'id',
                                    'nullable' => true,
                                    'unique' => false,
                                    'onDelete' => 'SET NULL',
                                    'columnDefinition' => null,
                                ],
                            ],
                            'type' => 2,
                            'mappedBy' => null,
                            'inversedBy' => null,
                            'isOwningSide' => true,
                            'sourceEntity' => 'Mautic\\StageBundle\\Entity\\Stage',
                            'fetch' => 2,
                            'isCascadeRemove' => false,
                            'isCascadePersist' => false,
                            'isCascadeRefresh' => false,
                            'isCascadeMerge' => true,
                            'isCascadeDetach' => true,
                            'sourceToTargetKeyColumns' => [
                                'category_id' => 'id',
                            ],
                            'joinColumnFieldNames' => [
                                'category_id' => 'category_id',
                            ],
                            'targetToSourceKeyColumns' => [
                                'id' => 'category_id',
                            ],
                            'orphanRemoval' => false,
                        ],
                    ],
                ],
                'idGenerator' => [
                    $o[1],
                ],
                'changeTrackingPolicy' => [
                    2,
                ],
            ],
        ],
        $o[0],
        []
    );
},
78 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ClassMetadata')),
            clone ($p['Doctrine\\ORM\\Id\\IdentityGenerator'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Id\\IdentityGenerator')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'Mautic\\UserBundle\\Entity\\User',
                ],
                'namespace' => [
                    'Mautic\\UserBundle\\Entity',
                ],
                'rootEntityName' => [
                    'Mautic\\UserBundle\\Entity\\User',
                ],
                'customRepositoryClassName' => [
                    'Mautic\\UserBundle\\Entity\\UserRepository',
                ],
                'identifier' => [
                    [
                        'id',
                    ],
                ],
                'generatorType' => [
                    4,
                ],
                'fieldMappings' => [
                    [
                        'isPublished' => [
                            'fieldName' => 'isPublished',
                            'type' => 'boolean',
                            'columnName' => 'is_published',
                            'declared' => 'Mautic\\CoreBundle\\Entity\\FormEntity',
                        ],
                        'dateAdded' => [
                            'fieldName' => 'dateAdded',
                            'type' => 'datetime',
                            'columnName' => 'date_added',
                            'nullable' => true,
                            'declared' => 'Mautic\\CoreBundle\\Entity\\FormEntity',
                        ],
                        'createdBy' => [
                            'fieldName' => 'createdBy',
                            'type' => 'integer',
                            'columnName' => 'created_by',
                            'nullable' => true,
                            'declared' => 'Mautic\\CoreBundle\\Entity\\FormEntity',
                        ],
                        'createdByUser' => [
                            'fieldName' => 'createdByUser',
                            'type' => 'string',
                            'length' => 191,
                            'columnName' => 'created_by_user',
                            'nullable' => true,
                            'declared' => 'Mautic\\CoreBundle\\Entity\\FormEntity',
                        ],
                        'dateModified' => [
                            'fieldName' => 'dateModified',
                            'type' => 'datetime',
                            'columnName' => 'date_modified',
                            'nullable' => true,
                            'declared' => 'Mautic\\CoreBundle\\Entity\\FormEntity',
                        ],
                        'modifiedBy' => [
                            'fieldName' => 'modifiedBy',
                            'type' => 'integer',
                            'columnName' => 'modified_by',
                            'nullable' => true,
                            'declared' => 'Mautic\\CoreBundle\\Entity\\FormEntity',
                        ],
                        'modifiedByUser' => [
                            'fieldName' => 'modifiedByUser',
                            'type' => 'string',
                            'length' => 191,
                            'columnName' => 'modified_by_user',
                            'nullable' => true,
                            'declared' => 'Mautic\\CoreBundle\\Entity\\FormEntity',
                        ],
                        'checkedOut' => [
                            'fieldName' => 'checkedOut',
                            'type' => 'datetime',
                            'columnName' => 'checked_out',
                            'nullable' => true,
                            'declared' => 'Mautic\\CoreBundle\\Entity\\FormEntity',
                        ],
                        'checkedOutBy' => [
                            'fieldName' => 'checkedOutBy',
                            'type' => 'integer',
                            'columnName' => 'checked_out_by',
                            'nullable' => true,
                            'declared' => 'Mautic\\CoreBundle\\Entity\\FormEntity',
                        ],
                        'checkedOutByUser' => [
                            'fieldName' => 'checkedOutByUser',
                            'type' => 'string',
                            'length' => 191,
                            'columnName' => 'checked_out_by_user',
                            'nullable' => true,
                            'declared' => 'Mautic\\CoreBundle\\Entity\\FormEntity',
                        ],
                        'id' => [
                            'fieldName' => 'id',
                            'type' => 'integer',
                            'id' => true,
                            'options' => [
                                'unsigned' => true,
                            ],
                            'columnName' => 'id',
                        ],
                        'username' => [
                            'fieldName' => 'username',
                            'type' => 'string',
                            'length' => 191,
                            'unique' => true,
                            'columnName' => 'username',
                        ],
                        'password' => [
                            'fieldName' => 'password',
                            'type' => 'string',
                            'length' => 64,
                            'columnName' => 'password',
                        ],
                        'firstName' => [
                            'fieldName' => 'firstName',
                            'type' => 'string',
                            'length' => 191,
                            'columnName' => 'first_name',
                        ],
                        'lastName' => [
                            'fieldName' => 'lastName',
                            'type' => 'string',
                            'length' => 191,
                            'columnName' => 'last_name',
                        ],
                        'email' => [
                            'fieldName' => 'email',
                            'type' => 'string',
                            'length' => 191,
                            'unique' => true,
                            'columnName' => 'email',
                        ],
                        'position' => [
                            'fieldName' => 'position',
                            'type' => 'string',
                            'length' => 191,
                            'nullable' => true,
                            'columnName' => 'position',
                        ],
                        'timezone' => [
                            'fieldName' => 'timezone',
                            'type' => 'string',
                            'length' => 191,
                            'nullable' => true,
                            'columnName' => 'timezone',
                        ],
                        'locale' => [
                            'fieldName' => 'locale',
                            'type' => 'string',
                            'length' => 191,
                            'nullable' => true,
                            'columnName' => 'locale',
                        ],
                        'lastLogin' => [
                            'fieldName' => 'lastLogin',
                            'type' => 'datetime',
                            'columnName' => 'last_login',
                            'nullable' => true,
                        ],
                        'lastActive' => [
                            'fieldName' => 'lastActive',
                            'type' => 'datetime',
                            'columnName' => 'last_active',
                            'nullable' => true,
                        ],
                        'preferences' => [
                            'fieldName' => 'preferences',
                            'type' => 'array',
                            'nullable' => true,
                            'columnName' => 'preferences',
                        ],
                        'signature' => [
                            'fieldName' => 'signature',
                            'type' => 'text',
                            'nullable' => true,
                            'columnName' => 'signature',
                        ],
                    ],
                ],
                'fieldNames' => [
                    [
                        'is_published' => 'isPublished',
                        'date_added' => 'dateAdded',
                        'created_by' => 'createdBy',
                        'created_by_user' => 'createdByUser',
                        'date_modified' => 'dateModified',
                        'modified_by' => 'modifiedBy',
                        'modified_by_user' => 'modifiedByUser',
                        'checked_out' => 'checkedOut',
                        'checked_out_by' => 'checkedOutBy',
                        'checked_out_by_user' => 'checkedOutByUser',
                        'id' => 'id',
                        'username' => 'username',
                        'password' => 'password',
                        'first_name' => 'firstName',
                        'last_name' => 'lastName',
                        'email' => 'email',
                        'position' => 'position',
                        'timezone' => 'timezone',
                        'locale' => 'locale',
                        'last_login' => 'lastLogin',
                        'last_active' => 'lastActive',
                        'preferences' => 'preferences',
                        'signature' => 'signature',
                    ],
                ],
                'columnNames' => [
                    [
                        'isPublished' => 'is_published',
                        'dateAdded' => 'date_added',
                        'createdBy' => 'created_by',
                        'createdByUser' => 'created_by_user',
                        'dateModified' => 'date_modified',
                        'modifiedBy' => 'modified_by',
                        'modifiedByUser' => 'modified_by_user',
                        'checkedOut' => 'checked_out',
                        'checkedOutBy' => 'checked_out_by',
                        'checkedOutByUser' => 'checked_out_by_user',
                        'id' => 'id',
                        'username' => 'username',
                        'password' => 'password',
                        'firstName' => 'first_name',
                        'lastName' => 'last_name',
                        'email' => 'email',
                        'position' => 'position',
                        'timezone' => 'timezone',
                        'locale' => 'locale',
                        'lastLogin' => 'last_login',
                        'lastActive' => 'last_active',
                        'preferences' => 'preferences',
                        'signature' => 'signature',
                    ],
                ],
                'table' => [
                    [
                        'name' => 'users',
                        'indexes' => [],
                        'uniqueConstraints' => [],
                    ],
                ],
                'associationMappings' => [
                    [
                        'role' => [
                            'fieldName' => 'role',
                            'targetEntity' => 'Mautic\\UserBundle\\Entity\\Role',
                            'inversedBy' => 'users',
                            'cascade' => [
                                'merge',
                            ],
                            'joinColumns' => [
                                [
                                    'name' => 'role_id',
                                    'referencedColumnName' => 'id',
                                    'nullable' => false,
                                    'unique' => false,
                                    'onDelete' => null,
                                    'columnDefinition' => null,
                                ],
                            ],
                            'type' => 2,
                            'mappedBy' => null,
                            'isOwningSide' => true,
                            'sourceEntity' => 'Mautic\\UserBundle\\Entity\\User',
                            'fetch' => 2,
                            'isCascadeRemove' => false,
                            'isCascadePersist' => false,
                            'isCascadeRefresh' => false,
                            'isCascadeMerge' => true,
                            'isCascadeDetach' => false,
                            'sourceToTargetKeyColumns' => [
                                'role_id' => 'id',
                            ],
                            'joinColumnFieldNames' => [
                                'role_id' => 'role_id',
                            ],
                            'targetToSourceKeyColumns' => [
                                'id' => 'role_id',
                            ],
                            'orphanRemoval' => false,
                        ],
                    ],
                ],
                'idGenerator' => [
                    $o[1],
                ],
                'changeTrackingPolicy' => [
                    2,
                ],
            ],
        ],
        $o[0],
        []
    );
},
79 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ClassMetadata')),
            clone ($p['Doctrine\\ORM\\Id\\IdentityGenerator'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Id\\IdentityGenerator')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'Mautic\\UserBundle\\Entity\\Role',
                ],
                'namespace' => [
                    'Mautic\\UserBundle\\Entity',
                ],
                'rootEntityName' => [
                    'Mautic\\UserBundle\\Entity\\Role',
                ],
                'customRepositoryClassName' => [
                    'Mautic\\UserBundle\\Entity\\RoleRepository',
                ],
                'identifier' => [
                    [
                        'id',
                    ],
                ],
                'generatorType' => [
                    4,
                ],
                'fieldMappings' => [
                    [
                        'isPublished' => [
                            'fieldName' => 'isPublished',
                            'type' => 'boolean',
                            'columnName' => 'is_published',
                            'declared' => 'Mautic\\CoreBundle\\Entity\\FormEntity',
                        ],
                        'dateAdded' => [
                            'fieldName' => 'dateAdded',
                            'type' => 'datetime',
                            'columnName' => 'date_added',
                            'nullable' => true,
                            'declared' => 'Mautic\\CoreBundle\\Entity\\FormEntity',
                        ],
                        'createdBy' => [
                            'fieldName' => 'createdBy',
                            'type' => 'integer',
                            'columnName' => 'created_by',
                            'nullable' => true,
                            'declared' => 'Mautic\\CoreBundle\\Entity\\FormEntity',
                        ],
                        'createdByUser' => [
                            'fieldName' => 'createdByUser',
                            'type' => 'string',
                            'length' => 191,
                            'columnName' => 'created_by_user',
                            'nullable' => true,
                            'declared' => 'Mautic\\CoreBundle\\Entity\\FormEntity',
                        ],
                        'dateModified' => [
                            'fieldName' => 'dateModified',
                            'type' => 'datetime',
                            'columnName' => 'date_modified',
                            'nullable' => true,
                            'declared' => 'Mautic\\CoreBundle\\Entity\\FormEntity',
                        ],
                        'modifiedBy' => [
                            'fieldName' => 'modifiedBy',
                            'type' => 'integer',
                            'columnName' => 'modified_by',
                            'nullable' => true,
                            'declared' => 'Mautic\\CoreBundle\\Entity\\FormEntity',
                        ],
                        'modifiedByUser' => [
                            'fieldName' => 'modifiedByUser',
                            'type' => 'string',
                            'length' => 191,
                            'columnName' => 'modified_by_user',
                            'nullable' => true,
                            'declared' => 'Mautic\\CoreBundle\\Entity\\FormEntity',
                        ],
                        'checkedOut' => [
                            'fieldName' => 'checkedOut',
                            'type' => 'datetime',
                            'columnName' => 'checked_out',
                            'nullable' => true,
                            'declared' => 'Mautic\\CoreBundle\\Entity\\FormEntity',
                        ],
                        'checkedOutBy' => [
                            'fieldName' => 'checkedOutBy',
                            'type' => 'integer',
                            'columnName' => 'checked_out_by',
                            'nullable' => true,
                            'declared' => 'Mautic\\CoreBundle\\Entity\\FormEntity',
                        ],
                        'checkedOutByUser' => [
                            'fieldName' => 'checkedOutByUser',
                            'type' => 'string',
                            'length' => 191,
                            'columnName' => 'checked_out_by_user',
                            'nullable' => true,
                            'declared' => 'Mautic\\CoreBundle\\Entity\\FormEntity',
                        ],
                        'id' => [
                            'fieldName' => 'id',
                            'type' => 'integer',
                            'id' => true,
                            'options' => [
                                'unsigned' => true,
                            ],
                            'columnName' => 'id',
                        ],
                        'name' => [
                            'fieldName' => 'name',
                            'type' => 'string',
                            'length' => 191,
                            'columnName' => 'name',
                        ],
                        'description' => [
                            'fieldName' => 'description',
                            'type' => 'text',
                            'nullable' => true,
                            'columnName' => 'description',
                        ],
                        'isAdmin' => [
                            'fieldName' => 'isAdmin',
                            'type' => 'boolean',
                            'columnName' => 'is_admin',
                        ],
                        'rawPermissions' => [
                            'fieldName' => 'rawPermissions',
                            'type' => 'array',
                            'columnName' => 'readable_permissions',
                        ],
                    ],
                ],
                'fieldNames' => [
                    [
                        'is_published' => 'isPublished',
                        'date_added' => 'dateAdded',
                        'created_by' => 'createdBy',
                        'created_by_user' => 'createdByUser',
                        'date_modified' => 'dateModified',
                        'modified_by' => 'modifiedBy',
                        'modified_by_user' => 'modifiedByUser',
                        'checked_out' => 'checkedOut',
                        'checked_out_by' => 'checkedOutBy',
                        'checked_out_by_user' => 'checkedOutByUser',
                        'id' => 'id',
                        'name' => 'name',
                        'description' => 'description',
                        'is_admin' => 'isAdmin',
                        'readable_permissions' => 'rawPermissions',
                    ],
                ],
                'columnNames' => [
                    [
                        'isPublished' => 'is_published',
                        'dateAdded' => 'date_added',
                        'createdBy' => 'created_by',
                        'createdByUser' => 'created_by_user',
                        'dateModified' => 'date_modified',
                        'modifiedBy' => 'modified_by',
                        'modifiedByUser' => 'modified_by_user',
                        'checkedOut' => 'checked_out',
                        'checkedOutBy' => 'checked_out_by',
                        'checkedOutByUser' => 'checked_out_by_user',
                        'id' => 'id',
                        'name' => 'name',
                        'description' => 'description',
                        'isAdmin' => 'is_admin',
                        'rawPermissions' => 'readable_permissions',
                    ],
                ],
                'table' => [
                    [
                        'name' => 'roles',
                        'indexes' => [],
                        'uniqueConstraints' => [],
                    ],
                ],
                'associationMappings' => [
                    [
                        'permissions' => [
                            'fieldName' => 'permissions',
                            'targetEntity' => 'Mautic\\UserBundle\\Entity\\Permission',
                            'orphanRemoval' => true,
                            'mappedBy' => 'role',
                            'cascade' => [
                                'persist',
                                'remove',
                            ],
                            'fetch' => 4,
                            'type' => 4,
                            'inversedBy' => null,
                            'isOwningSide' => false,
                            'sourceEntity' => 'Mautic\\UserBundle\\Entity\\Role',
                            'isCascadeRemove' => true,
                            'isCascadePersist' => true,
                            'isCascadeRefresh' => false,
                            'isCascadeMerge' => false,
                            'isCascadeDetach' => false,
                        ],
                        'users' => [
                            'fieldName' => 'users',
                            'targetEntity' => 'Mautic\\UserBundle\\Entity\\User',
                            'mappedBy' => 'role',
                            'fetch' => 4,
                            'type' => 4,
                            'inversedBy' => null,
                            'isOwningSide' => false,
                            'sourceEntity' => 'Mautic\\UserBundle\\Entity\\Role',
                            'cascade' => [],
                            'isCascadeRemove' => false,
                            'isCascadePersist' => false,
                            'isCascadeRefresh' => false,
                            'isCascadeMerge' => false,
                            'isCascadeDetach' => false,
                            'orphanRemoval' => false,
                        ],
                    ],
                ],
                'idGenerator' => [
                    $o[1],
                ],
                'changeTrackingPolicy' => [
                    2,
                ],
            ],
        ],
        $o[0],
        []
    );
},
80 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ClassMetadata')),
            clone ($p['Doctrine\\ORM\\Id\\AssignedGenerator'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Id\\AssignedGenerator')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'Mautic\\UserBundle\\Entity\\IdEntry',
                ],
                'namespace' => [
                    'Mautic\\UserBundle\\Entity',
                ],
                'rootEntityName' => [
                    'Mautic\\UserBundle\\Entity\\IdEntry',
                ],
                'identifier' => [
                    [
                        'id',
                        'entityId',
                    ],
                ],
                'fieldMappings' => [
                    [
                        'id' => [
                            'fieldName' => 'id',
                            'type' => 'string',
                            'length' => 191,
                            'id' => true,
                            'columnName' => 'id',
                        ],
                        'entityId' => [
                            'fieldName' => 'entityId',
                            'type' => 'string',
                            'length' => 191,
                            'columnName' => 'entity_id',
                            'id' => true,
                        ],
                        'expiryTimestamp' => [
                            'fieldName' => 'expiryTimestamp',
                            'type' => 'integer',
                            'columnName' => 'expiryTimestamp',
                        ],
                    ],
                ],
                'fieldNames' => [
                    [
                        'id' => 'id',
                        'entity_id' => 'entityId',
                        'expiryTimestamp' => 'expiryTimestamp',
                    ],
                ],
                'columnNames' => [
                    [
                        'id' => 'id',
                        'entityId' => 'entity_id',
                        'expiryTimestamp' => 'expiryTimestamp',
                    ],
                ],
                'table' => [
                    [
                        'name' => 'saml_id_entry',
                        'indexes' => [],
                        'uniqueConstraints' => [],
                    ],
                ],
                'isIdentifierComposite' => [
                    true,
                ],
                'idGenerator' => [
                    $o[1],
                ],
                'changeTrackingPolicy' => [
                    2,
                ],
            ],
        ],
        $o[0],
        []
    );
},
81 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ClassMetadata')),
            clone ($p['Doctrine\\ORM\\Id\\IdentityGenerator'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Id\\IdentityGenerator')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'Mautic\\UserBundle\\Entity\\Permission',
                ],
                'namespace' => [
                    'Mautic\\UserBundle\\Entity',
                ],
                'rootEntityName' => [
                    'Mautic\\UserBundle\\Entity\\Permission',
                ],
                'customRepositoryClassName' => [
                    'Mautic\\UserBundle\\Entity\\PermissionRepository',
                ],
                'identifier' => [
                    [
                        'id',
                    ],
                ],
                'generatorType' => [
                    4,
                ],
                'fieldMappings' => [
                    [
                        'id' => [
                            'fieldName' => 'id',
                            'type' => 'integer',
                            'id' => true,
                            'options' => [
                                'unsigned' => true,
                            ],
                            'columnName' => 'id',
                        ],
                        'bundle' => [
                            'fieldName' => 'bundle',
                            'type' => 'string',
                            'length' => 50,
                            'columnName' => 'bundle',
                        ],
                        'name' => [
                            'fieldName' => 'name',
                            'type' => 'string',
                            'length' => 50,
                            'columnName' => 'name',
                        ],
                        'bitwise' => [
                            'fieldName' => 'bitwise',
                            'type' => 'integer',
                            'columnName' => 'bitwise',
                        ],
                    ],
                ],
                'fieldNames' => [
                    [
                        'id' => 'id',
                        'bundle' => 'bundle',
                        'name' => 'name',
                        'bitwise' => 'bitwise',
                    ],
                ],
                'columnNames' => [
                    [
                        'id' => 'id',
                        'bundle' => 'bundle',
                        'name' => 'name',
                        'bitwise' => 'bitwise',
                    ],
                ],
                'table' => [
                    [
                        'name' => 'permissions',
                        'uniqueConstraints' => [
                            'unique_perm' => [
                                'columns' => [
                                    'bundle',
                                    'name',
                                    'role_id',
                                ],
                            ],
                        ],
                        'indexes' => [],
                    ],
                ],
                'associationMappings' => [
                    [
                        'role' => [
                            'fieldName' => 'role',
                            'targetEntity' => 'Mautic\\UserBundle\\Entity\\Role',
                            'inversedBy' => 'permissions',
                            'joinColumns' => [
                                [
                                    'name' => 'role_id',
                                    'referencedColumnName' => 'id',
                                    'nullable' => false,
                                    'unique' => false,
                                    'onDelete' => 'CASCADE',
                                    'columnDefinition' => null,
                                ],
                            ],
                            'type' => 2,
                            'mappedBy' => null,
                            'isOwningSide' => true,
                            'sourceEntity' => 'Mautic\\UserBundle\\Entity\\Permission',
                            'fetch' => 2,
                            'cascade' => [],
                            'isCascadeRemove' => false,
                            'isCascadePersist' => false,
                            'isCascadeRefresh' => false,
                            'isCascadeMerge' => false,
                            'isCascadeDetach' => false,
                            'sourceToTargetKeyColumns' => [
                                'role_id' => 'id',
                            ],
                            'joinColumnFieldNames' => [
                                'role_id' => 'role_id',
                            ],
                            'targetToSourceKeyColumns' => [
                                'id' => 'role_id',
                            ],
                            'orphanRemoval' => false,
                        ],
                    ],
                ],
                'idGenerator' => [
                    $o[1],
                ],
                'changeTrackingPolicy' => [
                    2,
                ],
            ],
        ],
        $o[0],
        []
    );
},
82 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ClassMetadata')),
            clone ($p['Doctrine\\ORM\\Id\\IdentityGenerator'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Id\\IdentityGenerator')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'Mautic\\UserBundle\\Entity\\UserToken',
                ],
                'namespace' => [
                    'Mautic\\UserBundle\\Entity',
                ],
                'rootEntityName' => [
                    'Mautic\\UserBundle\\Entity\\UserToken',
                ],
                'customRepositoryClassName' => [
                    'Mautic\\UserBundle\\Entity\\UserTokenRepository',
                ],
                'identifier' => [
                    [
                        'id',
                    ],
                ],
                'generatorType' => [
                    4,
                ],
                'fieldMappings' => [
                    [
                        'id' => [
                            'fieldName' => 'id',
                            'type' => 'integer',
                            'id' => true,
                            'options' => [
                                'unsigned' => true,
                            ],
                            'columnName' => 'id',
                        ],
                        'authorizator' => [
                            'fieldName' => 'authorizator',
                            'type' => 'string',
                            'length' => 32,
                            'columnName' => 'authorizator',
                        ],
                        'secret' => [
                            'fieldName' => 'secret',
                            'type' => 'string',
                            'length' => 120,
                            'unique' => true,
                            'columnName' => 'secret',
                        ],
                        'expiration' => [
                            'fieldName' => 'expiration',
                            'type' => 'datetime',
                            'nullable' => true,
                            'columnName' => 'expiration',
                        ],
                        'oneTimeOnly' => [
                            'fieldName' => 'oneTimeOnly',
                            'type' => 'boolean',
                            'columnName' => 'one_time_only',
                        ],
                    ],
                ],
                'fieldNames' => [
                    [
                        'id' => 'id',
                        'authorizator' => 'authorizator',
                        'secret' => 'secret',
                        'expiration' => 'expiration',
                        'one_time_only' => 'oneTimeOnly',
                    ],
                ],
                'columnNames' => [
                    [
                        'id' => 'id',
                        'authorizator' => 'authorizator',
                        'secret' => 'secret',
                        'expiration' => 'expiration',
                        'oneTimeOnly' => 'one_time_only',
                    ],
                ],
                'table' => [
                    [
                        'name' => 'user_tokens',
                        'indexes' => [],
                        'uniqueConstraints' => [],
                    ],
                ],
                'associationMappings' => [
                    [
                        'user' => [
                            'fieldName' => 'user',
                            'targetEntity' => 'Mautic\\UserBundle\\Entity\\User',
                            'joinColumns' => [
                                [
                                    'name' => 'user_id',
                                    'referencedColumnName' => 'id',
                                    'nullable' => false,
                                    'unique' => false,
                                    'onDelete' => 'CASCADE',
                                    'columnDefinition' => null,
                                ],
                            ],
                            'type' => 2,
                            'mappedBy' => null,
                            'inversedBy' => null,
                            'isOwningSide' => true,
                            'sourceEntity' => 'Mautic\\UserBundle\\Entity\\UserToken',
                            'fetch' => 2,
                            'cascade' => [],
                            'isCascadeRemove' => false,
                            'isCascadePersist' => false,
                            'isCascadeRefresh' => false,
                            'isCascadeMerge' => false,
                            'isCascadeDetach' => false,
                            'sourceToTargetKeyColumns' => [
                                'user_id' => 'id',
                            ],
                            'joinColumnFieldNames' => [
                                'user_id' => 'user_id',
                            ],
                            'targetToSourceKeyColumns' => [
                                'id' => 'user_id',
                            ],
                            'orphanRemoval' => false,
                        ],
                    ],
                ],
                'idGenerator' => [
                    $o[1],
                ],
                'changeTrackingPolicy' => [
                    2,
                ],
            ],
        ],
        $o[0],
        []
    );
},
83 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ClassMetadata')),
            clone ($p['Doctrine\\ORM\\Id\\IdentityGenerator'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Id\\IdentityGenerator')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'Mautic\\WebhookBundle\\Entity\\Event',
                ],
                'namespace' => [
                    'Mautic\\WebhookBundle\\Entity',
                ],
                'rootEntityName' => [
                    'Mautic\\WebhookBundle\\Entity\\Event',
                ],
                'customRepositoryClassName' => [
                    'Mautic\\WebhookBundle\\Entity\\EventRepository',
                ],
                'identifier' => [
                    [
                        'id',
                    ],
                ],
                'generatorType' => [
                    4,
                ],
                'fieldMappings' => [
                    [
                        'id' => [
                            'fieldName' => 'id',
                            'type' => 'integer',
                            'id' => true,
                            'options' => [
                                'unsigned' => true,
                            ],
                            'columnName' => 'id',
                        ],
                        'eventType' => [
                            'fieldName' => 'eventType',
                            'type' => 'string',
                            'length' => 50,
                            'columnName' => 'event_type',
                        ],
                    ],
                ],
                'fieldNames' => [
                    [
                        'id' => 'id',
                        'event_type' => 'eventType',
                    ],
                ],
                'columnNames' => [
                    [
                        'id' => 'id',
                        'eventType' => 'event_type',
                    ],
                ],
                'table' => [
                    [
                        'name' => 'webhook_events',
                        'indexes' => [],
                        'uniqueConstraints' => [],
                    ],
                ],
                'associationMappings' => [
                    [
                        'webhook' => [
                            'fieldName' => 'webhook',
                            'targetEntity' => 'Mautic\\WebhookBundle\\Entity\\Webhook',
                            'inversedBy' => 'events',
                            'cascade' => [
                                'detach',
                                'merge',
                            ],
                            'joinColumns' => [
                                [
                                    'name' => 'webhook_id',
                                    'referencedColumnName' => 'id',
                                    'nullable' => false,
                                    'unique' => false,
                                    'onDelete' => 'CASCADE',
                                    'columnDefinition' => null,
                                ],
                            ],
                            'type' => 2,
                            'mappedBy' => null,
                            'isOwningSide' => true,
                            'sourceEntity' => 'Mautic\\WebhookBundle\\Entity\\Event',
                            'fetch' => 2,
                            'isCascadeRemove' => false,
                            'isCascadePersist' => false,
                            'isCascadeRefresh' => false,
                            'isCascadeMerge' => true,
                            'isCascadeDetach' => true,
                            'sourceToTargetKeyColumns' => [
                                'webhook_id' => 'id',
                            ],
                            'joinColumnFieldNames' => [
                                'webhook_id' => 'webhook_id',
                            ],
                            'targetToSourceKeyColumns' => [
                                'id' => 'webhook_id',
                            ],
                            'orphanRemoval' => false,
                        ],
                        'queues' => [
                            'fieldName' => 'queues',
                            'targetEntity' => 'Mautic\\WebhookBundle\\Entity\\WebhookQueue',
                            'mappedBy' => 'event',
                            'cascade' => [
                                'detach',
                                'merge',
                            ],
                            'fetch' => 4,
                            'type' => 4,
                            'inversedBy' => null,
                            'isOwningSide' => false,
                            'sourceEntity' => 'Mautic\\WebhookBundle\\Entity\\Event',
                            'isCascadeRemove' => false,
                            'isCascadePersist' => false,
                            'isCascadeRefresh' => false,
                            'isCascadeMerge' => true,
                            'isCascadeDetach' => true,
                            'orphanRemoval' => false,
                        ],
                    ],
                ],
                'idGenerator' => [
                    $o[1],
                ],
                'changeTrackingPolicy' => [
                    2,
                ],
            ],
        ],
        $o[0],
        []
    );
},
84 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ClassMetadata')),
            clone ($p['Doctrine\\ORM\\Id\\IdentityGenerator'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Id\\IdentityGenerator')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'Mautic\\WebhookBundle\\Entity\\Webhook',
                ],
                'namespace' => [
                    'Mautic\\WebhookBundle\\Entity',
                ],
                'rootEntityName' => [
                    'Mautic\\WebhookBundle\\Entity\\Webhook',
                ],
                'customRepositoryClassName' => [
                    'Mautic\\WebhookBundle\\Entity\\WebhookRepository',
                ],
                'identifier' => [
                    [
                        'id',
                    ],
                ],
                'generatorType' => [
                    4,
                ],
                'fieldMappings' => [
                    [
                        'isPublished' => [
                            'fieldName' => 'isPublished',
                            'type' => 'boolean',
                            'columnName' => 'is_published',
                            'declared' => 'Mautic\\CoreBundle\\Entity\\FormEntity',
                        ],
                        'dateAdded' => [
                            'fieldName' => 'dateAdded',
                            'type' => 'datetime',
                            'columnName' => 'date_added',
                            'nullable' => true,
                            'declared' => 'Mautic\\CoreBundle\\Entity\\FormEntity',
                        ],
                        'createdBy' => [
                            'fieldName' => 'createdBy',
                            'type' => 'integer',
                            'columnName' => 'created_by',
                            'nullable' => true,
                            'declared' => 'Mautic\\CoreBundle\\Entity\\FormEntity',
                        ],
                        'createdByUser' => [
                            'fieldName' => 'createdByUser',
                            'type' => 'string',
                            'length' => 191,
                            'columnName' => 'created_by_user',
                            'nullable' => true,
                            'declared' => 'Mautic\\CoreBundle\\Entity\\FormEntity',
                        ],
                        'dateModified' => [
                            'fieldName' => 'dateModified',
                            'type' => 'datetime',
                            'columnName' => 'date_modified',
                            'nullable' => true,
                            'declared' => 'Mautic\\CoreBundle\\Entity\\FormEntity',
                        ],
                        'modifiedBy' => [
                            'fieldName' => 'modifiedBy',
                            'type' => 'integer',
                            'columnName' => 'modified_by',
                            'nullable' => true,
                            'declared' => 'Mautic\\CoreBundle\\Entity\\FormEntity',
                        ],
                        'modifiedByUser' => [
                            'fieldName' => 'modifiedByUser',
                            'type' => 'string',
                            'length' => 191,
                            'columnName' => 'modified_by_user',
                            'nullable' => true,
                            'declared' => 'Mautic\\CoreBundle\\Entity\\FormEntity',
                        ],
                        'checkedOut' => [
                            'fieldName' => 'checkedOut',
                            'type' => 'datetime',
                            'columnName' => 'checked_out',
                            'nullable' => true,
                            'declared' => 'Mautic\\CoreBundle\\Entity\\FormEntity',
                        ],
                        'checkedOutBy' => [
                            'fieldName' => 'checkedOutBy',
                            'type' => 'integer',
                            'columnName' => 'checked_out_by',
                            'nullable' => true,
                            'declared' => 'Mautic\\CoreBundle\\Entity\\FormEntity',
                        ],
                        'checkedOutByUser' => [
                            'fieldName' => 'checkedOutByUser',
                            'type' => 'string',
                            'length' => 191,
                            'columnName' => 'checked_out_by_user',
                            'nullable' => true,
                            'declared' => 'Mautic\\CoreBundle\\Entity\\FormEntity',
                        ],
                        'id' => [
                            'fieldName' => 'id',
                            'type' => 'integer',
                            'id' => true,
                            'options' => [
                                'unsigned' => true,
                            ],
                            'columnName' => 'id',
                        ],
                        'name' => [
                            'fieldName' => 'name',
                            'type' => 'string',
                            'length' => 191,
                            'columnName' => 'name',
                        ],
                        'description' => [
                            'fieldName' => 'description',
                            'type' => 'text',
                            'nullable' => true,
                            'columnName' => 'description',
                        ],
                        'webhookUrl' => [
                            'fieldName' => 'webhookUrl',
                            'type' => 'text',
                            'columnName' => 'webhook_url',
                        ],
                        'secret' => [
                            'length' => 191,
                            'fieldName' => 'secret',
                            'type' => 'string',
                            'columnName' => 'secret',
                        ],
                        'eventsOrderbyDir' => [
                            'fieldName' => 'eventsOrderbyDir',
                            'type' => 'string',
                            'length' => 191,
                            'nullable' => true,
                            'columnName' => 'events_orderby_dir',
                        ],
                    ],
                ],
                'fieldNames' => [
                    [
                        'is_published' => 'isPublished',
                        'date_added' => 'dateAdded',
                        'created_by' => 'createdBy',
                        'created_by_user' => 'createdByUser',
                        'date_modified' => 'dateModified',
                        'modified_by' => 'modifiedBy',
                        'modified_by_user' => 'modifiedByUser',
                        'checked_out' => 'checkedOut',
                        'checked_out_by' => 'checkedOutBy',
                        'checked_out_by_user' => 'checkedOutByUser',
                        'id' => 'id',
                        'name' => 'name',
                        'description' => 'description',
                        'webhook_url' => 'webhookUrl',
                        'secret' => 'secret',
                        'events_orderby_dir' => 'eventsOrderbyDir',
                    ],
                ],
                'columnNames' => [
                    [
                        'isPublished' => 'is_published',
                        'dateAdded' => 'date_added',
                        'createdBy' => 'created_by',
                        'createdByUser' => 'created_by_user',
                        'dateModified' => 'date_modified',
                        'modifiedBy' => 'modified_by',
                        'modifiedByUser' => 'modified_by_user',
                        'checkedOut' => 'checked_out',
                        'checkedOutBy' => 'checked_out_by',
                        'checkedOutByUser' => 'checked_out_by_user',
                        'id' => 'id',
                        'name' => 'name',
                        'description' => 'description',
                        'webhookUrl' => 'webhook_url',
                        'secret' => 'secret',
                        'eventsOrderbyDir' => 'events_orderby_dir',
                    ],
                ],
                'table' => [
                    [
                        'name' => 'webhooks',
                        'indexes' => [],
                        'uniqueConstraints' => [],
                    ],
                ],
                'associationMappings' => [
                    [
                        'category' => [
                            'fieldName' => 'category',
                            'targetEntity' => 'Mautic\\CategoryBundle\\Entity\\Category',
                            'cascade' => [
                                'merge',
                                'detach',
                            ],
                            'joinColumns' => [
                                [
                                    'name' => 'category_id',
                                    'referencedColumnName' => 'id',
                                    'nullable' => true,
                                    'unique' => false,
                                    'onDelete' => 'SET NULL',
                                    'columnDefinition' => null,
                                ],
                            ],
                            'type' => 2,
                            'mappedBy' => null,
                            'inversedBy' => null,
                            'isOwningSide' => true,
                            'sourceEntity' => 'Mautic\\WebhookBundle\\Entity\\Webhook',
                            'fetch' => 2,
                            'isCascadeRemove' => false,
                            'isCascadePersist' => false,
                            'isCascadeRefresh' => false,
                            'isCascadeMerge' => true,
                            'isCascadeDetach' => true,
                            'sourceToTargetKeyColumns' => [
                                'category_id' => 'id',
                            ],
                            'joinColumnFieldNames' => [
                                'category_id' => 'category_id',
                            ],
                            'targetToSourceKeyColumns' => [
                                'id' => 'category_id',
                            ],
                            'orphanRemoval' => false,
                        ],
                        'events' => [
                            'fieldName' => 'events',
                            'targetEntity' => 'Mautic\\WebhookBundle\\Entity\\Event',
                            'orphanRemoval' => true,
                            'indexBy' => 'event_type',
                            'mappedBy' => 'webhook',
                            'cascade' => [
                                'persist',
                                'merge',
                                'detach',
                            ],
                            'type' => 4,
                            'inversedBy' => null,
                            'isOwningSide' => false,
                            'sourceEntity' => 'Mautic\\WebhookBundle\\Entity\\Webhook',
                            'fetch' => 2,
                            'isCascadeRemove' => true,
                            'isCascadePersist' => true,
                            'isCascadeRefresh' => false,
                            'isCascadeMerge' => true,
                            'isCascadeDetach' => true,
                        ],
                        'logs' => [
                            'fieldName' => 'logs',
                            'targetEntity' => 'Mautic\\WebhookBundle\\Entity\\Log',
                            'orderBy' => [
                                'dateAdded' => 'DESC',
                            ],
                            'fetch' => 4,
                            'mappedBy' => 'webhook',
                            'cascade' => [
                                'persist',
                                'merge',
                                'detach',
                            ],
                            'type' => 4,
                            'inversedBy' => null,
                            'isOwningSide' => false,
                            'sourceEntity' => 'Mautic\\WebhookBundle\\Entity\\Webhook',
                            'isCascadeRemove' => false,
                            'isCascadePersist' => true,
                            'isCascadeRefresh' => false,
                            'isCascadeMerge' => true,
                            'isCascadeDetach' => true,
                            'orphanRemoval' => false,
                        ],
                    ],
                ],
                'idGenerator' => [
                    $o[1],
                ],
                'changeTrackingPolicy' => [
                    2,
                ],
            ],
        ],
        $o[0],
        []
    );
},
85 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ClassMetadata')),
            clone ($p['Doctrine\\ORM\\Id\\IdentityGenerator'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Id\\IdentityGenerator')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'Mautic\\WebhookBundle\\Entity\\WebhookQueue',
                ],
                'namespace' => [
                    'Mautic\\WebhookBundle\\Entity',
                ],
                'rootEntityName' => [
                    'Mautic\\WebhookBundle\\Entity\\WebhookQueue',
                ],
                'customRepositoryClassName' => [
                    'Mautic\\WebhookBundle\\Entity\\WebhookQueueRepository',
                ],
                'identifier' => [
                    [
                        'id',
                    ],
                ],
                'generatorType' => [
                    4,
                ],
                'fieldMappings' => [
                    [
                        'id' => [
                            'fieldName' => 'id',
                            'type' => 'integer',
                            'id' => true,
                            'options' => [
                                'unsigned' => true,
                            ],
                            'columnName' => 'id',
                        ],
                        'dateAdded' => [
                            'fieldName' => 'dateAdded',
                            'type' => 'datetime',
                            'nullable' => true,
                            'columnName' => 'date_added',
                        ],
                        'payload' => [
                            'fieldName' => 'payload',
                            'type' => 'text',
                            'columnName' => 'payload',
                        ],
                    ],
                ],
                'fieldNames' => [
                    [
                        'id' => 'id',
                        'date_added' => 'dateAdded',
                        'payload' => 'payload',
                    ],
                ],
                'columnNames' => [
                    [
                        'id' => 'id',
                        'dateAdded' => 'date_added',
                        'payload' => 'payload',
                    ],
                ],
                'table' => [
                    [
                        'name' => 'webhook_queue',
                        'indexes' => [],
                        'uniqueConstraints' => [],
                    ],
                ],
                'associationMappings' => [
                    [
                        'webhook' => [
                            'fieldName' => 'webhook',
                            'targetEntity' => 'Mautic\\WebhookBundle\\Entity\\Webhook',
                            'joinColumns' => [
                                [
                                    'name' => 'webhook_id',
                                    'referencedColumnName' => 'id',
                                    'nullable' => false,
                                    'unique' => false,
                                    'onDelete' => 'CASCADE',
                                    'columnDefinition' => null,
                                ],
                            ],
                            'type' => 2,
                            'mappedBy' => null,
                            'inversedBy' => null,
                            'isOwningSide' => true,
                            'sourceEntity' => 'Mautic\\WebhookBundle\\Entity\\WebhookQueue',
                            'fetch' => 2,
                            'cascade' => [],
                            'isCascadeRemove' => false,
                            'isCascadePersist' => false,
                            'isCascadeRefresh' => false,
                            'isCascadeMerge' => false,
                            'isCascadeDetach' => false,
                            'sourceToTargetKeyColumns' => [
                                'webhook_id' => 'id',
                            ],
                            'joinColumnFieldNames' => [
                                'webhook_id' => 'webhook_id',
                            ],
                            'targetToSourceKeyColumns' => [
                                'id' => 'webhook_id',
                            ],
                            'orphanRemoval' => false,
                        ],
                        'event' => [
                            'fieldName' => 'event',
                            'targetEntity' => 'Mautic\\WebhookBundle\\Entity\\Event',
                            'inversedBy' => 'queues',
                            'joinColumns' => [
                                [
                                    'name' => 'event_id',
                                    'referencedColumnName' => 'id',
                                    'nullable' => false,
                                    'unique' => false,
                                    'onDelete' => 'CASCADE',
                                    'columnDefinition' => null,
                                ],
                            ],
                            'type' => 2,
                            'mappedBy' => null,
                            'isOwningSide' => true,
                            'sourceEntity' => 'Mautic\\WebhookBundle\\Entity\\WebhookQueue',
                            'fetch' => 2,
                            'cascade' => [],
                            'isCascadeRemove' => false,
                            'isCascadePersist' => false,
                            'isCascadeRefresh' => false,
                            'isCascadeMerge' => false,
                            'isCascadeDetach' => false,
                            'sourceToTargetKeyColumns' => [
                                'event_id' => 'id',
                            ],
                            'joinColumnFieldNames' => [
                                'event_id' => 'event_id',
                            ],
                            'targetToSourceKeyColumns' => [
                                'id' => 'event_id',
                            ],
                            'orphanRemoval' => false,
                        ],
                    ],
                ],
                'idGenerator' => [
                    $o[1],
                ],
                'changeTrackingPolicy' => [
                    2,
                ],
            ],
        ],
        $o[0],
        []
    );
},
86 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ClassMetadata')),
            clone ($p['Doctrine\\ORM\\Id\\IdentityGenerator'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Id\\IdentityGenerator')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'Mautic\\WebhookBundle\\Entity\\Log',
                ],
                'namespace' => [
                    'Mautic\\WebhookBundle\\Entity',
                ],
                'rootEntityName' => [
                    'Mautic\\WebhookBundle\\Entity\\Log',
                ],
                'customRepositoryClassName' => [
                    'Mautic\\WebhookBundle\\Entity\\LogRepository',
                ],
                'identifier' => [
                    [
                        'id',
                    ],
                ],
                'generatorType' => [
                    4,
                ],
                'fieldMappings' => [
                    [
                        'id' => [
                            'fieldName' => 'id',
                            'type' => 'integer',
                            'id' => true,
                            'options' => [
                                'unsigned' => true,
                            ],
                            'columnName' => 'id',
                        ],
                        'statusCode' => [
                            'fieldName' => 'statusCode',
                            'type' => 'string',
                            'length' => 50,
                            'columnName' => 'status_code',
                        ],
                        'dateAdded' => [
                            'fieldName' => 'dateAdded',
                            'type' => 'datetime',
                            'nullable' => true,
                            'columnName' => 'date_added',
                        ],
                        'note' => [
                            'fieldName' => 'note',
                            'type' => 'string',
                            'length' => 191,
                            'nullable' => true,
                            'columnName' => 'note',
                        ],
                        'runtime' => [
                            'fieldName' => 'runtime',
                            'type' => 'float',
                            'nullable' => true,
                            'columnName' => 'runtime',
                        ],
                    ],
                ],
                'fieldNames' => [
                    [
                        'id' => 'id',
                        'status_code' => 'statusCode',
                        'date_added' => 'dateAdded',
                        'note' => 'note',
                        'runtime' => 'runtime',
                    ],
                ],
                'columnNames' => [
                    [
                        'id' => 'id',
                        'statusCode' => 'status_code',
                        'dateAdded' => 'date_added',
                        'note' => 'note',
                        'runtime' => 'runtime',
                    ],
                ],
                'table' => [
                    [
                        'name' => 'webhook_logs',
                        'indexes' => [],
                        'uniqueConstraints' => [],
                    ],
                ],
                'associationMappings' => [
                    [
                        'webhook' => [
                            'fieldName' => 'webhook',
                            'targetEntity' => 'Mautic\\WebhookBundle\\Entity\\Webhook',
                            'inversedBy' => 'logs',
                            'joinColumns' => [
                                [
                                    'name' => 'webhook_id',
                                    'referencedColumnName' => 'id',
                                    'nullable' => false,
                                    'unique' => false,
                                    'onDelete' => 'CASCADE',
                                    'columnDefinition' => null,
                                ],
                            ],
                            'type' => 2,
                            'mappedBy' => null,
                            'isOwningSide' => true,
                            'sourceEntity' => 'Mautic\\WebhookBundle\\Entity\\Log',
                            'fetch' => 2,
                            'cascade' => [],
                            'isCascadeRemove' => false,
                            'isCascadePersist' => false,
                            'isCascadeRefresh' => false,
                            'isCascadeMerge' => false,
                            'isCascadeDetach' => false,
                            'sourceToTargetKeyColumns' => [
                                'webhook_id' => 'id',
                            ],
                            'joinColumnFieldNames' => [
                                'webhook_id' => 'webhook_id',
                            ],
                            'targetToSourceKeyColumns' => [
                                'id' => 'webhook_id',
                            ],
                            'orphanRemoval' => false,
                        ],
                    ],
                ],
                'idGenerator' => [
                    $o[1],
                ],
                'changeTrackingPolicy' => [
                    2,
                ],
            ],
        ],
        $o[0],
        []
    );
},
87 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ClassMetadata')),
            clone ($p['Doctrine\\ORM\\Id\\IdentityGenerator'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Id\\IdentityGenerator')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'MauticPlugin\\GrapesJsBuilderBundle\\Entity\\GrapesJsBuilder',
                ],
                'namespace' => [
                    'MauticPlugin\\GrapesJsBuilderBundle\\Entity',
                ],
                'rootEntityName' => [
                    'MauticPlugin\\GrapesJsBuilderBundle\\Entity\\GrapesJsBuilder',
                ],
                'customRepositoryClassName' => [
                    'MauticPlugin\\GrapesJsBuilderBundle\\Entity\\GrapesJsBuilderRepository',
                ],
                'identifier' => [
                    [
                        'id',
                    ],
                ],
                'generatorType' => [
                    4,
                ],
                'fieldMappings' => [
                    [
                        'customMjml' => [
                            'fieldName' => 'customMjml',
                            'type' => 'text',
                            'columnName' => 'custom_mjml',
                            'nullable' => true,
                        ],
                        'id' => [
                            'fieldName' => 'id',
                            'type' => 'integer',
                            'id' => true,
                            'options' => [
                                'unsigned' => true,
                            ],
                            'columnName' => 'id',
                        ],
                    ],
                ],
                'fieldNames' => [
                    [
                        'custom_mjml' => 'customMjml',
                        'id' => 'id',
                    ],
                ],
                'columnNames' => [
                    [
                        'customMjml' => 'custom_mjml',
                        'id' => 'id',
                    ],
                ],
                'table' => [
                    [
                        'name' => 'bundle_grapesjsbuilder',
                        'indexes' => [],
                        'uniqueConstraints' => [],
                    ],
                ],
                'associationMappings' => [
                    [
                        'email' => [
                            'fieldName' => 'email',
                            'targetEntity' => 'Mautic\\EmailBundle\\Entity\\Email',
                            'joinColumns' => [
                                [
                                    'name' => 'email_id',
                                    'referencedColumnName' => 'id',
                                    'nullable' => true,
                                    'unique' => false,
                                    'onDelete' => 'CASCADE',
                                    'columnDefinition' => null,
                                ],
                            ],
                            'type' => 2,
                            'mappedBy' => null,
                            'inversedBy' => null,
                            'isOwningSide' => true,
                            'sourceEntity' => 'MauticPlugin\\GrapesJsBuilderBundle\\Entity\\GrapesJsBuilder',
                            'fetch' => 2,
                            'cascade' => [],
                            'isCascadeRemove' => false,
                            'isCascadePersist' => false,
                            'isCascadeRefresh' => false,
                            'isCascadeMerge' => false,
                            'isCascadeDetach' => false,
                            'sourceToTargetKeyColumns' => [
                                'email_id' => 'id',
                            ],
                            'joinColumnFieldNames' => [
                                'email_id' => 'email_id',
                            ],
                            'targetToSourceKeyColumns' => [
                                'id' => 'email_id',
                            ],
                            'orphanRemoval' => false,
                        ],
                    ],
                ],
                'idGenerator' => [
                    $o[1],
                ],
                'changeTrackingPolicy' => [
                    2,
                ],
            ],
        ],
        $o[0],
        []
    );
},
88 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ClassMetadata')),
            clone ($p['Doctrine\\ORM\\Id\\IdentityGenerator'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Id\\IdentityGenerator')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'MauticPlugin\\MauticTagManagerBundle\\Entity\\Tag',
                ],
                'namespace' => [
                    'MauticPlugin\\MauticTagManagerBundle\\Entity',
                ],
                'rootEntityName' => [
                    'Mautic\\LeadBundle\\Entity\\Tag',
                ],
                'customRepositoryClassName' => [
                    'MauticPlugin\\MauticTagManagerBundle\\Entity\\TagRepository',
                ],
                'isEmbeddedClass' => [
                    true,
                ],
                'identifier' => [
                    [
                        'id',
                    ],
                ],
                'generatorType' => [
                    4,
                ],
                'fieldMappings' => [
                    [
                        'id' => [
                            'fieldName' => 'id',
                            'type' => 'integer',
                            'id' => true,
                            'options' => [
                                'unsigned' => true,
                            ],
                            'columnName' => 'id',
                            'inherited' => 'Mautic\\LeadBundle\\Entity\\Tag',
                            'declared' => 'Mautic\\LeadBundle\\Entity\\Tag',
                        ],
                        'tag' => [
                            'length' => 191,
                            'fieldName' => 'tag',
                            'type' => 'string',
                            'columnName' => 'tag',
                            'inherited' => 'Mautic\\LeadBundle\\Entity\\Tag',
                            'declared' => 'Mautic\\LeadBundle\\Entity\\Tag',
                        ],
                        'description' => [
                            'fieldName' => 'description',
                            'type' => 'text',
                            'columnName' => 'description',
                            'nullable' => true,
                            'inherited' => 'Mautic\\LeadBundle\\Entity\\Tag',
                            'declared' => 'Mautic\\LeadBundle\\Entity\\Tag',
                        ],
                    ],
                ],
                'fieldNames' => [
                    [
                        'id' => 'id',
                        'tag' => 'tag',
                        'description' => 'description',
                    ],
                ],
                'columnNames' => [
                    [
                        'id' => 'id',
                        'tag' => 'tag',
                        'description' => 'description',
                    ],
                ],
                'table' => [
                    [
                        'name' => 'lead_tags',
                        'indexes' => [],
                        'uniqueConstraints' => [],
                    ],
                ],
                'idGenerator' => [
                    $o[1],
                ],
                'changeTrackingPolicy' => [
                    2,
                ],
            ],
        ],
        $o[0],
        []
    );
},
89 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ClassMetadata')),
            clone ($p['Doctrine\\ORM\\Id\\IdentityGenerator'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Id\\IdentityGenerator')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'MauticPlugin\\MauticCrmBundle\\Entity\\PipedriveOwner',
                ],
                'namespace' => [
                    'MauticPlugin\\MauticCrmBundle\\Entity',
                ],
                'rootEntityName' => [
                    'MauticPlugin\\MauticCrmBundle\\Entity\\PipedriveOwner',
                ],
                'identifier' => [
                    [
                        'id',
                    ],
                ],
                'generatorType' => [
                    4,
                ],
                'fieldMappings' => [
                    [
                        'id' => [
                            'fieldName' => 'id',
                            'type' => 'integer',
                            'id' => true,
                            'options' => [
                                'unsigned' => true,
                            ],
                            'columnName' => 'id',
                        ],
                        'email' => [
                            'fieldName' => 'email',
                            'type' => 'string',
                            'length' => 191,
                            'columnName' => 'email',
                        ],
                        'ownerId' => [
                            'fieldName' => 'ownerId',
                            'type' => 'integer',
                            'columnName' => 'owner_id',
                            'nullable' => true,
                            'length' => 191,
                        ],
                    ],
                ],
                'fieldNames' => [
                    [
                        'id' => 'id',
                        'email' => 'email',
                        'owner_id' => 'ownerId',
                    ],
                ],
                'columnNames' => [
                    [
                        'id' => 'id',
                        'email' => 'email',
                        'ownerId' => 'owner_id',
                    ],
                ],
                'table' => [
                    [
                        'name' => 'plugin_crm_pipedrive_owners',
                        'indexes' => [
                            'email' => [
                                'columns' => [
                                    'email',
                                ],
                            ],
                            'owner_id' => [
                                'columns' => [
                                    'owner_id',
                                ],
                            ],
                        ],
                        'uniqueConstraints' => [],
                    ],
                ],
                'idGenerator' => [
                    $o[1],
                ],
                'changeTrackingPolicy' => [
                    2,
                ],
            ],
        ],
        $o[0],
        []
    );
},
90 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ClassMetadata')),
            clone ($p['Doctrine\\ORM\\Id\\IdentityGenerator'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Id\\IdentityGenerator')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'MauticPlugin\\MauticFocusBundle\\Entity\\Focus',
                ],
                'namespace' => [
                    'MauticPlugin\\MauticFocusBundle\\Entity',
                ],
                'rootEntityName' => [
                    'MauticPlugin\\MauticFocusBundle\\Entity\\Focus',
                ],
                'customRepositoryClassName' => [
                    'MauticPlugin\\MauticFocusBundle\\Entity\\FocusRepository',
                ],
                'identifier' => [
                    [
                        'id',
                    ],
                ],
                'generatorType' => [
                    4,
                ],
                'fieldMappings' => [
                    [
                        'isPublished' => [
                            'fieldName' => 'isPublished',
                            'type' => 'boolean',
                            'columnName' => 'is_published',
                            'declared' => 'Mautic\\CoreBundle\\Entity\\FormEntity',
                        ],
                        'dateAdded' => [
                            'fieldName' => 'dateAdded',
                            'type' => 'datetime',
                            'columnName' => 'date_added',
                            'nullable' => true,
                            'declared' => 'Mautic\\CoreBundle\\Entity\\FormEntity',
                        ],
                        'createdBy' => [
                            'fieldName' => 'createdBy',
                            'type' => 'integer',
                            'columnName' => 'created_by',
                            'nullable' => true,
                            'declared' => 'Mautic\\CoreBundle\\Entity\\FormEntity',
                        ],
                        'createdByUser' => [
                            'fieldName' => 'createdByUser',
                            'type' => 'string',
                            'length' => 191,
                            'columnName' => 'created_by_user',
                            'nullable' => true,
                            'declared' => 'Mautic\\CoreBundle\\Entity\\FormEntity',
                        ],
                        'dateModified' => [
                            'fieldName' => 'dateModified',
                            'type' => 'datetime',
                            'columnName' => 'date_modified',
                            'nullable' => true,
                            'declared' => 'Mautic\\CoreBundle\\Entity\\FormEntity',
                        ],
                        'modifiedBy' => [
                            'fieldName' => 'modifiedBy',
                            'type' => 'integer',
                            'columnName' => 'modified_by',
                            'nullable' => true,
                            'declared' => 'Mautic\\CoreBundle\\Entity\\FormEntity',
                        ],
                        'modifiedByUser' => [
                            'fieldName' => 'modifiedByUser',
                            'type' => 'string',
                            'length' => 191,
                            'columnName' => 'modified_by_user',
                            'nullable' => true,
                            'declared' => 'Mautic\\CoreBundle\\Entity\\FormEntity',
                        ],
                        'checkedOut' => [
                            'fieldName' => 'checkedOut',
                            'type' => 'datetime',
                            'columnName' => 'checked_out',
                            'nullable' => true,
                            'declared' => 'Mautic\\CoreBundle\\Entity\\FormEntity',
                        ],
                        'checkedOutBy' => [
                            'fieldName' => 'checkedOutBy',
                            'type' => 'integer',
                            'columnName' => 'checked_out_by',
                            'nullable' => true,
                            'declared' => 'Mautic\\CoreBundle\\Entity\\FormEntity',
                        ],
                        'checkedOutByUser' => [
                            'fieldName' => 'checkedOutByUser',
                            'type' => 'string',
                            'length' => 191,
                            'columnName' => 'checked_out_by_user',
                            'nullable' => true,
                            'declared' => 'Mautic\\CoreBundle\\Entity\\FormEntity',
                        ],
                        'id' => [
                            'fieldName' => 'id',
                            'type' => 'integer',
                            'id' => true,
                            'options' => [
                                'unsigned' => true,
                            ],
                            'columnName' => 'id',
                        ],
                        'name' => [
                            'fieldName' => 'name',
                            'type' => 'string',
                            'length' => 191,
                            'columnName' => 'name',
                        ],
                        'description' => [
                            'fieldName' => 'description',
                            'type' => 'text',
                            'nullable' => true,
                            'columnName' => 'description',
                        ],
                        'type' => [
                            'fieldName' => 'type',
                            'type' => 'string',
                            'length' => 191,
                            'columnName' => 'focus_type',
                        ],
                        'style' => [
                            'length' => 191,
                            'fieldName' => 'style',
                            'type' => 'string',
                            'columnName' => 'style',
                        ],
                        'website' => [
                            'fieldName' => 'website',
                            'type' => 'string',
                            'length' => 191,
                            'nullable' => true,
                            'columnName' => 'website',
                        ],
                        'publishUp' => [
                            'fieldName' => 'publishUp',
                            'type' => 'datetime',
                            'columnName' => 'publish_up',
                            'nullable' => true,
                        ],
                        'publishDown' => [
                            'fieldName' => 'publishDown',
                            'type' => 'datetime',
                            'columnName' => 'publish_down',
                            'nullable' => true,
                        ],
                        'properties' => [
                            'fieldName' => 'properties',
                            'type' => 'array',
                            'nullable' => true,
                            'columnName' => 'properties',
                        ],
                        'utmTags' => [
                            'fieldName' => 'utmTags',
                            'type' => 'array',
                            'columnName' => 'utm_tags',
                            'nullable' => true,
                        ],
                        'form' => [
                            'fieldName' => 'form',
                            'type' => 'integer',
                            'columnName' => 'form_id',
                            'nullable' => true,
                        ],
                        'cache' => [
                            'fieldName' => 'cache',
                            'type' => 'text',
                            'nullable' => true,
                            'columnName' => 'cache',
                        ],
                        'htmlMode' => [
                            'fieldName' => 'htmlMode',
                            'type' => 'string',
                            'length' => 191,
                            'columnName' => 'html_mode',
                            'nullable' => true,
                        ],
                        'editor' => [
                            'fieldName' => 'editor',
                            'type' => 'text',
                            'nullable' => true,
                            'columnName' => 'editor',
                        ],
                        'html' => [
                            'fieldName' => 'html',
                            'type' => 'text',
                            'nullable' => true,
                            'columnName' => 'html',
                        ],
                    ],
                ],
                'fieldNames' => [
                    [
                        'is_published' => 'isPublished',
                        'date_added' => 'dateAdded',
                        'created_by' => 'createdBy',
                        'created_by_user' => 'createdByUser',
                        'date_modified' => 'dateModified',
                        'modified_by' => 'modifiedBy',
                        'modified_by_user' => 'modifiedByUser',
                        'checked_out' => 'checkedOut',
                        'checked_out_by' => 'checkedOutBy',
                        'checked_out_by_user' => 'checkedOutByUser',
                        'id' => 'id',
                        'name' => 'name',
                        'description' => 'description',
                        'focus_type' => 'type',
                        'style' => 'style',
                        'website' => 'website',
                        'publish_up' => 'publishUp',
                        'publish_down' => 'publishDown',
                        'properties' => 'properties',
                        'utm_tags' => 'utmTags',
                        'form_id' => 'form',
                        'cache' => 'cache',
                        'html_mode' => 'htmlMode',
                        'editor' => 'editor',
                        'html' => 'html',
                    ],
                ],
                'columnNames' => [
                    [
                        'isPublished' => 'is_published',
                        'dateAdded' => 'date_added',
                        'createdBy' => 'created_by',
                        'createdByUser' => 'created_by_user',
                        'dateModified' => 'date_modified',
                        'modifiedBy' => 'modified_by',
                        'modifiedByUser' => 'modified_by_user',
                        'checkedOut' => 'checked_out',
                        'checkedOutBy' => 'checked_out_by',
                        'checkedOutByUser' => 'checked_out_by_user',
                        'id' => 'id',
                        'name' => 'name',
                        'description' => 'description',
                        'type' => 'focus_type',
                        'style' => 'style',
                        'website' => 'website',
                        'publishUp' => 'publish_up',
                        'publishDown' => 'publish_down',
                        'properties' => 'properties',
                        'utmTags' => 'utm_tags',
                        'form' => 'form_id',
                        'cache' => 'cache',
                        'htmlMode' => 'html_mode',
                        'editor' => 'editor',
                        'html' => 'html',
                    ],
                ],
                'table' => [
                    [
                        'name' => 'focus',
                        'indexes' => [
                            'focus_type' => [
                                'columns' => [
                                    'focus_type',
                                ],
                            ],
                            'focus_style' => [
                                'columns' => [
                                    'style',
                                ],
                            ],
                            'focus_form' => [
                                'columns' => [
                                    'form_id',
                                ],
                            ],
                        ],
                        'uniqueConstraints' => [],
                    ],
                ],
                'associationMappings' => [
                    [
                        'category' => [
                            'fieldName' => 'category',
                            'targetEntity' => 'Mautic\\CategoryBundle\\Entity\\Category',
                            'cascade' => [
                                'merge',
                                'detach',
                            ],
                            'joinColumns' => [
                                [
                                    'name' => 'category_id',
                                    'referencedColumnName' => 'id',
                                    'nullable' => true,
                                    'unique' => false,
                                    'onDelete' => 'SET NULL',
                                    'columnDefinition' => null,
                                ],
                            ],
                            'type' => 2,
                            'mappedBy' => null,
                            'inversedBy' => null,
                            'isOwningSide' => true,
                            'sourceEntity' => 'MauticPlugin\\MauticFocusBundle\\Entity\\Focus',
                            'fetch' => 2,
                            'isCascadeRemove' => false,
                            'isCascadePersist' => false,
                            'isCascadeRefresh' => false,
                            'isCascadeMerge' => true,
                            'isCascadeDetach' => true,
                            'sourceToTargetKeyColumns' => [
                                'category_id' => 'id',
                            ],
                            'joinColumnFieldNames' => [
                                'category_id' => 'category_id',
                            ],
                            'targetToSourceKeyColumns' => [
                                'id' => 'category_id',
                            ],
                            'orphanRemoval' => false,
                        ],
                    ],
                ],
                'idGenerator' => [
                    $o[1],
                ],
                'changeTrackingPolicy' => [
                    2,
                ],
            ],
        ],
        $o[0],
        []
    );
},
91 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ClassMetadata')),
            clone ($p['Doctrine\\ORM\\Id\\IdentityGenerator'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Id\\IdentityGenerator')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'MauticPlugin\\MauticFocusBundle\\Entity\\Stat',
                ],
                'namespace' => [
                    'MauticPlugin\\MauticFocusBundle\\Entity',
                ],
                'rootEntityName' => [
                    'MauticPlugin\\MauticFocusBundle\\Entity\\Stat',
                ],
                'customRepositoryClassName' => [
                    'MauticPlugin\\MauticFocusBundle\\Entity\\StatRepository',
                ],
                'identifier' => [
                    [
                        'id',
                    ],
                ],
                'generatorType' => [
                    4,
                ],
                'fieldMappings' => [
                    [
                        'id' => [
                            'fieldName' => 'id',
                            'type' => 'integer',
                            'id' => true,
                            'options' => [
                                'unsigned' => true,
                            ],
                            'columnName' => 'id',
                        ],
                        'type' => [
                            'length' => 191,
                            'fieldName' => 'type',
                            'type' => 'string',
                            'columnName' => 'type',
                        ],
                        'typeId' => [
                            'fieldName' => 'typeId',
                            'type' => 'integer',
                            'columnName' => 'type_id',
                            'nullable' => true,
                        ],
                        'dateAdded' => [
                            'fieldName' => 'dateAdded',
                            'type' => 'datetime',
                            'columnName' => 'date_added',
                        ],
                    ],
                ],
                'fieldNames' => [
                    [
                        'id' => 'id',
                        'type' => 'type',
                        'type_id' => 'typeId',
                        'date_added' => 'dateAdded',
                    ],
                ],
                'columnNames' => [
                    [
                        'id' => 'id',
                        'type' => 'type',
                        'typeId' => 'type_id',
                        'dateAdded' => 'date_added',
                    ],
                ],
                'table' => [
                    [
                        'name' => 'focus_stats',
                        'indexes' => [
                            'focus_type' => [
                                'columns' => [
                                    'type',
                                ],
                            ],
                            'focus_type_id' => [
                                'columns' => [
                                    'type',
                                    'type_id',
                                ],
                            ],
                            'focus_date_added' => [
                                'columns' => [
                                    'date_added',
                                ],
                            ],
                        ],
                        'uniqueConstraints' => [],
                    ],
                ],
                'associationMappings' => [
                    [
                        'focus' => [
                            'fieldName' => 'focus',
                            'targetEntity' => 'MauticPlugin\\MauticFocusBundle\\Entity\\Focus',
                            'joinColumns' => [
                                [
                                    'name' => 'focus_id',
                                    'referencedColumnName' => 'id',
                                    'nullable' => false,
                                    'unique' => false,
                                    'onDelete' => 'CASCADE',
                                    'columnDefinition' => null,
                                ],
                            ],
                            'type' => 2,
                            'mappedBy' => null,
                            'inversedBy' => null,
                            'isOwningSide' => true,
                            'sourceEntity' => 'MauticPlugin\\MauticFocusBundle\\Entity\\Stat',
                            'fetch' => 2,
                            'cascade' => [],
                            'isCascadeRemove' => false,
                            'isCascadePersist' => false,
                            'isCascadeRefresh' => false,
                            'isCascadeMerge' => false,
                            'isCascadeDetach' => false,
                            'sourceToTargetKeyColumns' => [
                                'focus_id' => 'id',
                            ],
                            'joinColumnFieldNames' => [
                                'focus_id' => 'focus_id',
                            ],
                            'targetToSourceKeyColumns' => [
                                'id' => 'focus_id',
                            ],
                            'orphanRemoval' => false,
                        ],
                        'lead' => [
                            'fieldName' => 'lead',
                            'targetEntity' => 'Mautic\\LeadBundle\\Entity\\Lead',
                            'joinColumns' => [
                                [
                                    'name' => 'lead_id',
                                    'referencedColumnName' => 'id',
                                    'nullable' => true,
                                    'unique' => false,
                                    'onDelete' => 'SET NULL',
                                    'columnDefinition' => null,
                                ],
                            ],
                            'type' => 2,
                            'mappedBy' => null,
                            'inversedBy' => null,
                            'isOwningSide' => true,
                            'sourceEntity' => 'MauticPlugin\\MauticFocusBundle\\Entity\\Stat',
                            'fetch' => 2,
                            'cascade' => [],
                            'isCascadeRemove' => false,
                            'isCascadePersist' => false,
                            'isCascadeRefresh' => false,
                            'isCascadeMerge' => false,
                            'isCascadeDetach' => false,
                            'sourceToTargetKeyColumns' => [
                                'lead_id' => 'id',
                            ],
                            'joinColumnFieldNames' => [
                                'lead_id' => 'lead_id',
                            ],
                            'targetToSourceKeyColumns' => [
                                'id' => 'lead_id',
                            ],
                            'orphanRemoval' => false,
                        ],
                    ],
                ],
                'idGenerator' => [
                    $o[1],
                ],
                'changeTrackingPolicy' => [
                    2,
                ],
            ],
        ],
        $o[0],
        []
    );
},
92 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ClassMetadata')),
            clone ($p['Doctrine\\ORM\\Id\\IdentityGenerator'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Id\\IdentityGenerator')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'MauticPlugin\\MauticSocialBundle\\Entity\\Tweet',
                ],
                'namespace' => [
                    'MauticPlugin\\MauticSocialBundle\\Entity',
                ],
                'rootEntityName' => [
                    'MauticPlugin\\MauticSocialBundle\\Entity\\Tweet',
                ],
                'customRepositoryClassName' => [
                    'MauticPlugin\\MauticSocialBundle\\Entity\\TweetRepository',
                ],
                'identifier' => [
                    [
                        'id',
                    ],
                ],
                'generatorType' => [
                    4,
                ],
                'fieldMappings' => [
                    [
                        'isPublished' => [
                            'fieldName' => 'isPublished',
                            'type' => 'boolean',
                            'columnName' => 'is_published',
                            'declared' => 'Mautic\\CoreBundle\\Entity\\FormEntity',
                        ],
                        'dateAdded' => [
                            'fieldName' => 'dateAdded',
                            'type' => 'datetime',
                            'columnName' => 'date_added',
                            'nullable' => true,
                            'declared' => 'Mautic\\CoreBundle\\Entity\\FormEntity',
                        ],
                        'createdBy' => [
                            'fieldName' => 'createdBy',
                            'type' => 'integer',
                            'columnName' => 'created_by',
                            'nullable' => true,
                            'declared' => 'Mautic\\CoreBundle\\Entity\\FormEntity',
                        ],
                        'createdByUser' => [
                            'fieldName' => 'createdByUser',
                            'type' => 'string',
                            'length' => 191,
                            'columnName' => 'created_by_user',
                            'nullable' => true,
                            'declared' => 'Mautic\\CoreBundle\\Entity\\FormEntity',
                        ],
                        'dateModified' => [
                            'fieldName' => 'dateModified',
                            'type' => 'datetime',
                            'columnName' => 'date_modified',
                            'nullable' => true,
                            'declared' => 'Mautic\\CoreBundle\\Entity\\FormEntity',
                        ],
                        'modifiedBy' => [
                            'fieldName' => 'modifiedBy',
                            'type' => 'integer',
                            'columnName' => 'modified_by',
                            'nullable' => true,
                            'declared' => 'Mautic\\CoreBundle\\Entity\\FormEntity',
                        ],
                        'modifiedByUser' => [
                            'fieldName' => 'modifiedByUser',
                            'type' => 'string',
                            'length' => 191,
                            'columnName' => 'modified_by_user',
                            'nullable' => true,
                            'declared' => 'Mautic\\CoreBundle\\Entity\\FormEntity',
                        ],
                        'checkedOut' => [
                            'fieldName' => 'checkedOut',
                            'type' => 'datetime',
                            'columnName' => 'checked_out',
                            'nullable' => true,
                            'declared' => 'Mautic\\CoreBundle\\Entity\\FormEntity',
                        ],
                        'checkedOutBy' => [
                            'fieldName' => 'checkedOutBy',
                            'type' => 'integer',
                            'columnName' => 'checked_out_by',
                            'nullable' => true,
                            'declared' => 'Mautic\\CoreBundle\\Entity\\FormEntity',
                        ],
                        'checkedOutByUser' => [
                            'fieldName' => 'checkedOutByUser',
                            'type' => 'string',
                            'length' => 191,
                            'columnName' => 'checked_out_by_user',
                            'nullable' => true,
                            'declared' => 'Mautic\\CoreBundle\\Entity\\FormEntity',
                        ],
                        'id' => [
                            'fieldName' => 'id',
                            'type' => 'integer',
                            'id' => true,
                            'options' => [
                                'unsigned' => true,
                            ],
                            'columnName' => 'id',
                        ],
                        'name' => [
                            'fieldName' => 'name',
                            'type' => 'string',
                            'length' => 191,
                            'columnName' => 'name',
                        ],
                        'description' => [
                            'fieldName' => 'description',
                            'type' => 'text',
                            'nullable' => true,
                            'columnName' => 'description',
                        ],
                        'mediaId' => [
                            'fieldName' => 'mediaId',
                            'type' => 'string',
                            'length' => 191,
                            'nullable' => true,
                            'columnName' => 'media_id',
                        ],
                        'mediaPath' => [
                            'fieldName' => 'mediaPath',
                            'type' => 'string',
                            'length' => 191,
                            'nullable' => true,
                            'columnName' => 'media_path',
                        ],
                        'text' => [
                            'length' => 191,
                            'fieldName' => 'text',
                            'type' => 'string',
                            'columnName' => 'text',
                        ],
                        'sentCount' => [
                            'fieldName' => 'sentCount',
                            'type' => 'integer',
                            'nullable' => true,
                            'columnName' => 'sent_count',
                        ],
                        'favoriteCount' => [
                            'fieldName' => 'favoriteCount',
                            'type' => 'integer',
                            'nullable' => true,
                            'columnName' => 'favorite_count',
                        ],
                        'retweetCount' => [
                            'fieldName' => 'retweetCount',
                            'type' => 'integer',
                            'nullable' => true,
                            'columnName' => 'retweet_count',
                        ],
                        'language' => [
                            'fieldName' => 'language',
                            'type' => 'string',
                            'length' => 191,
                            'nullable' => true,
                            'columnName' => 'lang',
                        ],
                    ],
                ],
                'fieldNames' => [
                    [
                        'is_published' => 'isPublished',
                        'date_added' => 'dateAdded',
                        'created_by' => 'createdBy',
                        'created_by_user' => 'createdByUser',
                        'date_modified' => 'dateModified',
                        'modified_by' => 'modifiedBy',
                        'modified_by_user' => 'modifiedByUser',
                        'checked_out' => 'checkedOut',
                        'checked_out_by' => 'checkedOutBy',
                        'checked_out_by_user' => 'checkedOutByUser',
                        'id' => 'id',
                        'name' => 'name',
                        'description' => 'description',
                        'media_id' => 'mediaId',
                        'media_path' => 'mediaPath',
                        'text' => 'text',
                        'sent_count' => 'sentCount',
                        'favorite_count' => 'favoriteCount',
                        'retweet_count' => 'retweetCount',
                        'lang' => 'language',
                    ],
                ],
                'columnNames' => [
                    [
                        'isPublished' => 'is_published',
                        'dateAdded' => 'date_added',
                        'createdBy' => 'created_by',
                        'createdByUser' => 'created_by_user',
                        'dateModified' => 'date_modified',
                        'modifiedBy' => 'modified_by',
                        'modifiedByUser' => 'modified_by_user',
                        'checkedOut' => 'checked_out',
                        'checkedOutBy' => 'checked_out_by',
                        'checkedOutByUser' => 'checked_out_by_user',
                        'id' => 'id',
                        'name' => 'name',
                        'description' => 'description',
                        'mediaId' => 'media_id',
                        'mediaPath' => 'media_path',
                        'text' => 'text',
                        'sentCount' => 'sent_count',
                        'favoriteCount' => 'favorite_count',
                        'retweetCount' => 'retweet_count',
                        'language' => 'lang',
                    ],
                ],
                'table' => [
                    [
                        'name' => 'tweets',
                        'indexes' => [
                            'sent_count_index' => [
                                'columns' => [
                                    'sent_count',
                                ],
                            ],
                            'favorite_count_index' => [
                                'columns' => [
                                    'favorite_count',
                                ],
                            ],
                            'retweet_count_index' => [
                                'columns' => [
                                    'retweet_count',
                                ],
                            ],
                        ],
                        'uniqueConstraints' => [],
                    ],
                ],
                'associationMappings' => [
                    [
                        'category' => [
                            'fieldName' => 'category',
                            'targetEntity' => 'Mautic\\CategoryBundle\\Entity\\Category',
                            'cascade' => [
                                'merge',
                                'detach',
                            ],
                            'joinColumns' => [
                                [
                                    'name' => 'category_id',
                                    'referencedColumnName' => 'id',
                                    'nullable' => true,
                                    'unique' => false,
                                    'onDelete' => 'SET NULL',
                                    'columnDefinition' => null,
                                ],
                            ],
                            'type' => 2,
                            'mappedBy' => null,
                            'inversedBy' => null,
                            'isOwningSide' => true,
                            'sourceEntity' => 'MauticPlugin\\MauticSocialBundle\\Entity\\Tweet',
                            'fetch' => 2,
                            'isCascadeRemove' => false,
                            'isCascadePersist' => false,
                            'isCascadeRefresh' => false,
                            'isCascadeMerge' => true,
                            'isCascadeDetach' => true,
                            'sourceToTargetKeyColumns' => [
                                'category_id' => 'id',
                            ],
                            'joinColumnFieldNames' => [
                                'category_id' => 'category_id',
                            ],
                            'targetToSourceKeyColumns' => [
                                'id' => 'category_id',
                            ],
                            'orphanRemoval' => false,
                        ],
                        'page' => [
                            'fieldName' => 'page',
                            'targetEntity' => 'Mautic\\PageBundle\\Entity\\Page',
                            'joinColumns' => [
                                [
                                    'name' => 'page_id',
                                    'referencedColumnName' => 'id',
                                    'nullable' => true,
                                    'unique' => false,
                                    'onDelete' => 'SET NULL',
                                    'columnDefinition' => null,
                                ],
                            ],
                            'type' => 2,
                            'mappedBy' => null,
                            'inversedBy' => null,
                            'isOwningSide' => true,
                            'sourceEntity' => 'MauticPlugin\\MauticSocialBundle\\Entity\\Tweet',
                            'fetch' => 2,
                            'cascade' => [],
                            'isCascadeRemove' => false,
                            'isCascadePersist' => false,
                            'isCascadeRefresh' => false,
                            'isCascadeMerge' => false,
                            'isCascadeDetach' => false,
                            'sourceToTargetKeyColumns' => [
                                'page_id' => 'id',
                            ],
                            'joinColumnFieldNames' => [
                                'page_id' => 'page_id',
                            ],
                            'targetToSourceKeyColumns' => [
                                'id' => 'page_id',
                            ],
                            'orphanRemoval' => false,
                        ],
                        'asset' => [
                            'fieldName' => 'asset',
                            'targetEntity' => 'Mautic\\AssetBundle\\Entity\\Asset',
                            'joinColumns' => [
                                [
                                    'name' => 'asset_id',
                                    'referencedColumnName' => 'id',
                                    'nullable' => true,
                                    'unique' => false,
                                    'onDelete' => 'SET NULL',
                                    'columnDefinition' => null,
                                ],
                            ],
                            'type' => 2,
                            'mappedBy' => null,
                            'inversedBy' => null,
                            'isOwningSide' => true,
                            'sourceEntity' => 'MauticPlugin\\MauticSocialBundle\\Entity\\Tweet',
                            'fetch' => 2,
                            'cascade' => [],
                            'isCascadeRemove' => false,
                            'isCascadePersist' => false,
                            'isCascadeRefresh' => false,
                            'isCascadeMerge' => false,
                            'isCascadeDetach' => false,
                            'sourceToTargetKeyColumns' => [
                                'asset_id' => 'id',
                            ],
                            'joinColumnFieldNames' => [
                                'asset_id' => 'asset_id',
                            ],
                            'targetToSourceKeyColumns' => [
                                'id' => 'asset_id',
                            ],
                            'orphanRemoval' => false,
                        ],
                        'stats' => [
                            'fieldName' => 'stats',
                            'targetEntity' => 'MauticPlugin\\MauticSocialBundle\\Entity\\TweetStat',
                            'indexBy' => 'id',
                            'mappedBy' => 'tweet',
                            'cascade' => [
                                'persist',
                            ],
                            'fetch' => 4,
                            'type' => 4,
                            'inversedBy' => null,
                            'isOwningSide' => false,
                            'sourceEntity' => 'MauticPlugin\\MauticSocialBundle\\Entity\\Tweet',
                            'isCascadeRemove' => false,
                            'isCascadePersist' => true,
                            'isCascadeRefresh' => false,
                            'isCascadeMerge' => false,
                            'isCascadeDetach' => false,
                            'orphanRemoval' => false,
                        ],
                    ],
                ],
                'idGenerator' => [
                    $o[1],
                ],
                'changeTrackingPolicy' => [
                    2,
                ],
            ],
        ],
        $o[0],
        []
    );
},
93 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ClassMetadata')),
            clone ($p['Doctrine\\ORM\\Id\\IdentityGenerator'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Id\\IdentityGenerator')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'MauticPlugin\\MauticSocialBundle\\Entity\\Monitoring',
                ],
                'namespace' => [
                    'MauticPlugin\\MauticSocialBundle\\Entity',
                ],
                'rootEntityName' => [
                    'MauticPlugin\\MauticSocialBundle\\Entity\\Monitoring',
                ],
                'customRepositoryClassName' => [
                    'MauticPlugin\\MauticSocialBundle\\Entity\\MonitoringRepository',
                ],
                'identifier' => [
                    [
                        'id',
                    ],
                ],
                'generatorType' => [
                    4,
                ],
                'fieldMappings' => [
                    [
                        'isPublished' => [
                            'fieldName' => 'isPublished',
                            'type' => 'boolean',
                            'columnName' => 'is_published',
                            'declared' => 'Mautic\\CoreBundle\\Entity\\FormEntity',
                        ],
                        'dateAdded' => [
                            'fieldName' => 'dateAdded',
                            'type' => 'datetime',
                            'columnName' => 'date_added',
                            'nullable' => true,
                            'declared' => 'Mautic\\CoreBundle\\Entity\\FormEntity',
                        ],
                        'createdBy' => [
                            'fieldName' => 'createdBy',
                            'type' => 'integer',
                            'columnName' => 'created_by',
                            'nullable' => true,
                            'declared' => 'Mautic\\CoreBundle\\Entity\\FormEntity',
                        ],
                        'createdByUser' => [
                            'fieldName' => 'createdByUser',
                            'type' => 'string',
                            'length' => 191,
                            'columnName' => 'created_by_user',
                            'nullable' => true,
                            'declared' => 'Mautic\\CoreBundle\\Entity\\FormEntity',
                        ],
                        'dateModified' => [
                            'fieldName' => 'dateModified',
                            'type' => 'datetime',
                            'columnName' => 'date_modified',
                            'nullable' => true,
                            'declared' => 'Mautic\\CoreBundle\\Entity\\FormEntity',
                        ],
                        'modifiedBy' => [
                            'fieldName' => 'modifiedBy',
                            'type' => 'integer',
                            'columnName' => 'modified_by',
                            'nullable' => true,
                            'declared' => 'Mautic\\CoreBundle\\Entity\\FormEntity',
                        ],
                        'modifiedByUser' => [
                            'fieldName' => 'modifiedByUser',
                            'type' => 'string',
                            'length' => 191,
                            'columnName' => 'modified_by_user',
                            'nullable' => true,
                            'declared' => 'Mautic\\CoreBundle\\Entity\\FormEntity',
                        ],
                        'checkedOut' => [
                            'fieldName' => 'checkedOut',
                            'type' => 'datetime',
                            'columnName' => 'checked_out',
                            'nullable' => true,
                            'declared' => 'Mautic\\CoreBundle\\Entity\\FormEntity',
                        ],
                        'checkedOutBy' => [
                            'fieldName' => 'checkedOutBy',
                            'type' => 'integer',
                            'columnName' => 'checked_out_by',
                            'nullable' => true,
                            'declared' => 'Mautic\\CoreBundle\\Entity\\FormEntity',
                        ],
                        'checkedOutByUser' => [
                            'fieldName' => 'checkedOutByUser',
                            'type' => 'string',
                            'length' => 191,
                            'columnName' => 'checked_out_by_user',
                            'nullable' => true,
                            'declared' => 'Mautic\\CoreBundle\\Entity\\FormEntity',
                        ],
                        'id' => [
                            'fieldName' => 'id',
                            'type' => 'integer',
                            'id' => true,
                            'options' => [
                                'unsigned' => true,
                            ],
                            'columnName' => 'id',
                        ],
                        'title' => [
                            'fieldName' => 'title',
                            'type' => 'string',
                            'length' => 191,
                            'columnName' => 'title',
                        ],
                        'description' => [
                            'fieldName' => 'description',
                            'type' => 'text',
                            'nullable' => true,
                            'columnName' => 'description',
                        ],
                        'lists' => [
                            'fieldName' => 'lists',
                            'type' => 'array',
                            'nullable' => true,
                            'columnName' => 'lists',
                        ],
                        'networkType' => [
                            'fieldName' => 'networkType',
                            'type' => 'string',
                            'length' => 191,
                            'columnName' => 'network_type',
                            'nullable' => true,
                        ],
                        'revision' => [
                            'fieldName' => 'revision',
                            'type' => 'integer',
                            'columnName' => 'revision',
                        ],
                        'stats' => [
                            'fieldName' => 'stats',
                            'type' => 'array',
                            'nullable' => true,
                            'columnName' => 'stats',
                        ],
                        'properties' => [
                            'fieldName' => 'properties',
                            'type' => 'array',
                            'nullable' => true,
                            'columnName' => 'properties',
                        ],
                        'publishUp' => [
                            'fieldName' => 'publishUp',
                            'type' => 'datetime',
                            'columnName' => 'publish_up',
                            'nullable' => true,
                        ],
                        'publishDown' => [
                            'fieldName' => 'publishDown',
                            'type' => 'datetime',
                            'columnName' => 'publish_down',
                            'nullable' => true,
                        ],
                    ],
                ],
                'fieldNames' => [
                    [
                        'is_published' => 'isPublished',
                        'date_added' => 'dateAdded',
                        'created_by' => 'createdBy',
                        'created_by_user' => 'createdByUser',
                        'date_modified' => 'dateModified',
                        'modified_by' => 'modifiedBy',
                        'modified_by_user' => 'modifiedByUser',
                        'checked_out' => 'checkedOut',
                        'checked_out_by' => 'checkedOutBy',
                        'checked_out_by_user' => 'checkedOutByUser',
                        'id' => 'id',
                        'title' => 'title',
                        'description' => 'description',
                        'lists' => 'lists',
                        'network_type' => 'networkType',
                        'revision' => 'revision',
                        'stats' => 'stats',
                        'properties' => 'properties',
                        'publish_up' => 'publishUp',
                        'publish_down' => 'publishDown',
                    ],
                ],
                'columnNames' => [
                    [
                        'isPublished' => 'is_published',
                        'dateAdded' => 'date_added',
                        'createdBy' => 'created_by',
                        'createdByUser' => 'created_by_user',
                        'dateModified' => 'date_modified',
                        'modifiedBy' => 'modified_by',
                        'modifiedByUser' => 'modified_by_user',
                        'checkedOut' => 'checked_out',
                        'checkedOutBy' => 'checked_out_by',
                        'checkedOutByUser' => 'checked_out_by_user',
                        'id' => 'id',
                        'title' => 'title',
                        'description' => 'description',
                        'lists' => 'lists',
                        'networkType' => 'network_type',
                        'revision' => 'revision',
                        'stats' => 'stats',
                        'properties' => 'properties',
                        'publishUp' => 'publish_up',
                        'publishDown' => 'publish_down',
                    ],
                ],
                'table' => [
                    [
                        'name' => 'monitoring',
                        'indexes' => [],
                        'uniqueConstraints' => [],
                    ],
                ],
                'lifecycleCallbacks' => [
                    [
                        'preUpdate' => [
                            'cleanMonitorData',
                        ],
                        'prePersist' => [
                            'cleanMonitorData',
                        ],
                    ],
                ],
                'associationMappings' => [
                    [
                        'category' => [
                            'fieldName' => 'category',
                            'targetEntity' => 'Mautic\\CategoryBundle\\Entity\\Category',
                            'cascade' => [
                                'merge',
                                'detach',
                            ],
                            'joinColumns' => [
                                [
                                    'name' => 'category_id',
                                    'referencedColumnName' => 'id',
                                    'nullable' => true,
                                    'unique' => false,
                                    'onDelete' => 'SET NULL',
                                    'columnDefinition' => null,
                                ],
                            ],
                            'type' => 2,
                            'mappedBy' => null,
                            'inversedBy' => null,
                            'isOwningSide' => true,
                            'sourceEntity' => 'MauticPlugin\\MauticSocialBundle\\Entity\\Monitoring',
                            'fetch' => 2,
                            'isCascadeRemove' => false,
                            'isCascadePersist' => false,
                            'isCascadeRefresh' => false,
                            'isCascadeMerge' => true,
                            'isCascadeDetach' => true,
                            'sourceToTargetKeyColumns' => [
                                'category_id' => 'id',
                            ],
                            'joinColumnFieldNames' => [
                                'category_id' => 'category_id',
                            ],
                            'targetToSourceKeyColumns' => [
                                'id' => 'category_id',
                            ],
                            'orphanRemoval' => false,
                        ],
                    ],
                ],
                'idGenerator' => [
                    $o[1],
                ],
                'changeTrackingPolicy' => [
                    2,
                ],
            ],
        ],
        $o[0],
        []
    );
},
94 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ClassMetadata')),
            clone ($p['Doctrine\\ORM\\Id\\IdentityGenerator'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Id\\IdentityGenerator')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'MauticPlugin\\MauticSocialBundle\\Entity\\TweetStat',
                ],
                'namespace' => [
                    'MauticPlugin\\MauticSocialBundle\\Entity',
                ],
                'rootEntityName' => [
                    'MauticPlugin\\MauticSocialBundle\\Entity\\TweetStat',
                ],
                'customRepositoryClassName' => [
                    'MauticPlugin\\MauticSocialBundle\\Entity\\TweetStatRepository',
                ],
                'identifier' => [
                    [
                        'id',
                    ],
                ],
                'generatorType' => [
                    4,
                ],
                'fieldMappings' => [
                    [
                        'id' => [
                            'fieldName' => 'id',
                            'type' => 'integer',
                            'id' => true,
                            'options' => [
                                'unsigned' => true,
                            ],
                            'columnName' => 'id',
                        ],
                        'twitterTweetId' => [
                            'fieldName' => 'twitterTweetId',
                            'type' => 'string',
                            'length' => 191,
                            'columnName' => 'twitter_tweet_id',
                            'nullable' => true,
                        ],
                        'handle' => [
                            'fieldName' => 'handle',
                            'type' => 'string',
                            'length' => 191,
                            'columnName' => 'handle',
                        ],
                        'dateSent' => [
                            'fieldName' => 'dateSent',
                            'type' => 'datetime',
                            'columnName' => 'date_sent',
                            'nullable' => true,
                        ],
                        'isFailed' => [
                            'fieldName' => 'isFailed',
                            'type' => 'boolean',
                            'columnName' => 'is_failed',
                            'nullable' => true,
                        ],
                        'retryCount' => [
                            'fieldName' => 'retryCount',
                            'type' => 'integer',
                            'columnName' => 'retry_count',
                            'nullable' => true,
                        ],
                        'source' => [
                            'fieldName' => 'source',
                            'type' => 'string',
                            'length' => 191,
                            'nullable' => true,
                            'columnName' => 'source',
                        ],
                        'sourceId' => [
                            'fieldName' => 'sourceId',
                            'type' => 'integer',
                            'columnName' => 'source_id',
                            'nullable' => true,
                        ],
                        'favoriteCount' => [
                            'fieldName' => 'favoriteCount',
                            'type' => 'integer',
                            'nullable' => true,
                            'columnName' => 'favorite_count',
                        ],
                        'retweetCount' => [
                            'fieldName' => 'retweetCount',
                            'type' => 'integer',
                            'nullable' => true,
                            'columnName' => 'retweet_count',
                        ],
                        'responseDetails' => [
                            'fieldName' => 'responseDetails',
                            'type' => 'json_array',
                            'nullable' => true,
                            'columnName' => 'response_details',
                        ],
                    ],
                ],
                'fieldNames' => [
                    [
                        'id' => 'id',
                        'twitter_tweet_id' => 'twitterTweetId',
                        'handle' => 'handle',
                        'date_sent' => 'dateSent',
                        'is_failed' => 'isFailed',
                        'retry_count' => 'retryCount',
                        'source' => 'source',
                        'source_id' => 'sourceId',
                        'favorite_count' => 'favoriteCount',
                        'retweet_count' => 'retweetCount',
                        'response_details' => 'responseDetails',
                    ],
                ],
                'columnNames' => [
                    [
                        'id' => 'id',
                        'twitterTweetId' => 'twitter_tweet_id',
                        'handle' => 'handle',
                        'dateSent' => 'date_sent',
                        'isFailed' => 'is_failed',
                        'retryCount' => 'retry_count',
                        'source' => 'source',
                        'sourceId' => 'source_id',
                        'favoriteCount' => 'favorite_count',
                        'retweetCount' => 'retweet_count',
                        'responseDetails' => 'response_details',
                    ],
                ],
                'table' => [
                    [
                        'name' => 'tweet_stats',
                        'indexes' => [
                            'stat_tweet_search' => [
                                'columns' => [
                                    'tweet_id',
                                    'lead_id',
                                ],
                            ],
                            'stat_tweet_search2' => [
                                'columns' => [
                                    'lead_id',
                                    'tweet_id',
                                ],
                            ],
                            'stat_tweet_failed_search' => [
                                'columns' => [
                                    'is_failed',
                                ],
                            ],
                            'stat_tweet_source_search' => [
                                'columns' => [
                                    'source',
                                    'source_id',
                                ],
                            ],
                            'favorite_count_index' => [
                                'columns' => [
                                    'favorite_count',
                                ],
                            ],
                            'retweet_count_index' => [
                                'columns' => [
                                    'retweet_count',
                                ],
                            ],
                            'tweet_date_sent' => [
                                'columns' => [
                                    'date_sent',
                                ],
                            ],
                            'twitter_tweet_id_index' => [
                                'columns' => [
                                    'twitter_tweet_id',
                                ],
                            ],
                        ],
                        'uniqueConstraints' => [],
                    ],
                ],
                'associationMappings' => [
                    [
                        'tweet' => [
                            'fieldName' => 'tweet',
                            'targetEntity' => 'MauticPlugin\\MauticSocialBundle\\Entity\\Tweet',
                            'inversedBy' => 'stats',
                            'joinColumns' => [
                                [
                                    'name' => 'tweet_id',
                                    'referencedColumnName' => 'id',
                                    'nullable' => true,
                                    'unique' => false,
                                    'onDelete' => 'SET NULL',
                                    'columnDefinition' => null,
                                ],
                            ],
                            'type' => 2,
                            'mappedBy' => null,
                            'isOwningSide' => true,
                            'sourceEntity' => 'MauticPlugin\\MauticSocialBundle\\Entity\\TweetStat',
                            'fetch' => 2,
                            'cascade' => [],
                            'isCascadeRemove' => false,
                            'isCascadePersist' => false,
                            'isCascadeRefresh' => false,
                            'isCascadeMerge' => false,
                            'isCascadeDetach' => false,
                            'sourceToTargetKeyColumns' => [
                                'tweet_id' => 'id',
                            ],
                            'joinColumnFieldNames' => [
                                'tweet_id' => 'tweet_id',
                            ],
                            'targetToSourceKeyColumns' => [
                                'id' => 'tweet_id',
                            ],
                            'orphanRemoval' => false,
                        ],
                        'lead' => [
                            'fieldName' => 'lead',
                            'targetEntity' => 'Mautic\\LeadBundle\\Entity\\Lead',
                            'joinColumns' => [
                                [
                                    'name' => 'lead_id',
                                    'referencedColumnName' => 'id',
                                    'nullable' => true,
                                    'unique' => false,
                                    'onDelete' => 'SET NULL',
                                    'columnDefinition' => null,
                                ],
                            ],
                            'type' => 2,
                            'mappedBy' => null,
                            'inversedBy' => null,
                            'isOwningSide' => true,
                            'sourceEntity' => 'MauticPlugin\\MauticSocialBundle\\Entity\\TweetStat',
                            'fetch' => 2,
                            'cascade' => [],
                            'isCascadeRemove' => false,
                            'isCascadePersist' => false,
                            'isCascadeRefresh' => false,
                            'isCascadeMerge' => false,
                            'isCascadeDetach' => false,
                            'sourceToTargetKeyColumns' => [
                                'lead_id' => 'id',
                            ],
                            'joinColumnFieldNames' => [
                                'lead_id' => 'lead_id',
                            ],
                            'targetToSourceKeyColumns' => [
                                'id' => 'lead_id',
                            ],
                            'orphanRemoval' => false,
                        ],
                    ],
                ],
                'idGenerator' => [
                    $o[1],
                ],
                'changeTrackingPolicy' => [
                    2,
                ],
            ],
        ],
        $o[0],
        []
    );
},
95 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ClassMetadata')),
            clone ($p['Doctrine\\ORM\\Id\\IdentityGenerator'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Id\\IdentityGenerator')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'MauticPlugin\\MauticSocialBundle\\Entity\\PostCount',
                ],
                'namespace' => [
                    'MauticPlugin\\MauticSocialBundle\\Entity',
                ],
                'rootEntityName' => [
                    'MauticPlugin\\MauticSocialBundle\\Entity\\PostCount',
                ],
                'customRepositoryClassName' => [
                    'MauticPlugin\\MauticSocialBundle\\Entity\\PostCountRepository',
                ],
                'identifier' => [
                    [
                        'id',
                    ],
                ],
                'generatorType' => [
                    4,
                ],
                'fieldMappings' => [
                    [
                        'id' => [
                            'fieldName' => 'id',
                            'type' => 'integer',
                            'id' => true,
                            'options' => [
                                'unsigned' => true,
                            ],
                            'columnName' => 'id',
                        ],
                        'postDate' => [
                            'fieldName' => 'postDate',
                            'type' => 'date',
                            'columnName' => 'post_date',
                        ],
                        'postCount' => [
                            'fieldName' => 'postCount',
                            'type' => 'integer',
                            'columnName' => 'post_count',
                        ],
                    ],
                ],
                'fieldNames' => [
                    [
                        'id' => 'id',
                        'post_date' => 'postDate',
                        'post_count' => 'postCount',
                    ],
                ],
                'columnNames' => [
                    [
                        'id' => 'id',
                        'postDate' => 'post_date',
                        'postCount' => 'post_count',
                    ],
                ],
                'table' => [
                    [
                        'name' => 'monitor_post_count',
                        'indexes' => [],
                        'uniqueConstraints' => [],
                    ],
                ],
                'associationMappings' => [
                    [
                        'monitor' => [
                            'fieldName' => 'monitor',
                            'targetEntity' => 'MauticPlugin\\MauticSocialBundle\\Entity\\Monitoring',
                            'joinColumns' => [
                                [
                                    'name' => 'monitor_id',
                                    'referencedColumnName' => 'id',
                                    'nullable' => true,
                                    'unique' => false,
                                    'onDelete' => 'CASCADE',
                                    'columnDefinition' => null,
                                ],
                            ],
                            'type' => 2,
                            'mappedBy' => null,
                            'inversedBy' => null,
                            'isOwningSide' => true,
                            'sourceEntity' => 'MauticPlugin\\MauticSocialBundle\\Entity\\PostCount',
                            'fetch' => 2,
                            'cascade' => [],
                            'isCascadeRemove' => false,
                            'isCascadePersist' => false,
                            'isCascadeRefresh' => false,
                            'isCascadeMerge' => false,
                            'isCascadeDetach' => false,
                            'sourceToTargetKeyColumns' => [
                                'monitor_id' => 'id',
                            ],
                            'joinColumnFieldNames' => [
                                'monitor_id' => 'monitor_id',
                            ],
                            'targetToSourceKeyColumns' => [
                                'id' => 'monitor_id',
                            ],
                            'orphanRemoval' => false,
                        ],
                    ],
                ],
                'idGenerator' => [
                    $o[1],
                ],
                'changeTrackingPolicy' => [
                    2,
                ],
            ],
        ],
        $o[0],
        []
    );
},
96 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ClassMetadata')),
            clone ($p['Doctrine\\ORM\\Id\\AssignedGenerator'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Id\\AssignedGenerator')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'MauticPlugin\\MauticSocialBundle\\Entity\\Lead',
                ],
                'namespace' => [
                    'MauticPlugin\\MauticSocialBundle\\Entity',
                ],
                'rootEntityName' => [
                    'MauticPlugin\\MauticSocialBundle\\Entity\\Lead',
                ],
                'customRepositoryClassName' => [
                    'MauticPlugin\\MauticSocialBundle\\Entity\\LeadRepository',
                ],
                'identifier' => [
                    [
                        'monitor',
                        'lead',
                    ],
                ],
                'fieldMappings' => [
                    [
                        'dateAdded' => [
                            'fieldName' => 'dateAdded',
                            'type' => 'datetime',
                            'columnName' => 'date_added',
                        ],
                    ],
                ],
                'fieldNames' => [
                    [
                        'date_added' => 'dateAdded',
                    ],
                ],
                'columnNames' => [
                    [
                        'dateAdded' => 'date_added',
                    ],
                ],
                'table' => [
                    [
                        'name' => 'monitoring_leads',
                        'indexes' => [],
                        'uniqueConstraints' => [],
                    ],
                ],
                'associationMappings' => [
                    [
                        'monitor' => [
                            'fieldName' => 'monitor',
                            'targetEntity' => 'MauticPlugin\\MauticSocialBundle\\Entity\\Monitoring',
                            'id' => true,
                            'joinColumns' => [
                                [
                                    'name' => 'monitor_id',
                                    'referencedColumnName' => 'id',
                                    'nullable' => false,
                                    'unique' => false,
                                    'onDelete' => 'CASCADE',
                                    'columnDefinition' => null,
                                ],
                            ],
                            'type' => 2,
                            'mappedBy' => null,
                            'inversedBy' => null,
                            'isOwningSide' => true,
                            'sourceEntity' => 'MauticPlugin\\MauticSocialBundle\\Entity\\Lead',
                            'fetch' => 2,
                            'cascade' => [],
                            'isCascadeRemove' => false,
                            'isCascadePersist' => false,
                            'isCascadeRefresh' => false,
                            'isCascadeMerge' => false,
                            'isCascadeDetach' => false,
                            'sourceToTargetKeyColumns' => [
                                'monitor_id' => 'id',
                            ],
                            'joinColumnFieldNames' => [
                                'monitor_id' => 'monitor_id',
                            ],
                            'targetToSourceKeyColumns' => [
                                'id' => 'monitor_id',
                            ],
                            'orphanRemoval' => false,
                        ],
                        'lead' => [
                            'fieldName' => 'lead',
                            'targetEntity' => 'Mautic\\LeadBundle\\Entity\\Lead',
                            'id' => true,
                            'joinColumns' => [
                                [
                                    'name' => 'lead_id',
                                    'referencedColumnName' => 'id',
                                    'nullable' => false,
                                    'unique' => false,
                                    'onDelete' => 'CASCADE',
                                    'columnDefinition' => null,
                                ],
                            ],
                            'type' => 2,
                            'mappedBy' => null,
                            'inversedBy' => null,
                            'isOwningSide' => true,
                            'sourceEntity' => 'MauticPlugin\\MauticSocialBundle\\Entity\\Lead',
                            'fetch' => 2,
                            'cascade' => [],
                            'isCascadeRemove' => false,
                            'isCascadePersist' => false,
                            'isCascadeRefresh' => false,
                            'isCascadeMerge' => false,
                            'isCascadeDetach' => false,
                            'sourceToTargetKeyColumns' => [
                                'lead_id' => 'id',
                            ],
                            'joinColumnFieldNames' => [
                                'lead_id' => 'lead_id',
                            ],
                            'targetToSourceKeyColumns' => [
                                'id' => 'lead_id',
                            ],
                            'orphanRemoval' => false,
                        ],
                    ],
                ],
                'isIdentifierComposite' => [
                    true,
                ],
                'containsForeignIdentifier' => [
                    true,
                ],
                'idGenerator' => [
                    $o[1],
                ],
                'changeTrackingPolicy' => [
                    2,
                ],
            ],
        ],
        $o[0],
        []
    );
},
97 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ClassMetadata')),
            clone ($p['Doctrine\\ORM\\Id\\IdentityGenerator'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Id\\IdentityGenerator')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'MauticPlugin\\MauticCitrixBundle\\Entity\\CitrixEvent',
                ],
                'namespace' => [
                    'MauticPlugin\\MauticCitrixBundle\\Entity',
                ],
                'rootEntityName' => [
                    'MauticPlugin\\MauticCitrixBundle\\Entity\\CitrixEvent',
                ],
                'customRepositoryClassName' => [
                    'MauticPlugin\\MauticCitrixBundle\\Entity\\CitrixEventRepository',
                ],
                'identifier' => [
                    [
                        'id',
                    ],
                ],
                'generatorType' => [
                    4,
                ],
                'fieldMappings' => [
                    [
                        'id' => [
                            'fieldName' => 'id',
                            'type' => 'integer',
                            'id' => true,
                            'options' => [
                                'unsigned' => true,
                            ],
                            'columnName' => 'id',
                        ],
                        'product' => [
                            'fieldName' => 'product',
                            'type' => 'string',
                            'length' => 191,
                            'columnName' => 'product',
                        ],
                        'email' => [
                            'fieldName' => 'email',
                            'type' => 'string',
                            'length' => 191,
                            'columnName' => 'email',
                        ],
                        'eventName' => [
                            'fieldName' => 'eventName',
                            'type' => 'string',
                            'length' => 191,
                            'columnName' => 'event_name',
                        ],
                        'eventDesc' => [
                            'fieldName' => 'eventDesc',
                            'type' => 'string',
                            'length' => 191,
                            'columnName' => 'event_desc',
                            'nullable' => true,
                        ],
                        'eventType' => [
                            'fieldName' => 'eventType',
                            'type' => 'string',
                            'length' => 50,
                            'columnName' => 'event_type',
                        ],
                        'eventDate' => [
                            'fieldName' => 'eventDate',
                            'type' => 'datetime',
                            'columnName' => 'event_date',
                        ],
                    ],
                ],
                'fieldNames' => [
                    [
                        'id' => 'id',
                        'product' => 'product',
                        'email' => 'email',
                        'event_name' => 'eventName',
                        'event_desc' => 'eventDesc',
                        'event_type' => 'eventType',
                        'event_date' => 'eventDate',
                    ],
                ],
                'columnNames' => [
                    [
                        'id' => 'id',
                        'product' => 'product',
                        'email' => 'email',
                        'eventName' => 'event_name',
                        'eventDesc' => 'event_desc',
                        'eventType' => 'event_type',
                        'eventDate' => 'event_date',
                    ],
                ],
                'table' => [
                    [
                        'name' => 'plugin_citrix_events',
                        'indexes' => [
                            'citrix_event_email' => [
                                'columns' => [
                                    'product',
                                    'email',
                                ],
                            ],
                            'citrix_event_name' => [
                                'columns' => [
                                    'product',
                                    'event_name',
                                    'event_type',
                                ],
                            ],
                            'citrix_event_type' => [
                                'columns' => [
                                    'product',
                                    'event_type',
                                    'event_date',
                                ],
                            ],
                            'citrix_event_product' => [
                                'columns' => [
                                    'product',
                                    'email',
                                    'event_type',
                                ],
                            ],
                            'citrix_event_product_name' => [
                                'columns' => [
                                    'product',
                                    'email',
                                    'event_type',
                                    'event_name',
                                ],
                            ],
                            'citrix_event_product_name_lead' => [
                                'columns' => [
                                    'product',
                                    'event_type',
                                    'event_name',
                                    'lead_id',
                                ],
                            ],
                            'citrix_event_product_type_lead' => [
                                'columns' => [
                                    'product',
                                    'event_type',
                                    'lead_id',
                                ],
                            ],
                            'citrix_event_date' => [
                                'columns' => [
                                    'event_date',
                                ],
                            ],
                        ],
                        'uniqueConstraints' => [],
                    ],
                ],
                'associationMappings' => [
                    [
                        'lead' => [
                            'fieldName' => 'lead',
                            'targetEntity' => 'Mautic\\LeadBundle\\Entity\\Lead',
                            'joinColumns' => [
                                [
                                    'name' => 'lead_id',
                                    'referencedColumnName' => 'id',
                                    'nullable' => false,
                                    'unique' => false,
                                    'onDelete' => 'CASCADE',
                                    'columnDefinition' => null,
                                ],
                            ],
                            'type' => 2,
                            'mappedBy' => null,
                            'inversedBy' => null,
                            'isOwningSide' => true,
                            'sourceEntity' => 'MauticPlugin\\MauticCitrixBundle\\Entity\\CitrixEvent',
                            'fetch' => 2,
                            'cascade' => [],
                            'isCascadeRemove' => false,
                            'isCascadePersist' => false,
                            'isCascadeRefresh' => false,
                            'isCascadeMerge' => false,
                            'isCascadeDetach' => false,
                            'sourceToTargetKeyColumns' => [
                                'lead_id' => 'id',
                            ],
                            'joinColumnFieldNames' => [
                                'lead_id' => 'lead_id',
                            ],
                            'targetToSourceKeyColumns' => [
                                'id' => 'lead_id',
                            ],
                            'orphanRemoval' => false,
                        ],
                    ],
                ],
                'idGenerator' => [
                    $o[1],
                ],
                'changeTrackingPolicy' => [
                    2,
                ],
            ],
        ],
        $o[0],
        []
    );
},
98 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ClassMetadata')),
            clone ($p['Doctrine\\ORM\\Id\\AssignedGenerator'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Id\\AssignedGenerator')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'FOS\\OAuthServerBundle\\Entity\\AccessToken',
                ],
                'namespace' => [
                    'FOS\\OAuthServerBundle\\Entity',
                ],
                'rootEntityName' => [
                    'FOS\\OAuthServerBundle\\Entity\\AccessToken',
                ],
                'isMappedSuperclass' => [
                    true,
                ],
                'fieldMappings' => [
                    [
                        'token' => [
                            'fieldName' => 'token',
                            'type' => 'string',
                            'columnName' => 'token',
                            'unique' => true,
                        ],
                        'expiresAt' => [
                            'fieldName' => 'expiresAt',
                            'type' => 'integer',
                            'columnName' => 'expires_at',
                            'nullable' => true,
                        ],
                        'scope' => [
                            'fieldName' => 'scope',
                            'type' => 'string',
                            'columnName' => 'scope',
                            'nullable' => true,
                        ],
                    ],
                ],
                'fieldNames' => [
                    [
                        'token' => 'token',
                        'expires_at' => 'expiresAt',
                        'scope' => 'scope',
                    ],
                ],
                'columnNames' => [
                    [
                        'token' => 'token',
                        'expiresAt' => 'expires_at',
                        'scope' => 'scope',
                    ],
                ],
                'table' => [
                    [
                        'name' => 'AccessToken',
                    ],
                ],
                'idGenerator' => [
                    $o[1],
                ],
            ],
        ],
        $o[0],
        []
    );
},
99 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ClassMetadata')),
            clone ($p['Doctrine\\ORM\\Id\\AssignedGenerator'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Id\\AssignedGenerator')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'FOS\\OAuthServerBundle\\Entity\\Client',
                ],
                'namespace' => [
                    'FOS\\OAuthServerBundle\\Entity',
                ],
                'rootEntityName' => [
                    'FOS\\OAuthServerBundle\\Entity\\Client',
                ],
                'isMappedSuperclass' => [
                    true,
                ],
                'fieldMappings' => [
                    [
                        'randomId' => [
                            'fieldName' => 'randomId',
                            'type' => 'string',
                            'columnName' => 'random_id',
                        ],
                        'redirectUris' => [
                            'fieldName' => 'redirectUris',
                            'type' => 'array',
                            'columnName' => 'redirect_uris',
                        ],
                        'secret' => [
                            'fieldName' => 'secret',
                            'type' => 'string',
                            'columnName' => 'secret',
                        ],
                        'allowedGrantTypes' => [
                            'fieldName' => 'allowedGrantTypes',
                            'type' => 'array',
                            'columnName' => 'allowed_grant_types',
                        ],
                    ],
                ],
                'fieldNames' => [
                    [
                        'random_id' => 'randomId',
                        'redirect_uris' => 'redirectUris',
                        'secret' => 'secret',
                        'allowed_grant_types' => 'allowedGrantTypes',
                    ],
                ],
                'columnNames' => [
                    [
                        'randomId' => 'random_id',
                        'redirectUris' => 'redirect_uris',
                        'secret' => 'secret',
                        'allowedGrantTypes' => 'allowed_grant_types',
                    ],
                ],
                'table' => [
                    [
                        'name' => 'Client',
                    ],
                ],
                'idGenerator' => [
                    $o[1],
                ],
            ],
        ],
        $o[0],
        []
    );
},
100 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ClassMetadata')),
            clone ($p['Doctrine\\ORM\\Id\\AssignedGenerator'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Id\\AssignedGenerator')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'FOS\\OAuthServerBundle\\Entity\\AuthCode',
                ],
                'namespace' => [
                    'FOS\\OAuthServerBundle\\Entity',
                ],
                'rootEntityName' => [
                    'FOS\\OAuthServerBundle\\Entity\\AuthCode',
                ],
                'isMappedSuperclass' => [
                    true,
                ],
                'fieldMappings' => [
                    [
                        'token' => [
                            'fieldName' => 'token',
                            'type' => 'string',
                            'columnName' => 'token',
                            'unique' => true,
                        ],
                        'redirectUri' => [
                            'fieldName' => 'redirectUri',
                            'type' => 'text',
                            'columnName' => 'redirect_uri',
                        ],
                        'expiresAt' => [
                            'fieldName' => 'expiresAt',
                            'type' => 'integer',
                            'columnName' => 'expires_at',
                            'nullable' => true,
                        ],
                        'scope' => [
                            'fieldName' => 'scope',
                            'type' => 'string',
                            'columnName' => 'scope',
                            'nullable' => true,
                        ],
                    ],
                ],
                'fieldNames' => [
                    [
                        'token' => 'token',
                        'redirect_uri' => 'redirectUri',
                        'expires_at' => 'expiresAt',
                        'scope' => 'scope',
                    ],
                ],
                'columnNames' => [
                    [
                        'token' => 'token',
                        'redirectUri' => 'redirect_uri',
                        'expiresAt' => 'expires_at',
                        'scope' => 'scope',
                    ],
                ],
                'table' => [
                    [
                        'name' => 'AuthCode',
                    ],
                ],
                'idGenerator' => [
                    $o[1],
                ],
            ],
        ],
        $o[0],
        []
    );
},
101 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ClassMetadata')),
            clone ($p['Doctrine\\ORM\\Id\\AssignedGenerator'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Id\\AssignedGenerator')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'FOS\\OAuthServerBundle\\Entity\\RefreshToken',
                ],
                'namespace' => [
                    'FOS\\OAuthServerBundle\\Entity',
                ],
                'rootEntityName' => [
                    'FOS\\OAuthServerBundle\\Entity\\RefreshToken',
                ],
                'isMappedSuperclass' => [
                    true,
                ],
                'fieldMappings' => [
                    [
                        'token' => [
                            'fieldName' => 'token',
                            'type' => 'string',
                            'columnName' => 'token',
                            'unique' => true,
                        ],
                        'expiresAt' => [
                            'fieldName' => 'expiresAt',
                            'type' => 'integer',
                            'columnName' => 'expires_at',
                            'nullable' => true,
                        ],
                        'scope' => [
                            'fieldName' => 'scope',
                            'type' => 'string',
                            'columnName' => 'scope',
                            'nullable' => true,
                        ],
                    ],
                ],
                'fieldNames' => [
                    [
                        'token' => 'token',
                        'expires_at' => 'expiresAt',
                        'scope' => 'scope',
                    ],
                ],
                'columnNames' => [
                    [
                        'token' => 'token',
                        'expiresAt' => 'expires_at',
                        'scope' => 'scope',
                    ],
                ],
                'table' => [
                    [
                        'name' => 'RefreshToken',
                    ],
                ],
                'idGenerator' => [
                    $o[1],
                ],
            ],
        ],
        $o[0],
        []
    );
},

]];
